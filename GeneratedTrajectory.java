package org.usfirst.frc.team1197.generatedSplines;

public class GeneratedTrajectory extends TorTrajectory {

	public GeneratedTrajectory() {
		super(1, 0);
		time.clear();
		translation.clear();
		rotation.clear();
		inputValues(0, 0, 0, 0, 0, 0, 0);
		inputValues(5, 0, 0.0005, 0.0991, 0, 0, 0);
		inputValues(10, 0, 0.0015, 0.1981, 0, 0, 0);
		inputValues(15, 0, 0.003, 0.2972, 0, 0, 0);
		inputValues(20, 0, 0.005, 0.3962, 0, 0, 0);
		inputValues(25, 0.0001, 0.0074, 0.4953, 0, 0, 0);
		inputValues(30, 0.0001, 0.0104, 0.5944, 0, 0, 0);
		inputValues(35, 0.0002, 0.0139, 0.6934, 0, 0, 0);
		inputValues(40, 0.0003, 0.0178, 0.7925, 0, 0, 0);
		inputValues(45, 0.0004, 0.0223, 0.8915, 0, 0, 0);
		inputValues(50, 0.0005, 0.0272, 0.9906, 0, 0, 0);
		inputValues(55, 0.0006, 0.0327, 1.0897, 0, 0, 0);
		inputValues(60, 0.0008, 0.0386, 1.1887, 0, 0, 0);
		inputValues(65, 0.001, 0.0451, 1.2878, 0, 0, 0);
		inputValues(70, 0.0013, 0.052, 1.3868, 0, 0, 0);
		inputValues(75, 0.0015, 0.0594, 1.4859, 0, 0, 0);
		inputValues(80, 0.0019, 0.0674, 1.585, 0, 0, 0);
		inputValues(85, 0.0022, 0.0758, 1.684, 0, 0, 0);
		inputValues(90, 0.0026, 0.0847, 1.7831, 0, 0, 0);
		inputValues(95, 0.0031, 0.0941, 1.8821, 0, 0, 0);
		inputValues(100, 0.0036, 0.104, 1.9812, 0, 0, 0);
		inputValues(105, 0.0041, 0.1144, 2.0803, 0, 0, 0);
		inputValues(110, 0.0047, 0.1253, 2.1793, 0, 0, 0);
		inputValues(115, 0.0054, 0.1367, 2.2784, 0, 0, 0);
		inputValues(120, 0.0061, 0.1486, 2.3774, 0, 0, 0);
		inputValues(125, 0.0068, 0.161, 2.4765, 0, 0, 0);
		inputValues(130, 0.0077, 0.1739, 2.5756, 0, 0, 0);
		inputValues(135, 0.0086, 0.1872, 2.6746, 0, 0, 0);
		inputValues(140, 0.0096, 0.2011, 2.7737, 0, 0, 0);
		inputValues(145, 0.0106, 0.2155, 2.8727, 0, 0, 0);
		inputValues(150, 0.0117, 0.2303, 2.9718, 0, 0, 0);
		inputValues(155, 0.0129, 0.2457, 3.0709, 0, 0, 0);
		inputValues(160, 0.0142, 0.2615, 3.1699, 0, 0, 0);
		inputValues(165, 0.0155, 0.2779, 3.269, 0, 0, 0);
		inputValues(170, 0.0169, 0.2947, 3.368, 0, 0, 0);
		inputValues(175, 0.0185, 0.312, 3.4671, 0, 0, 0);
		inputValues(180, 0.0201, 0.3299, 3.5662, 0, 0, 0);
		inputValues(185, 0.0218, 0.3482, 3.6652, 0, 0, 0);
		inputValues(190, 0.0236, 0.367, 3.7643, 0, 0, 0);
		inputValues(195, 0.0254, 0.3863, 3.8633, 0, 0, 0);
		inputValues(200, 0.0274, 0.4061, 3.9624, 0, 0, 0);
		inputValues(205, 0.0295, 0.4265, 4.0615, 0, 0, 0);
		inputValues(210, 0.0317, 0.4473, 4.1605, 0, 0, 0);
		inputValues(215, 0.034, 0.4686, 4.2596, 0, 0, 0);
		inputValues(220, 0.0364, 0.4903, 4.3586, 0, 0, 0);
		inputValues(225, 0.0389, 0.5126, 4.4577, 0, 0, 0);
		inputValues(230, 0.0415, 0.5354, 4.5568, 0, 0, 0);
		inputValues(235, 0.0442, 0.5587, 4.6558, 0, 0, 0);
		inputValues(240, 0.0471, 0.5825, 4.7549, 0, 0, 0);
		inputValues(245, 0.0501, 0.6067, 4.8539, 0, 0, 0);
		inputValues(250, 0.0532, 0.6315, 4.953, 0, 0, 0);
		inputValues(255, 0.0564, 0.6568, 5.0521, 0, 0, 0);
		inputValues(260, 0.0597, 0.6825, 5.1511, 0, 0, 0);
		inputValues(265, 0.0632, 0.7088, 5.2502, 0, 0, 0);
		inputValues(270, 0.0668, 0.7355, 5.3492, 0, 0, 0);
		inputValues(275, 0.0706, 0.7628, 5.4483, 0, 0, 0);
		inputValues(280, 0.0744, 0.7905, 5.5474, 0, 0, 0);
		inputValues(285, 0.0785, 0.8187, 5.6464, 0, 0, 0);
		inputValues(290, 0.0826, 0.8475, 5.7455, 0, 0, 0);
		inputValues(295, 0.0869, 0.8762, 5.7455, 0, 0, 0);
		inputValues(300, 0.0914, 0.9044, 5.6464, 0, 0, 0);
		inputValues(305, 0.096, 0.9322, 5.5474, 0, 0, 0);
		inputValues(310, 0.1007, 0.9594, 5.4483, 0, 0, 0);
		inputValues(315, 0.1056, 0.9861, 5.3492, 0, 0, 0);
		inputValues(320, 0.1106, 1.0124, 5.2502, 0, 0, 0);
		inputValues(325, 0.1157, 1.0381, 5.1511, 0, 0, 0);
		inputValues(330, 0.1209, 1.0634, 5.0521, 0, 0, 0);
		inputValues(335, 0.1263, 1.0882, 4.953, 0, 0, 0);
		inputValues(340, 0.1318, 1.1124, 4.8539, 0, 0, 0);
		inputValues(345, 0.1375, 1.1362, 4.7549, 0, 0, 0);
		inputValues(350, 0.1432, 1.1595, 4.6558, 0, 0, 0);
		inputValues(355, 0.149, 1.1823, 4.5568, 0, 0, 0);
		inputValues(360, 0.155, 1.2046, 4.4577, 0, 0, 0);
		inputValues(365, 0.1611, 1.2264, 4.3586, 0, 0, 0);
		inputValues(370, 0.1673, 1.2477, 4.2596, 0, 0, 0);
		inputValues(375, 0.1736, 1.2685, 4.1605, 0, 0, 0);
		inputValues(380, 0.18, 1.2888, 4.0615, 0, 0, 0);
		inputValues(385, 0.1865, 1.3086, 3.9624, 0, 0, 0);
		inputValues(390, 0.193, 1.3279, 3.8633, 0, 0, 0);
		inputValues(395, 0.1997, 1.3467, 3.7643, 0, 0, 0);
		inputValues(400, 0.2065, 1.365, 3.6652, 0, 0, 0);
		inputValues(405, 0.2134, 1.3829, 3.5662, 0, 0, 0);
		inputValues(410, 0.2203, 1.4002, 3.4671, 0, 0, 0);
		inputValues(415, 0.2274, 1.4171, 3.368, 0, 0, 0);
		inputValues(420, 0.2345, 1.4334, 3.269, 0, 0, 0);
		inputValues(425, 0.2417, 1.4492, 3.1699, 0, 0, 0);
		inputValues(430, 0.249, 1.4646, 3.0709, 0, 0, 0);
		inputValues(435, 0.2564, 1.4795, 2.9718, 0, 0, 0);
		inputValues(440, 0.2638, 1.4938, 2.8727, 0, 0, 0);
		inputValues(445, 0.2713, 1.5077, 2.7737, 0, 0, 0);
		inputValues(450, 0.2789, 1.5211, 2.6746, 0, 0, 0);
		inputValues(455, 0.2865, 1.5339, 2.5756, 0, 0, 0);
		inputValues(460, 0.2942, 1.5463, 2.4765, 0, 0, 0);
		inputValues(465, 0.302, 1.5582, 2.3774, 0, 0, 0);
		inputValues(470, 0.3098, 1.5696, 2.2784, 0, 0, 0);
		inputValues(475, 0.3177, 1.5805, 2.1793, 0, 0, 0);
		inputValues(480, 0.3256, 1.5909, 2.0803, 0, 0, 0);
		inputValues(485, 0.3336, 1.6008, 1.9812, 0, 0, 0);
		inputValues(490, 0.3416, 1.6102, 1.8821, 0, 0, 0);
		inputValues(495, 0.3497, 1.6191, 1.7831, 0, 0, 0);
		inputValues(500, 0.3578, 1.6276, 1.684, 0, 0, 0);
		inputValues(505, 0.3659, 1.6355, 1.585, 0, 0, 0);
		inputValues(510, 0.3741, 1.6429, 1.4859, 0, 0, 0);
		inputValues(515, 0.3824, 1.6498, 1.3868, 0, 0, 0);
		inputValues(520, 0.3906, 1.6563, 1.2878, 0, 0, 0);
		inputValues(525, 0.3989, 1.6622, 1.1887, 0, 0, 0);
		inputValues(530, 0.4073, 1.6677, 1.0897, 0, 0, 0);
		inputValues(535, 0.4156, 1.6726, 0.9906, 0, 0, 0);
		inputValues(540, 0.424, 1.6771, 0.8915, 0, 0, 0);
		inputValues(545, 0.4324, 1.681, 0.7925, 0, 0, 0);
		inputValues(550, 0.4408, 1.6845, 0.6934, 0, 0, 0);
		inputValues(555, 0.4492, 1.6875, 0.5944, 0, 0, 0);
		inputValues(560, 0.4577, 1.69, 0.4953, 0, 0, 0);
		inputValues(565, 0.4661, 1.6919, 0.3962, 0, 0, 0);
		inputValues(570, 0.4746, 1.6934, 0.2972, 0, 0, 0);
		inputValues(575, 0.4831, 1.6944, 0.1981, 0, 0, 0);
		inputValues(580, 0.4915, 1.6949, 0.0991, 0, 0, 0);
		inputValues(585, 0.5, 1.6949, 0, 0, 0, 0);
		inputValues(590, 0.5085, 1.6949, 0, 0, 0, 0);
		inputValues(595, 0.5169, 1.6944, -0.0991, 0, 0, 0);
		inputValues(600, 0.5254, 1.6934, -0.1981, 0, 0, 0);
		inputValues(605, 0.5339, 1.6919, -0.2972, 0, 0, 0);
		inputValues(610, 0.5423, 1.69, -0.3962, 0, 0, 0);
		inputValues(615, 0.5508, 1.6875, -0.4953, 0, 0, 0);
		inputValues(620, 0.5592, 1.6845, -0.5944, 0, 0, 0);
		inputValues(625, 0.5676, 1.681, -0.6934, 0, 0, 0);
		inputValues(630, 0.576, 1.6771, -0.7925, 0, 0, 0);
		inputValues(635, 0.5844, 1.6726, -0.8915, 0, 0, 0);
		inputValues(640, 0.5927, 1.6677, -0.9906, 0, 0, 0);
		inputValues(645, 0.6011, 1.6622, -1.0897, 0, 0, 0);
		inputValues(650, 0.6094, 1.6563, -1.1887, 0, 0, 0);
		inputValues(655, 0.6176, 1.6498, -1.2878, 0, 0, 0);
		inputValues(660, 0.6259, 1.6429, -1.3868, 0, 0, 0);
		inputValues(665, 0.6341, 1.6355, -1.4859, 0, 0, 0);
		inputValues(670, 0.6422, 1.6276, -1.585, 0, 0, 0);
		inputValues(675, 0.6503, 1.6191, -1.684, 0, 0, 0);
		inputValues(680, 0.6584, 1.6102, -1.7831, 0, 0, 0);
		inputValues(685, 0.6664, 1.6008, -1.8821, 0, 0, 0);
		inputValues(690, 0.6744, 1.5909, -1.9812, 0, 0, 0);
		inputValues(695, 0.6823, 1.5805, -2.0803, 0, 0, 0);
		inputValues(700, 0.6902, 1.5696, -2.1793, 0, 0, 0);
		inputValues(705, 0.698, 1.5582, -2.2784, 0, 0, 0);
		inputValues(710, 0.7058, 1.5463, -2.3774, 0, 0, 0);
		inputValues(715, 0.7135, 1.5339, -2.4765, 0, 0, 0);
		inputValues(720, 0.7211, 1.5211, -2.5756, 0, 0, 0);
		inputValues(725, 0.7287, 1.5077, -2.6746, 0, 0, 0);
		inputValues(730, 0.7362, 1.4938, -2.7737, 0, 0, 0);
		inputValues(735, 0.7436, 1.4795, -2.8727, 0, 0, 0);
		inputValues(740, 0.751, 1.4646, -2.9718, 0, 0, 0);
		inputValues(745, 0.7583, 1.4492, -3.0709, 0, 0, 0);
		inputValues(750, 0.7655, 1.4334, -3.1699, 0, 0, 0);
		inputValues(755, 0.7726, 1.4171, -3.269, 0, 0, 0);
		inputValues(760, 0.7797, 1.4002, -3.368, 0, 0, 0);
		inputValues(765, 0.7866, 1.3829, -3.4671, 0, 0, 0);
		inputValues(770, 0.7935, 1.365, -3.5662, 0, 0, 0);
		inputValues(775, 0.8003, 1.3467, -3.6652, 0, 0, 0);
		inputValues(780, 0.807, 1.3279, -3.7643, 0, 0, 0);
		inputValues(785, 0.8135, 1.3086, -3.8633, 0, 0, 0);
		inputValues(790, 0.82, 1.2888, -3.9624, 0, 0, 0);
		inputValues(795, 0.8264, 1.2685, -4.0615, 0, 0, 0);
		inputValues(800, 0.8327, 1.2477, -4.1605, 0, 0, 0);
		inputValues(805, 0.8389, 1.2264, -4.2596, 0, 0, 0);
		inputValues(810, 0.845, 1.2046, -4.3586, 0, 0, 0);
		inputValues(815, 0.851, 1.1823, -4.4577, 0, 0, 0);
		inputValues(820, 0.8568, 1.1595, -4.5568, 0, 0, 0);
		inputValues(825, 0.8625, 1.1362, -4.6558, 0, 0, 0);
		inputValues(830, 0.8682, 1.1124, -4.7549, 0, 0, 0);
		inputValues(835, 0.8737, 1.0882, -4.8539, 0, 0, 0);
		inputValues(840, 0.8791, 1.0634, -4.953, 0, 0, 0);
		inputValues(845, 0.8843, 1.0381, -5.0521, 0, 0, 0);
		inputValues(850, 0.8894, 1.0124, -5.1511, 0, 0, 0);
		inputValues(855, 0.8944, 0.9861, -5.2502, 0, 0, 0);
		inputValues(860, 0.8993, 0.9594, -5.3492, 0, 0, 0);
		inputValues(865, 0.904, 0.9322, -5.4483, 0, 0, 0);
		inputValues(870, 0.9086, 0.9044, -5.5474, 0, 0, 0);
		inputValues(875, 0.9131, 0.8762, -5.6464, 0, 0, 0);
		inputValues(880, 0.9174, 0.8475, -5.7455, 0, 0, 0);
		inputValues(885, 0.9215, 0.8187, -5.7455, 0, 0, 0);
		inputValues(890, 0.9256, 0.7905, -5.6464, 0, 0, 0);
		inputValues(895, 0.9294, 0.7628, -5.5474, 0, 0, 0);
		inputValues(900, 0.9332, 0.7355, -5.4483, 0, 0, 0);
		inputValues(905, 0.9368, 0.7088, -5.3492, 0, 0, 0);
		inputValues(910, 0.9403, 0.6825, -5.2502, 0, 0, 0);
		inputValues(915, 0.9436, 0.6568, -5.1511, 0, 0, 0);
		inputValues(920, 0.9468, 0.6315, -5.0521, 0, 0, 0);
		inputValues(925, 0.9499, 0.6067, -4.953, 0, 0, 0);
		inputValues(930, 0.9529, 0.5825, -4.8539, 0, 0, 0);
		inputValues(935, 0.9558, 0.5587, -4.7549, 0, 0, 0);
		inputValues(940, 0.9585, 0.5354, -4.6558, 0, 0, 0);
		inputValues(945, 0.9611, 0.5126, -4.5568, 0, 0, 0);
		inputValues(950, 0.9636, 0.4903, -4.4577, 0, 0, 0);
		inputValues(955, 0.966, 0.4686, -4.3586, 0, 0, 0);
		inputValues(960, 0.9683, 0.4473, -4.2596, 0, 0, 0);
		inputValues(965, 0.9705, 0.4265, -4.1605, 0, 0, 0);
		inputValues(970, 0.9726, 0.4061, -4.0615, 0, 0, 0);
		inputValues(975, 0.9746, 0.3863, -3.9624, 0, 0, 0);
		inputValues(980, 0.9764, 0.367, -3.8633, 0, 0, 0);
		inputValues(985, 0.9782, 0.3482, -3.7643, 0, 0, 0);
		inputValues(990, 0.9799, 0.3299, -3.6652, 0, 0, 0);
		inputValues(995, 0.9815, 0.312, -3.5662, 0, 0, 0);
		inputValues(1000, 0.9831, 0.2947, -3.4671, 0, 0, 0);
		inputValues(1005, 0.9845, 0.2779, -3.368, 0, 0, 0);
		inputValues(1010, 0.9858, 0.2615, -3.269, 0, 0, 0);
		inputValues(1015, 0.9871, 0.2457, -3.1699, 0, 0, 0);
		inputValues(1020, 0.9883, 0.2303, -3.0709, 0, 0, 0);
		inputValues(1025, 0.9894, 0.2155, -2.9718, 0, 0, 0);
		inputValues(1030, 0.9904, 0.2011, -2.8727, 0, 0, 0);
		inputValues(1035, 0.9914, 0.1872, -2.7737, 0, 0, 0);
		inputValues(1040, 0.9923, 0.1739, -2.6746, 0, 0, 0);
		inputValues(1045, 0.9932, 0.161, -2.5756, 0, 0, 0);
		inputValues(1050, 0.9939, 0.1486, -2.4765, 0, 0, 0);
		inputValues(1055, 0.9946, 0.1367, -2.3774, 0, 0, 0);
		inputValues(1060, 0.9953, 0.1253, -2.2784, 0, 0, 0);
		inputValues(1065, 0.9959, 0.1144, -2.1793, 0, 0, 0);
		inputValues(1070, 0.9964, 0.104, -2.0803, 0, 0, 0);
		inputValues(1075, 0.9969, 0.0941, -1.9812, 0, 0, 0);
		inputValues(1080, 0.9974, 0.0847, -1.8821, 0, 0, 0);
		inputValues(1085, 0.9978, 0.0758, -1.7831, 0, 0, 0);
		inputValues(1090, 0.9981, 0.0674, -1.684, 0, 0, 0);
		inputValues(1095, 0.9985, 0.0594, -1.585, 0, 0, 0);
		inputValues(1100, 0.9987, 0.052, -1.4859, 0, 0, 0);
		inputValues(1105, 0.999, 0.0451, -1.3868, 0, 0, 0);
		inputValues(1110, 0.9992, 0.0386, -1.2878, 0, 0, 0);
		inputValues(1115, 0.9994, 0.0327, -1.1887, 0, 0, 0);
		inputValues(1120, 0.9995, 0.0272, -1.0897, 0, 0, 0);
		inputValues(1125, 0.9996, 0.0223, -0.9906, 0, 0, 0);
		inputValues(1130, 0.9997, 0.0178, -0.8915, 0, 0, 0);
		inputValues(1135, 0.9998, 0.0139, -0.7925, 0, 0, 0);
		inputValues(1140, 0.9999, 0.0104, -0.6934, 0, 0, 0);
		inputValues(1145, 0.9999, 0.0074, -0.5944, 0, 0, 0);
		inputValues(1150, 1, 0.005, -0.4953, 0, 0, 0);
		inputValues(1155, 1, 0.003, -0.3962, 0, 0, 0);
		inputValues(1160, 1, 0.0015, -0.2972, 0, 0, 0);
		inputValues(1165, 1, 0.0005, -0.1981, 0, 0, 0);
		inputValues(1170, 1, 0, -0.0991, 0, 0, 0);
		inputValues(1175, 1, 0, 0, 0, 0, 0);
		inputValues(1175, 1, 0, 0, 0, 0, 0);
	}

	public void inputValues(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}