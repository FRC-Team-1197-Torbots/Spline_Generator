package org.usfirst.frc.team1197.robot;

public class testSpline extends TorTrajectory {

	public testSpline() {
		super(3.0447, 1.0385);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0992, 0, 0, 0);
		testMethod(10, -0, -0.0015, -0.1984, 0, 0, 0);
		testMethod(15, -0, -0.003, -0.2976, 0, 0, 0);
		testMethod(20, -0, -0.005, -0.3968, 0, 0, 0);
		testMethod(25, -0.0001, -0.0074, -0.496, 0, 0, 0);
		testMethod(30, -0.0001, -0.0104, -0.5952, 0, 0, 0);
		testMethod(35, -0.0002, -0.0139, -0.6944, 0, 0, 0);
		testMethod(40, -0.0003, -0.0179, -0.7936, 0, 0, 0);
		testMethod(45, -0.0004, -0.0223, -0.8928, 0, 0, 0);
		testMethod(50, -0.0005, -0.0273, -0.992, 0, 0, 0);
		testMethod(55, -0.0006, -0.0327, -1.0912, 0, 0, 0);
		testMethod(60, -0.0008, -0.0387, -1.1904, 0, 0, 0);
		testMethod(65, -0.001, -0.0451, -1.2896, 0, 0, 0);
		testMethod(70, -0.0013, -0.0521, -1.3888, 0, 0, 0);
		testMethod(75, -0.0015, -0.0595, -1.488, 0, 0, 0);
		testMethod(80, -0.0019, -0.0675, -1.5872, 0, 0, 0);
		testMethod(85, -0.0022, -0.0759, -1.6864, 0, 0, 0);
		testMethod(90, -0.0026, -0.0848, -1.7856, 0, 0, 0);
		testMethod(95, -0.0031, -0.0942, -1.8848, 0, 0, 0);
		testMethod(100, -0.0036, -0.1042, -1.9841, 0, 0, 0);
		testMethod(105, -0.0041, -0.1146, -2.0833, 0, 0, 0);
		testMethod(110, -0.0047, -0.1255, -2.1825, 0, 0, 0);
		testMethod(115, -0.0054, -0.1369, -2.2817, 0, 0, 0);
		testMethod(120, -0.0061, -0.1488, -2.3809, 0, 0, 0);
		testMethod(125, -0.0069, -0.1612, -2.4801, 0, 0, 0);
		testMethod(130, -0.0077, -0.1741, -2.5793, 0, 0, 0);
		testMethod(135, -0.0086, -0.1875, -2.6785, 0, 0, 0);
		testMethod(140, -0.0096, -0.2014, -2.7777, 0, 0, 0);
		testMethod(145, -0.0106, -0.2158, -2.8769, 0, 0, 0);
		testMethod(150, -0.0117, -0.2306, -2.9761, 0, 0, 0);
		testMethod(155, -0.0129, -0.246, -3.0753, 0, 0, 0);
		testMethod(160, -0.0142, -0.2619, -3.1745, 0, 0, 0);
		testMethod(165, -0.0155, -0.2783, -3.2737, 0, 0, 0);
		testMethod(170, -0.017, -0.2951, -3.3729, 0, 0, 0);
		testMethod(175, -0.0185, -0.3125, -3.4721, 0, 0, 0);
		testMethod(180, -0.0201, -0.3298, -3.4721, 0, 0, 0);
		testMethod(185, -0.0218, -0.3472, -3.4721, 0, 0, 0);
		testMethod(190, -0.0236, -0.3646, -3.4721, 0, 0, 0);
		testMethod(195, -0.0254, -0.3819, -3.4721, 0, 0, 0);
		testMethod(200, -0.0274, -0.3993, -3.4721, 0, 0, 0);
		testMethod(205, -0.0294, -0.4167, -3.4721, 0, 0, 0);
		testMethod(210, -0.0316, -0.434, -3.4721, 0, 0, 0);
		testMethod(215, -0.0338, -0.4514, -3.4721, 0, 0, 0);
		testMethod(220, -0.0361, -0.4687, -3.4721, 0, 0, 0);
		testMethod(225, -0.0385, -0.4861, -3.4721, 0, 0, 0);
		testMethod(230, -0.0409, -0.5035, -3.4721, 0, 0, 0);
		testMethod(235, -0.0435, -0.5208, -3.4721, 0, 0, 0);
		testMethod(240, -0.0461, -0.5382, -3.4721, 0, 0, 0);
		testMethod(245, -0.0489, -0.5555, -3.4721, 0, 0, 0);
		testMethod(250, -0.0517, -0.5729, -3.4721, 0, 0, 0);
		testMethod(255, -0.0546, -0.5903, -3.4721, 0, 0, 0);
		testMethod(260, -0.0576, -0.6076, -3.4721, 0, 0, 0);
		testMethod(265, -0.0607, -0.625, -3.4721, 0, 0, 0);
		testMethod(270, -0.0638, -0.6423, -3.4721, 0, 0, 0);
		testMethod(275, -0.0671, -0.6597, -3.4721, 0, 0, 0);
		testMethod(280, -0.0704, -0.6771, -3.4721, 0, 0, 0);
		testMethod(285, -0.0739, -0.6944, -3.4721, 0, 0, 0);
		testMethod(290, -0.0774, -0.7118, -3.4721, 0, 0, 0);
		testMethod(295, -0.081, -0.7291, -3.4721, 0, 0, 0);
		testMethod(300, -0.0847, -0.7465, -3.4721, 0, 0, 0);
		testMethod(305, -0.0885, -0.7639, -3.4721, 0, 0, 0);
		testMethod(310, -0.0923, -0.7812, -3.4721, 0, 0, 0);
		testMethod(315, -0.0963, -0.7986, -3.4721, 0, 0, 0);
		testMethod(320, -0.1003, -0.8159, -3.4721, 0, 0, 0);
		testMethod(325, -0.1044, -0.8333, -3.4721, 0, 0, 0);
		testMethod(330, -0.1086, -0.8507, -3.4721, 0, 0, 0);
		testMethod(335, -0.1129, -0.868, -3.4721, 0, 0, 0);
		testMethod(340, -0.1173, -0.8854, -3.4721, 0, 0, 0);
		testMethod(345, -0.1218, -0.9027, -3.4721, 0, 0, 0);
		testMethod(350, -0.1263, -0.9201, -3.4721, 0, 0, 0);
		testMethod(355, -0.131, -0.9375, -3.4721, 0, 0, 0);
		testMethod(360, -0.1357, -0.9548, -3.4721, 0, 0, 0);
		testMethod(365, -0.1405, -0.9722, -3.4721, 0, 0, 0);
		testMethod(370, -0.1454, -0.9895, -3.4721, 0, 0, 0);
		testMethod(375, -0.1504, -1.0069, -3.4721, 0, 0, 0);
		testMethod(380, -0.1555, -1.0243, -3.4721, 0, 0, 0);
		testMethod(385, -0.1607, -1.0416, -3.4721, 0, 0, 0);
		testMethod(390, -0.1659, -1.059, -3.4721, 0, 0, 0);
		testMethod(395, -0.1713, -1.0763, -3.4721, 0, 0, 0);
		testMethod(400, -0.1767, -1.0937, -3.4721, 0, 0, 0);
		testMethod(405, -0.1822, -1.1111, -3.4721, 0, 0, 0);
		testMethod(410, -0.1878, -1.1284, -3.4721, 0, 0, 0);
		testMethod(415, -0.1935, -1.1458, -3.4721, 0, 0, 0);
		testMethod(420, -0.1993, -1.1632, -3.4721, 0, 0, 0);
		testMethod(425, -0.2051, -1.1805, -3.4721, 0, 0, 0);
		testMethod(430, -0.2111, -1.1979, -3.4721, 0, 0, 0);
		testMethod(435, -0.2171, -1.2152, -3.4721, 0, 0, 0);
		testMethod(440, -0.2232, -1.2326, -3.4721, 0, 0, 0);
		testMethod(445, -0.2294, -1.25, -3.4721, 0, 0, 0);
		testMethod(450, -0.2357, -1.2673, -3.4721, 0, 0, 0);
		testMethod(455, -0.2421, -1.2847, -3.4721, 0, 0, 0);
		testMethod(460, -0.2486, -1.302, -3.4721, 0, 0, 0);
		testMethod(465, -0.2551, -1.3194, -3.4721, 0, 0, 0);
		testMethod(470, -0.2618, -1.3368, -3.4721, 0, 0, 0);
		testMethod(475, -0.2685, -1.3541, -3.4721, 0, 0, 0);
		testMethod(480, -0.2753, -1.3715, -3.4721, 0, 0, 0);
		testMethod(485, -0.2822, -1.3888, -3.4721, 0, 0, 0);
		testMethod(490, -0.2892, -1.4062, -3.4721, 0, 0, 0);
		testMethod(495, -0.2963, -1.4236, -3.4721, 0, 0, 0);
		testMethod(500, -0.3034, -1.4409, -3.4721, 0, 0, 0);
		testMethod(505, -0.3107, -1.4583, -3.4721, 0, 0, 0);
		testMethod(510, -0.318, -1.4756, -3.4721, 0, 0, 0);
		testMethod(515, -0.3254, -1.493, -3.4721, 0, 0, 0);
		testMethod(520, -0.3329, -1.5104, -3.4721, 0, 0, 0);
		testMethod(525, -0.3405, -1.5277, -3.4721, 0, 0, 0);
		testMethod(530, -0.3482, -1.5451, -3.4721, 0, 0, 0);
		testMethod(535, -0.356, -1.5624, -3.4721, 0, 0, 0);
		testMethod(540, -0.3638, -1.5798, -3.4721, 0, 0, 0);
		testMethod(545, -0.3718, -1.5972, -3.4721, 0, 0, 0);
		testMethod(550, -0.3798, -1.6145, -3.4721, 0, 0, 0);
		testMethod(555, -0.3879, -1.6319, -3.4721, 0, 0, 0);
		testMethod(560, -0.3961, -1.6487, -3.3729, 0, 0, 0);
		testMethod(565, -0.4044, -1.6651, -3.2737, 0, 0, 0);
		testMethod(570, -0.4128, -1.681, -3.1745, 0, 0, 0);
		testMethod(575, -0.4212, -1.6964, -3.0753, 0, 0, 0);
		testMethod(580, -0.4297, -1.7112, -2.9761, 0, 0, 0);
		testMethod(585, -0.4383, -1.7256, -2.8769, 0, 0, 0);
		testMethod(590, -0.447, -1.7395, -2.7777, 0, 0, 0);
		testMethod(595, -0.4557, -1.7529, -2.6785, 0, 0, 0);
		testMethod(600, -0.4645, -1.7658, -2.5793, 0, 0, 0);
		testMethod(605, -0.4734, -1.7782, -2.4801, 0, 0, 0);
		testMethod(610, -0.4823, -1.7901, -2.3809, 0, 0, 0);
		testMethod(615, -0.4913, -1.8015, -2.2817, 0, 0, 0);
		testMethod(620, -0.5003, -1.8124, -2.1825, 0, 0, 0);
		testMethod(625, -0.5094, -1.8228, -2.0833, 0, 0, 0);
		testMethod(630, -0.5185, -1.8328, -1.9841, 0, 0, 0);
		testMethod(635, -0.5277, -1.8422, -1.8848, 0, 0, 0);
		testMethod(640, -0.537, -1.8511, -1.7856, 0, 0, 0);
		testMethod(645, -0.5462, -1.8596, -1.6864, 0, 0, 0);
		testMethod(650, -0.5556, -1.8675, -1.5872, 0, 0, 0);
		testMethod(655, -0.5649, -1.8749, -1.488, 0, 0, 0);
		testMethod(660, -0.5743, -1.8819, -1.3888, 0, 0, 0);
		testMethod(665, -0.5837, -1.8883, -1.2896, 0, 0, 0);
		testMethod(670, -0.5932, -1.8943, -1.1904, 0, 0, 0);
		testMethod(675, -0.6027, -1.8997, -1.0912, 0, 0, 0);
		testMethod(680, -0.6122, -1.9047, -0.992, 0, 0, 0);
		testMethod(685, -0.6217, -1.9092, -0.8928, 0, 0, 0);
		testMethod(690, -0.6313, -1.9131, -0.7936, 0, 0, 0);
		testMethod(695, -0.6408, -1.9166, -0.6944, 0, 0, 0);
		testMethod(700, -0.6504, -1.9196, -0.5952, 0, 0, 0);
		testMethod(705, -0.66, -1.922, -0.496, 0, 0, 0);
		testMethod(710, -0.6697, -1.924, -0.3968, 0, 0, 0);
		testMethod(715, -0.6793, -1.9255, -0.2976, 0, 0, 0);
		testMethod(720, -0.6889, -1.9265, -0.1984, 0, 0, 0);
		testMethod(725, -0.6985, -1.927, -0.0992, 0, 0, 0);
		testMethod(730, -0.7082, -1.927, -0, 0, 0, 0);
		testMethod(735, -0.7178, -1.927, -0, 0, 0, 0);
		testMethod(740, -0.7274, -1.927, -0, 0, 0, 0);
		testMethod(745, -0.7371, -1.927, -0, 0, 0, 0);
		testMethod(750, -0.7467, -1.927, -0, 0, 0, 0);
		testMethod(755, -0.7564, -1.927, -0, 0, 0, 0);
		testMethod(760, -0.766, -1.927, -0, 0, 0, 0);
		testMethod(765, -0.7756, -1.927, -0, 0, 0, 0);
		testMethod(770, -0.7853, -1.927, -0, 0, 0, 0);
		testMethod(775, -0.7949, -1.927, -0, 0, 0, 0);
		testMethod(780, -0.8045, -1.927, -0, 0, 0, 0);
		testMethod(785, -0.8142, -1.927, -0, 0, 0, 0);
		testMethod(790, -0.8238, -1.927, -0, 0, 0, 0);
		testMethod(795, -0.8334, -1.927, -0, 0, 0, 0);
		testMethod(800, -0.8431, -1.927, -0, 0, 0, 0);
		testMethod(805, -0.8527, -1.927, -0, 0, 0, 0);
		testMethod(810, -0.8623, -1.927, -0, 0, 0, 0);
		testMethod(815, -0.872, -1.927, -0, 0, 0, 0);
		testMethod(820, -0.8816, -1.927, -0, 0, 0, 0);
		testMethod(825, -0.8912, -1.927, -0, 0, 0, 0);
		testMethod(830, -0.9009, -1.927, -0, 0, 0, 0);
		testMethod(835, -0.9105, -1.927, -0, 0, 0, 0);
		testMethod(840, -0.9201, -1.927, -0, 0, 0, 0);
		testMethod(845, -0.9298, -1.927, -0, 0, 0, 0);
		testMethod(850, -0.9394, -1.927, -0, 0, 0, 0);
		testMethod(855, -0.9491, -1.927, -0, 0, 0, 0);
		testMethod(860, -0.9587, -1.927, -0, 0, 0, 0);
		testMethod(865, -0.9683, -1.927, -0, 0, 0, 0);
		testMethod(870, -0.978, -1.927, -0, 0, 0, 0);
		testMethod(875, -0.9876, -1.927, -0, 0, 0, 0);
		testMethod(880, -0.9972, -1.927, -0, 0, 0, 0);
		testMethod(885, -1.0069, -1.927, -0, 0, 0, 0);
		testMethod(890, -1.0165, -1.927, -0, 0, 0, 0);
		testMethod(895, -1.0261, -1.927, -0, 0, 0, 0);
		testMethod(900, -1.0358, -1.927, -0, 0, 0, 0);
		testMethod(905, -1.0454, -1.927, -0, 0, 0, 0);
		testMethod(910, -1.055, -1.927, -0, 0, 0, 0);
		testMethod(915, -1.0647, -1.927, -0, 0, 0, 0);
		testMethod(920, -1.0743, -1.927, -0, 0, 0, 0);
		testMethod(925, -1.0839, -1.927, -0, 0, 0, 0);
		testMethod(930, -1.0936, -1.927, -0, 0, 0, 0);
		testMethod(935, -1.1032, -1.927, -0, 0, 0, 0);
		testMethod(940, -1.1128, -1.927, -0, 0, 0, 0);
		testMethod(945, -1.1225, -1.927, -0, 0, 0, 0);
		testMethod(950, -1.1321, -1.927, -0, 0, 0, 0);
		testMethod(955, -1.1418, -1.927, -0, 0, 0, 0);
		testMethod(960, -1.1514, -1.927, -0, 0, 0, 0);
		testMethod(965, -1.161, -1.927, -0, 0, 0, 0);
		testMethod(970, -1.1707, -1.927, -0, 0, 0, 0);
		testMethod(975, -1.1803, -1.927, -0, 0, 0, 0);
		testMethod(980, -1.1899, -1.927, -0, 0, 0, 0);
		testMethod(985, -1.1996, -1.927, -0, 0, 0, 0);
		testMethod(990, -1.2092, -1.927, -0, 0, 0, 0);
		testMethod(995, -1.2188, -1.927, -0, 0, 0, 0);
		testMethod(1000, -1.2285, -1.927, -0, 0, 0, 0);
		testMethod(1005, -1.2381, -1.927, -0, 0, 0, 0);
		testMethod(1010, -1.2477, -1.927, -0, 0, 0, 0);
		testMethod(1015, -1.2574, -1.927, -0, 0, 0, 0);
		testMethod(1020, -1.267, -1.927, -0, 0, 0, 0);
		testMethod(1025, -1.2766, -1.927, -0, 0, 0, 0);
		testMethod(1030, -1.2863, -1.927, -0, 0, 0, 0);
		testMethod(1035, -1.2959, -1.927, -0, 0, 0, 0);
		testMethod(1040, -1.3055, -1.927, -0, 0, 0, 0);
		testMethod(1045, -1.3152, -1.927, -0, 0, 0, 0);
		testMethod(1050, -1.3248, -1.927, -0, 0, 0, 0);
		testMethod(1055, -1.3345, -1.927, -0, 0, 0, 0);
		testMethod(1060, -1.3441, -1.927, -0, 0, 0.0005, 0.0907);
		testMethod(1065, -1.3537, -1.927, -0, 0, 0.0019, 0.2895);
		testMethod(1070, -1.3634, -1.927, -0, 0, 0.0043, 0.4885);
		testMethod(1075, -1.373, -1.927, -0, 0.0001, 0.0078, 0.6875);
		testMethod(1080, -1.3826, -1.927, -0, 0.0001, 0.0122, 0.8865);
		testMethod(1085, -1.3923, -1.927, -0, 0.0002, 0.0176, 1.0855);
		testMethod(1090, -1.4019, -1.927, -0, 0.0003, 0.0241, 1.2845);
		testMethod(1095, -1.4115, -1.927, -0, 0.0004, 0.0315, 1.4835);
		testMethod(1100, -1.4212, -1.927, -0, 0.0006, 0.0399, 1.6825);
		testMethod(1105, -1.4308, -1.927, -0, 0.0008, 0.0493, 1.8815);
		testMethod(1110, -1.4404, -1.927, -0, 0.0011, 0.0597, 2.0805);
		testMethod(1115, -1.4501, -1.927, -0, 0.0014, 0.0711, 2.2794);
		testMethod(1120, -1.4597, -1.927, -0, 0.0018, 0.0835, 2.4784);
		testMethod(1125, -1.4693, -1.927, -0, 0.0023, 0.0969, 2.6774);
		testMethod(1130, -1.479, -1.927, -0, 0.0028, 0.1113, 2.8764);
		testMethod(1135, -1.4886, -1.927, -0, 0.0034, 0.1266, 3.0754);
		testMethod(1140, -1.4983, -1.927, -0, 0.004, 0.143, 3.2744);
		testMethod(1145, -1.5079, -1.927, -0, 0.0048, 0.1604, 3.4734);
		testMethod(1150, -1.5175, -1.927, -0, 0.0056, 0.1787, 3.6724);
		testMethod(1155, -1.5272, -1.927, -0, 0.0066, 0.1981, 3.8714);
		testMethod(1160, -1.5368, -1.927, -0, 0.0076, 0.2184, 4.0704);
		testMethod(1165, -1.5464, -1.927, -0, 0.0088, 0.2398, 4.2693);
		testMethod(1170, -1.5561, -1.927, -0, 0.01, 0.2621, 4.4683);
		testMethod(1175, -1.5657, -1.927, -0, 0.0114, 0.2855, 4.6673);
		testMethod(1180, -1.5753, -1.927, -0, 0.0129, 0.3098, 4.8663);
		testMethod(1185, -1.585, -1.927, -0, 0.0145, 0.3351, 5.0653);
		testMethod(1190, -1.5946, -1.927, -0, 0.0162, 0.3615, 5.2643);
		testMethod(1195, -1.6042, -1.927, -0, 0.0181, 0.3888, 5.4633);
		testMethod(1200, -1.6139, -1.927, -0, 0.0201, 0.4171, 5.6623);
		testMethod(1205, -1.6235, -1.927, -0, 0.0223, 0.4464, 5.8613);
		testMethod(1210, -1.6331, -1.927, -0, 0.0246, 0.4767, 6.0603);
		testMethod(1215, -1.6428, -1.927, -0, 0.0271, 0.508, 6.2593);
		testMethod(1220, -1.6524, -1.927, -0, 0.0297, 0.5403, 6.4582);
		testMethod(1225, -1.662, -1.927, -0, 0.0325, 0.5736, 6.6572);
		testMethod(1230, -1.6717, -1.927, -0, 0.0354, 0.6078, 6.8562);
		testMethod(1235, -1.6813, -1.927, -0, 0.0385, 0.6431, 7.0552);
		testMethod(1240, -1.691, -1.927, -0, 0.0418, 0.6794, 7.2542);
		testMethod(1245, -1.7006, -1.927, -0, 0.0453, 0.7167, 7.4532);
		testMethod(1250, -1.7102, -1.927, -0, 0.049, 0.7549, 7.6522);
		testMethod(1255, -1.7199, -1.927, -0, 0.0529, 0.7942, 7.8512);
		testMethod(1260, -1.7295, -1.927, -0, 0.057, 0.8344, 8.0502);
		testMethod(1265, -1.7391, -1.927, -0, 0.0612, 0.8757, 8.2492);
		testMethod(1270, -1.7488, -1.927, -0, 0.0657, 0.9179, 8.4482);
		testMethod(1275, -1.7584, -1.927, -0, 0.0704, 0.9608, 8.576);
		testMethod(1280, -1.768, -1.927, -0, 0.0753, 1.0025, 8.3341);
		testMethod(1285, -1.7777, -1.927, -0, 0.0804, 1.0431, 8.1351);
		testMethod(1290, -1.7873, -1.927, -0, 0.0858, 1.0828, 7.9361);
		testMethod(1295, -1.7969, -1.927, -0, 0.0913, 1.1215, 7.7371);
		testMethod(1300, -1.8066, -1.927, -0, 0.097, 1.1592, 7.5381);
		testMethod(1305, -1.8162, -1.927, -0, 0.1029, 1.1959, 7.3391);
		testMethod(1310, -1.8258, -1.927, -0, 0.1089, 1.2316, 7.1401);
		testMethod(1315, -1.8355, -1.927, -0, 0.1152, 1.2663, 6.9411);
		testMethod(1320, -1.8451, -1.927, -0, 0.1216, 1.3, 6.7421);
		testMethod(1325, -1.8547, -1.927, -0, 0.1282, 1.3327, 6.5432);
		testMethod(1330, -1.8644, -1.927, -0, 0.1349, 1.3644, 6.3442);
		testMethod(1335, -1.874, -1.927, -0, 0.1418, 1.3952, 6.1452);
		testMethod(1340, -1.8837, -1.927, -0, 0.1489, 1.4249, 5.9462);
		testMethod(1345, -1.8933, -1.927, -0, 0.1561, 1.4536, 5.7472);
		testMethod(1350, -1.9029, -1.927, -0, 0.1634, 1.4814, 5.5482);
		testMethod(1355, -1.9126, -1.927, -0, 0.1709, 1.5081, 5.3492);
		testMethod(1360, -1.9222, -1.927, -0, 0.1785, 1.5339, 5.1502);
		testMethod(1365, -1.9318, -1.927, -0, 0.1862, 1.5586, 4.9512);
		testMethod(1370, -1.9415, -1.927, -0, 0.1941, 1.5824, 4.7522);
		testMethod(1375, -1.9511, -1.927, -0, 0.202, 1.6052, 4.5532);
		testMethod(1380, -1.9607, -1.927, -0, 0.2101, 1.6269, 4.3543);
		testMethod(1385, -1.9704, -1.927, -0, 0.2183, 1.6477, 4.1553);
		testMethod(1390, -1.98, -1.927, -0, 0.2266, 1.6675, 3.9563);
		testMethod(1395, -1.9896, -1.927, -0, 0.235, 1.6863, 3.7573);
		testMethod(1400, -1.9993, -1.927, -0, 0.2434, 1.7041, 3.5583);
		testMethod(1405, -2.0089, -1.927, -0, 0.252, 1.7209, 3.3593);
		testMethod(1410, -2.0185, -1.927, -0, 0.2607, 1.7367, 3.1603);
		testMethod(1415, -2.0282, -1.927, -0, 0.2694, 1.7515, 2.9613);
		testMethod(1420, -2.0378, -1.927, -0, 0.2782, 1.7653, 2.7623);
		testMethod(1425, -2.0474, -1.927, -0, 0.287, 1.7781, 2.5633);
		testMethod(1430, -2.0571, -1.927, -0, 0.2959, 1.7899, 2.3643);
		testMethod(1435, -2.0667, -1.927, -0, 0.3049, 1.8007, 2.1654);
		testMethod(1440, -2.0764, -1.927, -0, 0.3139, 1.8106, 1.9664);
		testMethod(1445, -2.086, -1.927, -0, 0.323, 1.8194, 1.7674);
		testMethod(1450, -2.0956, -1.927, -0, 0.3321, 1.8273, 1.5684);
		testMethod(1455, -2.1053, -1.927, -0, 0.3413, 1.8341, 1.3694);
		testMethod(1460, -2.1149, -1.927, -0, 0.3505, 1.84, 1.1704);
		testMethod(1465, -2.1245, -1.927, -0, 0.3597, 1.8448, 0.9714);
		testMethod(1470, -2.1342, -1.927, -0, 0.3689, 1.8487, 0.7724);
		testMethod(1475, -2.1438, -1.927, -0, 0.3782, 1.8515, 0.5734);
		testMethod(1480, -2.1534, -1.927, -0, 0.3874, 1.8534, 0.3744);
		testMethod(1485, -2.1631, -1.927, -0, 0.3967, 1.8543, 0.1754);
		testMethod(1490, -2.1727, -1.927, -0, 0.406, 1.8544, 0.0145);
		testMethod(1495, -2.1823, -1.927, -0, 0.4153, 1.8544, 0);
		testMethod(1500, -2.192, -1.927, -0, 0.4245, 1.8544, 0);
		testMethod(1505, -2.2016, -1.927, -0, 0.4338, 1.8544, 0);
		testMethod(1510, -2.2112, -1.927, -0, 0.4431, 1.8544, 0);
		testMethod(1515, -2.2209, -1.927, -0, 0.4523, 1.8544, 0);
		testMethod(1520, -2.2305, -1.927, -0, 0.4616, 1.8544, 0);
		testMethod(1525, -2.2401, -1.927, -0, 0.4709, 1.8544, 0);
		testMethod(1530, -2.2498, -1.927, -0, 0.4802, 1.8544, 0);
		testMethod(1535, -2.2594, -1.927, -0, 0.4894, 1.8544, 0);
		testMethod(1540, -2.2691, -1.927, -0, 0.4987, 1.8544, 0);
		testMethod(1545, -2.2787, -1.927, -0, 0.508, 1.8544, 0);
		testMethod(1550, -2.2883, -1.927, -0, 0.5172, 1.8544, 0);
		testMethod(1555, -2.298, -1.927, -0, 0.5265, 1.8544, 0);
		testMethod(1560, -2.3076, -1.927, -0, 0.5358, 1.8544, 0);
		testMethod(1565, -2.3172, -1.927, -0, 0.5451, 1.8544, 0);
		testMethod(1570, -2.3269, -1.927, -0, 0.5543, 1.8544, 0);
		testMethod(1575, -2.3365, -1.927, -0, 0.5636, 1.8544, 0);
		testMethod(1580, -2.3461, -1.927, -0, 0.5729, 1.8544, 0);
		testMethod(1585, -2.3558, -1.9265, 0.0992, 0.5821, 1.8539, -0.0955);
		testMethod(1590, -2.3654, -1.9255, 0.1984, 0.5914, 1.8529, -0.1909);
		testMethod(1595, -2.375, -1.924, 0.2976, 0.6007, 1.8515, -0.2864);
		testMethod(1600, -2.3846, -1.922, 0.3968, 0.6099, 1.8496, -0.3819);
		testMethod(1605, -2.3942, -1.9196, 0.496, 0.6192, 1.8472, -0.4773);
		testMethod(1610, -2.4038, -1.9166, 0.5952, 0.6284, 1.8443, -0.5728);
		testMethod(1615, -2.4134, -1.9131, 0.6944, 0.6376, 1.841, -0.6682);
		testMethod(1620, -2.423, -1.9092, 0.7936, 0.6468, 1.8372, -0.7637);
		testMethod(1625, -2.4325, -1.9047, 0.8928, 0.656, 1.8324, -0.9549);
		testMethod(1630, -2.442, -1.8997, 0.992, 0.6651, 1.8262, -1.2411);
		testMethod(1635, -2.4515, -1.8943, 1.0912, 0.6742, 1.8186, -1.5239);
		testMethod(1640, -2.4609, -1.8883, 1.1904, 0.6833, 1.8096, -1.803);
		testMethod(1645, -2.4704, -1.8819, 1.2896, 0.6923, 1.7992, -2.0778);
		testMethod(1650, -2.4798, -1.8749, 1.3888, 0.7013, 1.7874, -2.348);
		testMethod(1655, -2.4891, -1.8675, 1.488, 0.7102, 1.7744, -2.613);
		testMethod(1660, -2.4984, -1.8596, 1.5872, 0.719, 1.76, -2.8725);
		testMethod(1665, -2.5077, -1.8511, 1.6864, 0.7278, 1.7444, -3.126);
		testMethod(1670, -2.517, -1.8422, 1.7856, 0.7365, 1.7275, -3.3731);
		testMethod(1675, -2.5261, -1.8328, 1.8848, 0.7451, 1.7094, -3.6135);
		testMethod(1680, -2.5353, -1.8228, 1.9841, 0.7536, 1.6902, -3.8467);
		testMethod(1685, -2.5444, -1.8124, 2.0833, 0.762, 1.6698, -4.0723);
		testMethod(1690, -2.5534, -1.8015, 2.1825, 0.7703, 1.6484, -4.2901);
		testMethod(1695, -2.5624, -1.7901, 2.2817, 0.7785, 1.6259, -4.4997);
		testMethod(1700, -2.5713, -1.7782, 2.3809, 0.7865, 1.6024, -4.7007);
		testMethod(1705, -2.5802, -1.7658, 2.4801, 0.7945, 1.5779, -4.893);
		testMethod(1710, -2.589, -1.7529, 2.5793, 0.8023, 1.5526, -5.0762);
		testMethod(1715, -2.5977, -1.7395, 2.6785, 0.81, 1.5263, -5.25);
		testMethod(1720, -2.6064, -1.7256, 2.7777, 0.8176, 1.4992, -5.4142);
		testMethod(1725, -2.6149, -1.7112, 2.8769, 0.825, 1.4714, -5.5686);
		testMethod(1730, -2.6235, -1.6964, 2.9761, 0.8323, 1.4428, -5.7131);
		testMethod(1735, -2.6319, -1.681, 3.0753, 0.8394, 1.4136, -5.8473);
		testMethod(1740, -2.6403, -1.6651, 3.1745, 0.8464, 1.3837, -5.9713);
		testMethod(1745, -2.6486, -1.6487, 3.2737, 0.8533, 1.3533, -6.0848);
		testMethod(1750, -2.6568, -1.6319, 3.3729, 0.8599, 1.3224, -6.1877);
		testMethod(1755, -2.6649, -1.6145, 3.4721, 0.8665, 1.291, -6.28);
		testMethod(1760, -2.6729, -1.5972, 3.4721, 0.8729, 1.2595, -6.2839);
		testMethod(1765, -2.6808, -1.5798, 3.4721, 0.8791, 1.2281, -6.2816);
		testMethod(1770, -2.6887, -1.5624, 3.4721, 0.8851, 1.1968, -6.2733);
		testMethod(1775, -2.6965, -1.5451, 3.4721, 0.891, 1.1655, -6.2591);
		testMethod(1780, -2.7042, -1.5277, 3.4721, 0.8968, 1.1343, -6.2393);
		testMethod(1785, -2.7117, -1.5104, 3.4721, 0.9024, 1.1032, -6.2141);
		testMethod(1790, -2.7193, -1.493, 3.4721, 0.9078, 1.0723, -6.1836);
		testMethod(1795, -2.7267, -1.4756, 3.4721, 0.9131, 1.0416, -6.148);
		testMethod(1800, -2.734, -1.4583, 3.4721, 0.9182, 1.011, -6.1076);
		testMethod(1805, -2.7413, -1.4409, 3.4721, 0.9232, 0.9807, -6.0625);
		testMethod(1810, -2.7484, -1.4236, 3.4721, 0.928, 0.9506, -6.0128);
		testMethod(1815, -2.7555, -1.4062, 3.4721, 0.9327, 0.9208, -5.9589);
		testMethod(1820, -2.7625, -1.3888, 3.4721, 0.9373, 0.8913, -5.9008);
		testMethod(1825, -2.7694, -1.3715, 3.4721, 0.9416, 0.8621, -5.8387);
		testMethod(1830, -2.7762, -1.3541, 3.4721, 0.9459, 0.8333, -5.7728);
		testMethod(1835, -2.7829, -1.3368, 3.4721, 0.95, 0.8048, -5.7034);
		testMethod(1840, -2.7896, -1.3194, 3.4721, 0.9539, 0.7766, -5.6304);
		testMethod(1845, -2.7961, -1.302, 3.4721, 0.9577, 0.7488, -5.5542);
		testMethod(1850, -2.8026, -1.2847, 3.4721, 0.9614, 0.7215, -5.4749);
		testMethod(1855, -2.809, -1.2673, 3.4721, 0.965, 0.6945, -5.3926);
		testMethod(1860, -2.8153, -1.25, 3.4721, 0.9684, 0.668, -5.3075);
		testMethod(1865, -2.8215, -1.2326, 3.4721, 0.9716, 0.6419, -5.2198);
		testMethod(1870, -2.8276, -1.2152, 3.4721, 0.9748, 0.6162, -5.1297);
		testMethod(1875, -2.8336, -1.1979, 3.4721, 0.9778, 0.591, -5.0371);
		testMethod(1880, -2.8396, -1.1805, 3.4721, 0.9807, 0.5662, -4.9738);
		testMethod(1885, -2.8454, -1.1632, 3.4721, 0.9835, 0.5422, -4.7911);
		testMethod(1890, -2.8512, -1.1458, 3.4721, 0.9861, 0.5192, -4.6094);
		testMethod(1895, -2.8569, -1.1284, 3.4721, 0.9887, 0.497, -4.4336);
		testMethod(1900, -2.8625, -1.1111, 3.4721, 0.9911, 0.4757, -4.2636);
		testMethod(1905, -2.868, -1.0937, 3.4721, 0.9934, 0.4552, -4.0991);
		testMethod(1910, -2.8734, -1.0763, 3.4721, 0.9956, 0.4355, -3.9402);
		testMethod(1915, -2.8788, -1.059, 3.4721, 0.9978, 0.4165, -3.7866);
		testMethod(1920, -2.884, -1.0416, 3.4721, 0.9998, 0.3984, -3.6382);
		testMethod(1925, -2.8892, -1.0243, 3.4721, 1.0018, 0.3809, -3.4948);
		testMethod(1930, -2.8942, -1.0069, 3.4721, 1.0036, 0.3641, -3.3564);
		testMethod(1935, -2.8992, -0.9895, 3.4721, 1.0054, 0.348, -3.2229);
		testMethod(1940, -2.9041, -0.9722, 3.4721, 1.0071, 0.3325, -3.094);
		testMethod(1945, -2.909, -0.9548, 3.4721, 1.0087, 0.3177, -2.9697);
		testMethod(1950, -2.9137, -0.9375, 3.4721, 1.0103, 0.3034, -2.8498);
		testMethod(1955, -2.9183, -0.9201, 3.4721, 1.0118, 0.2897, -2.7342);
		testMethod(1960, -2.9229, -0.9027, 3.4721, 1.0132, 0.2766, -2.6229);
		testMethod(1965, -2.9274, -0.8854, 3.4721, 1.0145, 0.2641, -2.5156);
		testMethod(1970, -2.9317, -0.868, 3.4721, 1.0158, 0.252, -2.4123);
		testMethod(1975, -2.936, -0.8507, 3.4721, 1.017, 0.2404, -2.3129);
		testMethod(1980, -2.9403, -0.8333, 3.4721, 1.0182, 0.2293, -2.2172);
		testMethod(1985, -2.9444, -0.8159, 3.4721, 1.0193, 0.2187, -2.1251);
		testMethod(1990, -2.9484, -0.7986, 3.4721, 1.0204, 0.2085, -2.0366);
		testMethod(1995, -2.9524, -0.7812, 3.4721, 1.0214, 0.1988, -1.9516);
		testMethod(2000, -2.9562, -0.7639, 3.4721, 1.0224, 0.1894, -1.8699);
		testMethod(2005, -2.96, -0.7465, 3.4721, 1.0233, 0.1805, -1.7914);
		testMethod(2010, -2.9637, -0.7291, 3.4721, 1.0242, 0.1719, -1.7161);
		testMethod(2015, -2.9673, -0.7118, 3.4721, 1.025, 0.1637, -1.6438);
		testMethod(2020, -2.9708, -0.6944, 3.4721, 1.0258, 0.1558, -1.5745);
		testMethod(2025, -2.9742, -0.6771, 3.4721, 1.0266, 0.1483, -1.508);
		testMethod(2030, -2.9776, -0.6597, 3.4721, 1.0273, 0.141, -1.4443);
		testMethod(2035, -2.9808, -0.6423, 3.4721, 1.028, 0.1341, -1.3834);
		testMethod(2040, -2.984, -0.625, 3.4721, 1.0287, 0.1275, -1.325);
		testMethod(2045, -2.9871, -0.6076, 3.4721, 1.0293, 0.1211, -1.2692);
		testMethod(2050, -2.9901, -0.5903, 3.4721, 1.0299, 0.1151, -1.2158);
		testMethod(2055, -2.993, -0.5729, 3.4721, 1.0304, 0.1092, -1.1648);
		testMethod(2060, -2.9958, -0.5555, 3.4721, 1.031, 0.1037, -1.1161);
		testMethod(2065, -2.9985, -0.5382, 3.4721, 1.0315, 0.0983, -1.0697);
		testMethod(2070, -3.0012, -0.5208, 3.4721, 1.032, 0.0932, -1.0254);
		testMethod(2075, -3.0037, -0.5035, 3.4721, 1.0324, 0.0883, -0.9832);
		testMethod(2080, -3.0062, -0.4861, 3.4721, 1.0328, 0.0836, -0.943);
		testMethod(2085, -3.0086, -0.4687, 3.4721, 1.0332, 0.079, -0.9048);
		testMethod(2090, -3.0109, -0.4514, 3.4721, 1.0336, 0.0747, -0.8685);
		testMethod(2095, -3.0131, -0.434, 3.4721, 1.034, 0.0705, -0.834);
		testMethod(2100, -3.0152, -0.4167, 3.4721, 1.0343, 0.0665, -0.8014);
		testMethod(2105, -3.0173, -0.3993, 3.4721, 1.0347, 0.0627, -0.7704);
		testMethod(2110, -3.0192, -0.3819, 3.4721, 1.035, 0.059, -0.7412);
		testMethod(2115, -3.0211, -0.3646, 3.4721, 1.0352, 0.0554, -0.7136);
		testMethod(2120, -3.0229, -0.3472, 3.4721, 1.0355, 0.052, -0.6875);
		testMethod(2125, -3.0246, -0.3298, 3.4721, 1.0358, 0.0486, -0.663);
		testMethod(2130, -3.0262, -0.3125, 3.4721, 1.036, 0.0454, -0.64);
		testMethod(2135, -3.0277, -0.2951, 3.4721, 1.0362, 0.0423, -0.6185);
		testMethod(2140, -3.0291, -0.2783, 3.3729, 1.0364, 0.0394, -0.5844);
		testMethod(2145, -3.0305, -0.2619, 3.2737, 1.0366, 0.0367, -0.5523);
		testMethod(2150, -3.0318, -0.246, 3.1745, 1.0368, 0.034, -0.5221);
		testMethod(2155, -3.033, -0.2306, 3.0753, 1.037, 0.0316, -0.4936);
		testMethod(2160, -3.0341, -0.2158, 2.9761, 1.0371, 0.0292, -0.4668);
		testMethod(2165, -3.0351, -0.2014, 2.8769, 1.0372, 0.027, -0.4414);
		testMethod(2170, -3.0361, -0.1875, 2.7777, 1.0374, 0.025, -0.4174);
		testMethod(2175, -3.037, -0.1741, 2.6785, 1.0375, 0.023, -0.3947);
		testMethod(2180, -3.0378, -0.1612, 2.5793, 1.0376, 0.0211, -0.3731);
		testMethod(2185, -3.0386, -0.1488, 2.4801, 1.0377, 0.0194, -0.3526);
		testMethod(2190, -3.0393, -0.1369, 2.3809, 1.0378, 0.0177, -0.3331);
		testMethod(2195, -3.04, -0.1255, 2.2817, 1.0379, 0.0161, -0.3145);
		testMethod(2200, -3.0406, -0.1146, 2.1825, 1.038, 0.0146, -0.2966);
		testMethod(2205, -3.0411, -0.1042, 2.0833, 1.038, 0.0132, -0.2796);
		testMethod(2210, -3.0416, -0.0942, 1.9841, 1.0381, 0.0119, -0.2631);
		testMethod(2215, -3.0421, -0.0848, 1.8848, 1.0381, 0.0107, -0.2473);
		testMethod(2220, -3.0425, -0.0759, 1.7856, 1.0382, 0.0095, -0.232);
		testMethod(2225, -3.0428, -0.0675, 1.6864, 1.0382, 0.0084, -0.2172);
		testMethod(2230, -3.0431, -0.0595, 1.5872, 1.0383, 0.0074, -0.2029);
		testMethod(2235, -3.0434, -0.0521, 1.488, 1.0383, 0.0065, -0.1889);
		testMethod(2240, -3.0437, -0.0451, 1.3888, 1.0383, 0.0056, -0.1752);
		testMethod(2245, -3.0439, -0.0387, 1.2896, 1.0384, 0.0048, -0.1619);
		testMethod(2250, -3.044, -0.0327, 1.1904, 1.0384, 0.004, -0.1487);
		testMethod(2255, -3.0442, -0.0273, 1.0912, 1.0384, 0.0034, -0.1358);
		testMethod(2260, -3.0443, -0.0223, 0.992, 1.0384, 0.0028, -0.1231);
		testMethod(2265, -3.0444, -0.0179, 0.8928, 1.0384, 0.0022, -0.1105);
		testMethod(2270, -3.0445, -0.0139, 0.7936, 1.0385, 0.0017, -0.098);
		testMethod(2275, -3.0446, -0.0104, 0.6944, 1.0385, 0.0013, -0.0856);
		testMethod(2280, -3.0446, -0.0074, 0.5952, 1.0385, 0.0009, -0.0733);
		testMethod(2285, -3.0446, -0.005, 0.496, 1.0385, 0.0006, -0.061);
		testMethod(2290, -3.0447, -0.003, 0.3968, 1.0385, 0.0004, -0.0488);
		testMethod(2295, -3.0447, -0.0015, 0.2976, 1.0385, 0.0002, -0.0366);
		testMethod(2300, -3.0447, -0.0005, 0.1984, 1.0385, 0.0001, -0.0244);
		testMethod(2305, -3.0447, -0, 0.0992, 1.0385, 0, -0.0122);
		testMethod(2310, -3.0447, -0, -0, 1.0385, 0, 0);
		testMethod(2310, -3.0447, -0, -0, 1.0385, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}