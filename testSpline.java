package org.usfirst.frc.team1197.robot;

public class testSpline extends TorTrajectory {

	public testSpline() {
		super(3.6506, 1.5707);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0992, 0, 0, 0);
		testMethod(10, -0, -0.0015, -0.1983, 0, 0, 0);
		testMethod(15, -0, -0.003, -0.2975, 0, 0, 0);
		testMethod(20, -0, -0.005, -0.3967, 0, 0, 0);
		testMethod(25, -0.0001, -0.0074, -0.4959, 0, 0, 0);
		testMethod(30, -0.0001, -0.0104, -0.595, 0, 0, 0);
		testMethod(35, -0.0002, -0.0139, -0.6942, 0, 0, 0);
		testMethod(40, -0.0003, -0.0179, -0.7934, 0, 0, 0);
		testMethod(45, -0.0004, -0.0223, -0.8925, 0, 0, 0);
		testMethod(50, -0.0005, -0.0273, -0.9917, 0, 0, 0);
		testMethod(55, -0.0006, -0.0327, -1.0909, 0, 0, 0);
		testMethod(60, -0.0008, -0.0387, -1.1901, 0, 0, 0);
		testMethod(65, -0.001, -0.0451, -1.2892, 0, 0, 0);
		testMethod(70, -0.0013, -0.0521, -1.3884, 0, 0, 0);
		testMethod(75, -0.0015, -0.0595, -1.4876, 0, 0, 0);
		testMethod(80, -0.0019, -0.0674, -1.5868, 0, 0, 0);
		testMethod(85, -0.0022, -0.0759, -1.6859, 0, 0, 0);
		testMethod(90, -0.0026, -0.0848, -1.7851, 0, 0, 0);
		testMethod(95, -0.0031, -0.0942, -1.8843, 0, 0, 0);
		testMethod(100, -0.0036, -0.1041, -1.9834, 0, 0, 0);
		testMethod(105, -0.0041, -0.1145, -2.0826, 0, 0, 0);
		testMethod(110, -0.0047, -0.1255, -2.1818, 0, 0, 0);
		testMethod(115, -0.0054, -0.1369, -2.281, 0, 0, 0);
		testMethod(120, -0.0061, -0.1488, -2.3801, 0, 0, 0);
		testMethod(125, -0.0068, -0.1612, -2.4793, 0, 0, 0);
		testMethod(130, -0.0077, -0.174, -2.5785, 0, 0, 0);
		testMethod(135, -0.0086, -0.1874, -2.6776, 0, 0, 0);
		testMethod(140, -0.0096, -0.2013, -2.7768, 0, 0, 0);
		testMethod(145, -0.0106, -0.2157, -2.876, 0, 0, 0);
		testMethod(150, -0.0117, -0.2306, -2.9752, 0, 0, 0);
		testMethod(155, -0.0129, -0.2459, -3.0743, 0, 0, 0);
		testMethod(160, -0.0142, -0.2618, -3.1735, 0, 0, 0);
		testMethod(165, -0.0155, -0.2782, -3.2727, 0, 0, 0);
		testMethod(170, -0.017, -0.295, -3.3718, 0, 0, 0);
		testMethod(175, -0.0185, -0.3124, -3.471, 0, 0, 0);
		testMethod(180, -0.0201, -0.3297, -3.471, 0, 0, 0);
		testMethod(185, -0.0218, -0.3471, -3.471, 0, 0, 0);
		testMethod(190, -0.0236, -0.3645, -3.471, 0, 0, 0);
		testMethod(195, -0.0254, -0.3818, -3.471, 0, 0, 0);
		testMethod(200, -0.0274, -0.3992, -3.471, 0, 0, 0);
		testMethod(205, -0.0294, -0.4165, -3.471, 0, 0, 0);
		testMethod(210, -0.0315, -0.4339, -3.471, 0, 0, 0);
		testMethod(215, -0.0338, -0.4512, -3.471, 0, 0, 0);
		testMethod(220, -0.0361, -0.4686, -3.471, 0, 0, 0);
		testMethod(225, -0.0384, -0.4859, -3.471, 0, 0, 0);
		testMethod(230, -0.0409, -0.5033, -3.471, 0, 0, 0);
		testMethod(235, -0.0435, -0.5207, -3.471, 0, 0, 0);
		testMethod(240, -0.0461, -0.538, -3.471, 0, 0, 0);
		testMethod(245, -0.0489, -0.5554, -3.471, 0, 0, 0);
		testMethod(250, -0.0517, -0.5727, -3.471, 0, 0, 0);
		testMethod(255, -0.0546, -0.5901, -3.471, 0, 0, 0);
		testMethod(260, -0.0576, -0.6074, -3.471, 0, 0, 0);
		testMethod(265, -0.0607, -0.6248, -3.471, 0, 0, 0);
		testMethod(270, -0.0638, -0.6421, -3.471, 0, 0, 0);
		testMethod(275, -0.0671, -0.6595, -3.471, 0, 0, 0);
		testMethod(280, -0.0704, -0.6768, -3.471, 0, 0, 0);
		testMethod(285, -0.0738, -0.6942, -3.471, 0, 0, 0);
		testMethod(290, -0.0774, -0.7116, -3.471, 0, 0, 0);
		testMethod(295, -0.081, -0.7289, -3.471, 0, 0, 0);
		testMethod(300, -0.0846, -0.7463, -3.471, 0, 0, 0);
		testMethod(305, -0.0884, -0.7636, -3.471, 0, 0, 0);
		testMethod(310, -0.0923, -0.781, -3.471, 0, 0, 0);
		testMethod(315, -0.0962, -0.7983, -3.471, 0, 0, 0);
		testMethod(320, -0.1003, -0.8157, -3.471, 0, 0, 0);
		testMethod(325, -0.1044, -0.833, -3.471, 0, 0, 0);
		testMethod(330, -0.1086, -0.8504, -3.471, 0, 0, 0);
		testMethod(335, -0.1129, -0.8678, -3.471, 0, 0, 0);
		testMethod(340, -0.1173, -0.8851, -3.471, 0, 0, 0);
		testMethod(345, -0.1217, -0.9025, -3.471, 0, 0, 0);
		testMethod(350, -0.1263, -0.9198, -3.471, 0, 0, 0);
		testMethod(355, -0.1309, -0.9372, -3.471, 0, 0, 0);
		testMethod(360, -0.1357, -0.9545, -3.471, 0, 0, 0);
		testMethod(365, -0.1405, -0.9719, -3.471, 0, 0, 0);
		testMethod(370, -0.1454, -0.9892, -3.471, 0, 0, 0);
		testMethod(375, -0.1504, -1.0066, -3.471, 0, 0, 0);
		testMethod(380, -0.1555, -1.0239, -3.471, 0, 0, 0);
		testMethod(385, -0.1606, -1.0413, -3.471, 0, 0, 0);
		testMethod(390, -0.1659, -1.0587, -3.471, 0, 0, 0);
		testMethod(395, -0.1712, -1.076, -3.471, 0, 0, 0);
		testMethod(400, -0.1766, -1.0934, -3.471, 0, 0, 0);
		testMethod(405, -0.1821, -1.1107, -3.471, 0, 0, 0);
		testMethod(410, -0.1877, -1.1281, -3.471, 0, 0, 0);
		testMethod(415, -0.1934, -1.1454, -3.471, 0, 0, 0);
		testMethod(420, -0.1992, -1.1628, -3.471, 0, 0, 0);
		testMethod(425, -0.2051, -1.1801, -3.471, 0, 0, 0);
		testMethod(430, -0.211, -1.1975, -3.471, 0, 0, 0);
		testMethod(435, -0.217, -1.2149, -3.471, 0, 0, 0);
		testMethod(440, -0.2231, -1.2322, -3.471, 0, 0, 0);
		testMethod(445, -0.2293, -1.2496, -3.471, 0, 0, 0);
		testMethod(450, -0.2356, -1.2669, -3.471, 0, 0, 0);
		testMethod(455, -0.242, -1.2843, -3.471, 0, 0, 0);
		testMethod(460, -0.2485, -1.3016, -3.471, 0, 0, 0);
		testMethod(465, -0.255, -1.319, -3.471, 0, 0, 0);
		testMethod(470, -0.2617, -1.3363, -3.471, 0, 0, 0);
		testMethod(475, -0.2684, -1.3537, -3.471, 0, 0, 0);
		testMethod(480, -0.2752, -1.3711, -3.471, 0, 0, 0);
		testMethod(485, -0.2821, -1.3884, -3.471, 0, 0, 0);
		testMethod(490, -0.2891, -1.4058, -3.471, 0, 0, 0);
		testMethod(495, -0.2962, -1.4231, -3.471, 0, 0, 0);
		testMethod(500, -0.3033, -1.4405, -3.471, 0, 0, 0);
		testMethod(505, -0.3106, -1.4578, -3.471, 0, 0, 0);
		testMethod(510, -0.3179, -1.4752, -3.471, 0, 0, 0);
		testMethod(515, -0.3253, -1.4925, -3.471, 0, 0, 0);
		testMethod(520, -0.3328, -1.5099, -3.471, 0, 0, 0);
		testMethod(525, -0.3404, -1.5272, -3.471, 0, 0, 0);
		testMethod(530, -0.3481, -1.5446, -3.471, 0, 0, 0);
		testMethod(535, -0.3559, -1.562, -3.471, 0, 0, 0);
		testMethod(540, -0.3637, -1.5793, -3.471, 0, 0, 0);
		testMethod(545, -0.3717, -1.5967, -3.471, 0, 0, 0);
		testMethod(550, -0.3797, -1.614, -3.471, 0, 0, 0);
		testMethod(555, -0.3878, -1.6314, -3.471, 0, 0, 0);
		testMethod(560, -0.396, -1.6482, -3.3718, 0, 0, 0);
		testMethod(565, -0.4043, -1.6646, -3.2727, 0, 0, 0);
		testMethod(570, -0.4126, -1.6805, -3.1735, 0, 0, 0);
		testMethod(575, -0.4211, -1.6958, -3.0743, 0, 0, 0);
		testMethod(580, -0.4296, -1.7107, -2.9752, 0, 0, 0);
		testMethod(585, -0.4382, -1.7251, -2.876, 0, 0, 0);
		testMethod(590, -0.4468, -1.739, -2.7768, 0, 0, 0);
		testMethod(595, -0.4556, -1.7524, -2.6776, 0, 0, 0);
		testMethod(600, -0.4644, -1.7653, -2.5785, 0, 0, 0);
		testMethod(605, -0.4732, -1.7777, -2.4793, 0, 0, 0);
		testMethod(610, -0.4821, -1.7896, -2.3801, 0, 0, 0);
		testMethod(615, -0.4911, -1.801, -2.281, 0, 0, 0);
		testMethod(620, -0.5002, -1.8119, -2.1818, 0, 0, 0);
		testMethod(625, -0.5092, -1.8223, -2.0826, 0, 0, 0);
		testMethod(630, -0.5184, -1.8322, -1.9834, 0, 0, 0);
		testMethod(635, -0.5276, -1.8416, -1.8843, 0, 0, 0);
		testMethod(640, -0.5368, -1.8505, -1.7851, 0, 0, 0);
		testMethod(645, -0.5461, -1.859, -1.6859, 0, 0, 0);
		testMethod(650, -0.5554, -1.8669, -1.5868, 0, 0, 0);
		testMethod(655, -0.5647, -1.8743, -1.4876, 0, 0, 0);
		testMethod(660, -0.5741, -1.8813, -1.3884, 0, 0, 0);
		testMethod(665, -0.5835, -1.8877, -1.2892, 0, 0, 0);
		testMethod(670, -0.593, -1.8937, -1.1901, 0, 0, 0);
		testMethod(675, -0.6025, -1.8991, -1.0909, 0, 0, 0);
		testMethod(680, -0.612, -1.9041, -0.9917, 0, 0, 0);
		testMethod(685, -0.6215, -1.9086, -0.8925, 0, 0, 0);
		testMethod(690, -0.6311, -1.9125, -0.7934, 0, 0, 0);
		testMethod(695, -0.6406, -1.916, -0.6942, 0, 0, 0);
		testMethod(700, -0.6502, -1.919, -0.595, 0, 0, 0);
		testMethod(705, -0.6598, -1.9215, -0.4959, 0, 0, 0);
		testMethod(710, -0.6694, -1.9234, -0.3967, 0, 0, 0);
		testMethod(715, -0.6791, -1.9249, -0.2975, 0, 0, 0);
		testMethod(720, -0.6887, -1.9259, -0.1983, 0, 0, 0);
		testMethod(725, -0.6983, -1.9264, -0.0992, 0, 0, 0);
		testMethod(730, -0.708, -1.9264, -0, 0, 0, 0);
		testMethod(735, -0.7176, -1.9264, -0, 0, 0, 0);
		testMethod(740, -0.7272, -1.9264, -0, 0, 0, 0);
		testMethod(745, -0.7369, -1.9264, -0, 0, 0, 0);
		testMethod(750, -0.7465, -1.9264, -0, 0, 0, 0);
		testMethod(755, -0.7561, -1.9264, -0, 0, 0, 0);
		testMethod(760, -0.7657, -1.9264, -0, 0, 0, 0);
		testMethod(765, -0.7754, -1.9264, -0, 0, 0, 0.0057);
		testMethod(770, -0.785, -1.9264, -0, 0, 0.0008, 0.147);
		testMethod(775, -0.7946, -1.9264, -0, 0, 0.0025, 0.3458);
		testMethod(780, -0.8043, -1.9264, -0, 0, 0.0052, 0.5446);
		testMethod(785, -0.8139, -1.9264, -0, 0.0001, 0.0089, 0.7434);
		testMethod(790, -0.8235, -1.9264, -0, 0.0001, 0.0136, 0.9422);
		testMethod(795, -0.8332, -1.9264, -0, 0.0002, 0.0193, 1.141);
		testMethod(800, -0.8428, -1.9264, -0, 0.0003, 0.026, 1.3398);
		testMethod(805, -0.8524, -1.9264, -0, 0.0005, 0.0337, 1.5386);
		testMethod(810, -0.8621, -1.9264, -0, 0.0007, 0.0424, 1.7374);
		testMethod(815, -0.8717, -1.9264, -0, 0.0009, 0.0521, 1.9362);
		testMethod(820, -0.8813, -1.9264, -0, 0.0012, 0.0628, 2.135);
		testMethod(825, -0.891, -1.9264, -0, 0.0015, 0.0745, 2.3338);
		testMethod(830, -0.9006, -1.9264, -0, 0.0019, 0.0871, 2.5326);
		testMethod(835, -0.9102, -1.9264, -0, 0.0024, 0.1008, 2.7314);
		testMethod(840, -0.9199, -1.9264, -0, 0.0029, 0.1154, 2.9303);
		testMethod(845, -0.9295, -1.9264, -0, 0.0035, 0.1311, 3.1291);
		testMethod(850, -0.9391, -1.9264, -0, 0.0042, 0.1477, 3.3279);
		testMethod(855, -0.9488, -1.9264, -0, 0.005, 0.1653, 3.5267);
		testMethod(860, -0.9584, -1.9264, -0, 0.0059, 0.184, 3.7255);
		testMethod(865, -0.968, -1.9264, -0, 0.0069, 0.2036, 3.9243);
		testMethod(870, -0.9777, -1.9264, -0, 0.0079, 0.2242, 4.1231);
		testMethod(875, -0.9873, -1.9264, -0, 0.0091, 0.2458, 4.3219);
		testMethod(880, -0.9969, -1.9264, -0, 0.0104, 0.2684, 4.5207);
		testMethod(885, -1.0066, -1.9264, -0, 0.0118, 0.292, 4.7195);
		testMethod(890, -1.0162, -1.9264, -0, 0.0133, 0.3166, 4.9183);
		testMethod(895, -1.0258, -1.9264, -0, 0.015, 0.3422, 5.1171);
		testMethod(900, -1.0354, -1.9264, -0, 0.0167, 0.3688, 5.3159);
		testMethod(905, -1.0451, -1.9264, -0, 0.0187, 0.3963, 5.5147);
		testMethod(910, -1.0547, -1.9264, -0, 0.0207, 0.4249, 5.7135);
		testMethod(915, -1.0643, -1.9264, -0, 0.0229, 0.4545, 5.9123);
		testMethod(920, -1.074, -1.9264, -0, 0.0253, 0.485, 6.1112);
		testMethod(925, -1.0836, -1.9264, -0, 0.0278, 0.5166, 6.31);
		testMethod(930, -1.0932, -1.9264, -0, 0.0304, 0.5491, 6.5088);
		testMethod(935, -1.1029, -1.9264, -0, 0.0332, 0.5827, 6.7076);
		testMethod(940, -1.1125, -1.9264, -0, 0.0362, 0.6172, 6.9064);
		testMethod(945, -1.1221, -1.9264, -0, 0.0394, 0.6527, 7.1052);
		testMethod(950, -1.1318, -1.9264, -0, 0.0428, 0.6892, 7.304);
		testMethod(955, -1.1414, -1.9264, -0, 0.0463, 0.7268, 7.5028);
		testMethod(960, -1.151, -1.9264, -0, 0.05, 0.7653, 7.7016);
		testMethod(965, -1.1607, -1.9264, -0, 0.054, 0.8048, 7.9004);
		testMethod(970, -1.1703, -1.9264, -0, 0.0581, 0.8453, 8.0992);
		testMethod(975, -1.1799, -1.9264, -0, 0.0624, 0.8868, 8.298);
		testMethod(980, -1.1896, -1.9264, -0, 0.067, 0.9292, 8.4968);
		testMethod(985, -1.1992, -1.9264, -0, 0.0717, 0.9727, 8.6956);
		testMethod(990, -1.2088, -1.9264, -0, 0.0767, 1.0172, 8.9006);
		testMethod(995, -1.2185, -1.9264, -0, 0.0819, 1.062, 8.9642);
		testMethod(1000, -1.2281, -1.9264, -0, 0.0873, 1.1069, 8.9642);
		testMethod(1005, -1.2377, -1.9264, -0, 0.093, 1.1517, 8.9642);
		testMethod(1010, -1.2474, -1.9264, -0, 0.0988, 1.1965, 8.9642);
		testMethod(1015, -1.257, -1.9264, -0, 0.1049, 1.2413, 8.9642);
		testMethod(1020, -1.2666, -1.9264, -0, 0.1112, 1.2861, 8.9642);
		testMethod(1025, -1.2762, -1.9264, -0, 0.1178, 1.331, 8.9642);
		testMethod(1030, -1.2859, -1.9264, -0, 0.1246, 1.3758, 8.9642);
		testMethod(1035, -1.2955, -1.9264, -0, 0.1315, 1.4206, 8.9642);
		testMethod(1040, -1.3051, -1.9264, -0, 0.1388, 1.4654, 8.9642);
		testMethod(1045, -1.3148, -1.9264, -0, 0.1462, 1.5102, 8.9642);
		testMethod(1050, -1.3244, -1.9264, -0, 0.1539, 1.5551, 8.9642);
		testMethod(1055, -1.334, -1.9264, -0, 0.1618, 1.5999, 8.9642);
		testMethod(1060, -1.3437, -1.9264, -0, 0.1699, 1.6447, 8.9642);
		testMethod(1065, -1.3533, -1.9264, -0, 0.1782, 1.6895, 8.9642);
		testMethod(1070, -1.3629, -1.9264, -0, 0.1868, 1.7343, 8.9642);
		testMethod(1075, -1.3726, -1.9264, -0, 0.1955, 1.7792, 8.9642);
		testMethod(1080, -1.3822, -1.9264, -0, 0.2045, 1.824, 8.9642);
		testMethod(1085, -1.3918, -1.9264, -0, 0.2138, 1.8691, 9.0299);
		testMethod(1090, -1.4015, -1.9264, -0, 0.2232, 1.9134, 8.8471);
		testMethod(1095, -1.4111, -1.9264, -0, 0.2329, 1.9566, 8.6483);
		testMethod(1100, -1.4207, -1.9264, -0, 0.2428, 1.9989, 8.4495);
		testMethod(1105, -1.4304, -1.9264, -0, 0.2529, 2.0401, 8.2506);
		testMethod(1110, -1.44, -1.9264, -0, 0.2632, 2.0804, 8.0518);
		testMethod(1115, -1.4496, -1.9264, -0, 0.2737, 2.1196, 7.853);
		testMethod(1120, -1.4593, -1.9264, -0, 0.2844, 2.1579, 7.6542);
		testMethod(1125, -1.4689, -1.9264, -0, 0.2953, 2.1952, 7.4554);
		testMethod(1130, -1.4785, -1.9264, -0, 0.3063, 2.2315, 7.2566);
		testMethod(1135, -1.4882, -1.9264, -0, 0.3176, 2.2668, 7.0578);
		testMethod(1140, -1.4978, -1.9264, -0, 0.329, 2.3011, 6.859);
		testMethod(1145, -1.5074, -1.9264, -0, 0.3406, 2.3344, 6.6602);
		testMethod(1150, -1.5171, -1.9264, -0, 0.3524, 2.3667, 6.4614);
		testMethod(1155, -1.5267, -1.9264, -0, 0.3643, 2.398, 6.2626);
		testMethod(1160, -1.5363, -1.9264, -0, 0.3763, 2.4283, 6.0638);
		testMethod(1165, -1.5459, -1.9264, -0, 0.3885, 2.4576, 5.865);
		testMethod(1170, -1.5556, -1.9264, -0, 0.4009, 2.486, 5.6662);
		testMethod(1175, -1.5652, -1.9264, -0, 0.4134, 2.5133, 5.4674);
		testMethod(1180, -1.5748, -1.9264, -0, 0.426, 2.5396, 5.2686);
		testMethod(1185, -1.5845, -1.9264, -0, 0.4388, 2.565, 5.0697);
		testMethod(1190, -1.5941, -1.9264, -0, 0.4517, 2.5893, 4.8709);
		testMethod(1195, -1.6037, -1.9264, -0, 0.4647, 2.6127, 4.6721);
		testMethod(1200, -1.6134, -1.9264, -0, 0.4778, 2.6351, 4.4733);
		testMethod(1205, -1.623, -1.9264, -0, 0.491, 2.6564, 4.2745);
		testMethod(1210, -1.6326, -1.9264, -0, 0.5044, 2.6768, 4.0757);
		testMethod(1215, -1.6423, -1.9264, -0, 0.5178, 2.6962, 3.8769);
		testMethod(1220, -1.6519, -1.9264, -0, 0.5313, 2.7146, 3.6781);
		testMethod(1225, -1.6615, -1.9264, -0, 0.545, 2.732, 3.4793);
		testMethod(1230, -1.6712, -1.9264, -0, 0.5587, 2.7484, 3.2805);
		testMethod(1235, -1.6808, -1.9264, -0, 0.5724, 2.7638, 3.0817);
		testMethod(1240, -1.6904, -1.9264, -0, 0.5863, 2.7782, 2.8829);
		testMethod(1245, -1.7001, -1.9264, -0, 0.6002, 2.7916, 2.6841);
		testMethod(1250, -1.7097, -1.9264, -0, 0.6142, 2.8041, 2.4853);
		testMethod(1255, -1.7193, -1.9264, -0, 0.6283, 2.8155, 2.2865);
		testMethod(1260, -1.729, -1.9264, -0, 0.6424, 2.8259, 2.0877);
		testMethod(1265, -1.7386, -1.9264, -0, 0.6565, 2.8354, 1.8888);
		testMethod(1270, -1.7482, -1.9264, -0, 0.6707, 2.8438, 1.69);
		testMethod(1275, -1.7579, -1.9264, -0, 0.6849, 2.8513, 1.4912);
		testMethod(1280, -1.7675, -1.9264, -0, 0.6992, 2.8577, 1.2924);
		testMethod(1285, -1.7771, -1.9264, -0, 0.7135, 2.8632, 1.0936);
		testMethod(1290, -1.7867, -1.9264, -0, 0.7279, 2.8677, 0.8948);
		testMethod(1295, -1.7964, -1.9264, -0, 0.7422, 2.8712, 0.696);
		testMethod(1300, -1.806, -1.9264, -0, 0.7566, 2.8736, 0.4972);
		testMethod(1305, -1.8156, -1.9264, -0, 0.7709, 2.8751, 0.2984);
		testMethod(1310, -1.8253, -1.9264, -0, 0.7853, 2.8756, 0.0996);
		testMethod(1315, -1.8349, -1.9264, -0, 0.7997, 2.8751, -0.0994);
		testMethod(1320, -1.8445, -1.9264, -0, 0.8141, 2.8737, -0.2982);
		testMethod(1325, -1.8542, -1.9264, -0, 0.8284, 2.8712, -0.497);
		testMethod(1330, -1.8638, -1.9264, -0, 0.8428, 2.8677, -0.6958);
		testMethod(1335, -1.8734, -1.9264, -0, 0.8571, 2.8632, -0.8946);
		testMethod(1340, -1.8831, -1.9264, -0, 0.8714, 2.8577, -1.0934);
		testMethod(1345, -1.8927, -1.9264, -0, 0.8857, 2.8513, -1.2922);
		testMethod(1350, -1.9023, -1.9264, -0, 0.8999, 2.8438, -1.491);
		testMethod(1355, -1.912, -1.9264, -0, 0.9141, 2.8354, -1.6899);
		testMethod(1360, -1.9216, -1.9264, -0, 0.9283, 2.8259, -1.8887);
		testMethod(1365, -1.9312, -1.9264, -0, 0.9424, 2.8155, -2.0875);
		testMethod(1370, -1.9409, -1.9264, -0, 0.9564, 2.8041, -2.2863);
		testMethod(1375, -1.9505, -1.9264, -0, 0.9704, 2.7916, -2.4851);
		testMethod(1380, -1.9601, -1.9264, -0, 0.9843, 2.7782, -2.6839);
		testMethod(1385, -1.9698, -1.9264, -0, 0.9982, 2.7638, -2.8827);
		testMethod(1390, -1.9794, -1.9264, -0, 1.012, 2.7484, -3.0815);
		testMethod(1395, -1.989, -1.9264, -0, 1.0257, 2.732, -3.2803);
		testMethod(1400, -1.9987, -1.9264, -0, 1.0393, 2.7146, -3.4791);
		testMethod(1405, -2.0083, -1.9264, -0, 1.0528, 2.6962, -3.6779);
		testMethod(1410, -2.0179, -1.9264, -0, 1.0662, 2.6768, -3.8767);
		testMethod(1415, -2.0276, -1.9264, -0, 1.0796, 2.6565, -4.0755);
		testMethod(1420, -2.0372, -1.9264, -0, 1.0928, 2.6351, -4.2743);
		testMethod(1425, -2.0468, -1.9264, -0, 1.1059, 2.6127, -4.4731);
		testMethod(1430, -2.0564, -1.9264, -0, 1.1189, 2.5894, -4.6719);
		testMethod(1435, -2.0661, -1.9264, -0, 1.1318, 2.565, -4.8708);
		testMethod(1440, -2.0757, -1.9264, -0, 1.1446, 2.5397, -5.0696);
		testMethod(1445, -2.0853, -1.9264, -0, 1.1572, 2.5133, -5.2684);
		testMethod(1450, -2.095, -1.9264, -0, 1.1697, 2.486, -5.4672);
		testMethod(1455, -2.1046, -1.9264, -0, 1.1821, 2.4576, -5.666);
		testMethod(1460, -2.1142, -1.9264, -0, 1.1943, 2.4283, -5.8648);
		testMethod(1465, -2.1239, -1.9264, -0, 1.2064, 2.398, -6.0636);
		testMethod(1470, -2.1335, -1.9264, -0, 1.2183, 2.3667, -6.2624);
		testMethod(1475, -2.1431, -1.9264, -0, 1.23, 2.3344, -6.4612);
		testMethod(1480, -2.1528, -1.9264, -0, 1.2416, 2.3011, -6.66);
		testMethod(1485, -2.1624, -1.9264, -0, 1.253, 2.2668, -6.8588);
		testMethod(1490, -2.172, -1.9264, -0, 1.2643, 2.2315, -7.0576);
		testMethod(1495, -2.1817, -1.9264, -0, 1.2753, 2.1952, -7.2564);
		testMethod(1500, -2.1913, -1.9264, -0, 1.2862, 2.1579, -7.4552);
		testMethod(1505, -2.2009, -1.9264, -0, 1.2969, 2.1197, -7.654);
		testMethod(1510, -2.2106, -1.9264, -0, 1.3074, 2.0804, -7.8528);
		testMethod(1515, -2.2202, -1.9264, -0, 1.3177, 2.0402, -8.0517);
		testMethod(1520, -2.2298, -1.9264, -0, 1.3278, 1.9989, -8.2505);
		testMethod(1525, -2.2395, -1.9264, -0, 1.3377, 1.9567, -8.4493);
		testMethod(1530, -2.2491, -1.9264, -0, 1.3474, 1.9134, -8.6481);
		testMethod(1535, -2.2587, -1.9264, -0, 1.3568, 1.8692, -8.8469);
		testMethod(1540, -2.2684, -1.9264, -0, 1.3661, 1.8243, -8.9717);
		testMethod(1545, -2.278, -1.9264, -0, 1.3751, 1.7795, -8.9642);
		testMethod(1550, -2.2876, -1.9264, -0, 1.3839, 1.7347, -8.9642);
		testMethod(1555, -2.2972, -1.9264, -0, 1.3924, 1.6899, -8.9642);
		testMethod(1560, -2.3069, -1.9264, -0, 1.4008, 1.645, -8.9642);
		testMethod(1565, -2.3165, -1.9264, -0, 1.4089, 1.6002, -8.9642);
		testMethod(1570, -2.3261, -1.9264, -0, 1.4168, 1.5554, -8.9642);
		testMethod(1575, -2.3358, -1.9264, -0, 1.4244, 1.5106, -8.9642);
		testMethod(1580, -2.3454, -1.9264, -0, 1.4319, 1.4658, -8.9642);
		testMethod(1585, -2.355, -1.9264, -0, 1.4391, 1.4209, -8.9642);
		testMethod(1590, -2.3647, -1.9264, -0, 1.4461, 1.3761, -8.9642);
		testMethod(1595, -2.3743, -1.9264, -0, 1.4529, 1.3313, -8.9642);
		testMethod(1600, -2.3839, -1.9264, -0, 1.4594, 1.2865, -8.9642);
		testMethod(1605, -2.3936, -1.9264, -0, 1.4657, 1.2417, -8.9642);
		testMethod(1610, -2.4032, -1.9264, -0, 1.4718, 1.1968, -8.9642);
		testMethod(1615, -2.4128, -1.9264, -0, 1.4777, 1.152, -8.9642);
		testMethod(1620, -2.4225, -1.9264, -0, 1.4833, 1.1072, -8.9642);
		testMethod(1625, -2.4321, -1.9264, -0, 1.4888, 1.0624, -8.9642);
		testMethod(1630, -2.4417, -1.9264, -0, 1.494, 1.0175, -8.9642);
		testMethod(1635, -2.4514, -1.9264, -0, 1.4989, 0.9728, -8.9589);
		testMethod(1640, -2.461, -1.9264, -0, 1.5037, 0.9293, -8.6958);
		testMethod(1645, -2.4706, -1.9264, -0, 1.5082, 0.8868, -8.497);
		testMethod(1650, -2.4803, -1.9264, -0, 1.5126, 0.8453, -8.2982);
		testMethod(1655, -2.4899, -1.9264, -0, 1.5167, 0.8048, -8.0994);
		testMethod(1660, -2.4995, -1.9264, -0, 1.5206, 0.7653, -7.9006);
		testMethod(1665, -2.5092, -1.9264, -0, 1.5243, 0.7268, -7.7018);
		testMethod(1670, -2.5188, -1.9264, -0, 1.5279, 0.6893, -7.503);
		testMethod(1675, -2.5284, -1.9264, -0, 1.5312, 0.6528, -7.3042);
		testMethod(1680, -2.5381, -1.9264, -0, 1.5344, 0.6172, -7.1054);
		testMethod(1685, -2.5477, -1.9264, -0, 1.5374, 0.5827, -6.9066);
		testMethod(1690, -2.5573, -1.9264, -0, 1.5402, 0.5492, -6.7078);
		testMethod(1695, -2.5669, -1.9264, -0, 1.5429, 0.5166, -6.5089);
		testMethod(1700, -2.5766, -1.9264, -0, 1.5454, 0.4851, -6.3101);
		testMethod(1705, -2.5862, -1.9264, -0, 1.5478, 0.4545, -6.1113);
		testMethod(1710, -2.5958, -1.9264, -0, 1.55, 0.4249, -5.9125);
		testMethod(1715, -2.6055, -1.9264, -0, 1.552, 0.3964, -5.7137);
		testMethod(1720, -2.6151, -1.9264, -0, 1.5539, 0.3688, -5.5149);
		testMethod(1725, -2.6247, -1.9264, -0, 1.5557, 0.3422, -5.3161);
		testMethod(1730, -2.6344, -1.9264, -0, 1.5573, 0.3166, -5.1173);
		testMethod(1735, -2.644, -1.9264, -0, 1.5589, 0.292, -4.9185);
		testMethod(1740, -2.6536, -1.9264, -0, 1.5603, 0.2684, -4.7197);
		testMethod(1745, -2.6633, -1.9264, -0, 1.5616, 0.2458, -4.5209);
		testMethod(1750, -2.6729, -1.9264, -0, 1.5627, 0.2242, -4.3221);
		testMethod(1755, -2.6825, -1.9264, -0, 1.5638, 0.2036, -4.1233);
		testMethod(1760, -2.6922, -1.9264, -0, 1.5648, 0.184, -3.9245);
		testMethod(1765, -2.7018, -1.9264, -0, 1.5656, 0.1654, -3.7257);
		testMethod(1770, -2.7114, -1.9264, -0, 1.5664, 0.1477, -3.5269);
		testMethod(1775, -2.7211, -1.9264, -0, 1.5671, 0.1311, -3.328);
		testMethod(1780, -2.7307, -1.9264, -0, 1.5677, 0.1154, -3.1292);
		testMethod(1785, -2.7403, -1.9264, -0, 1.5683, 0.1008, -2.9304);
		testMethod(1790, -2.75, -1.9264, -0, 1.5687, 0.0871, -2.7316);
		testMethod(1795, -2.7596, -1.9264, -0, 1.5691, 0.0745, -2.5328);
		testMethod(1800, -2.7692, -1.9264, -0, 1.5695, 0.0628, -2.334);
		testMethod(1805, -2.7789, -1.9264, -0, 1.5698, 0.0521, -2.1352);
		testMethod(1810, -2.7885, -1.9264, -0, 1.57, 0.0424, -1.9364);
		testMethod(1815, -2.7981, -1.9264, -0, 1.5702, 0.0337, -1.7376);
		testMethod(1820, -2.8077, -1.9264, -0, 1.5703, 0.0261, -1.5388);
		testMethod(1825, -2.8174, -1.9264, -0, 1.5705, 0.0194, -1.34);
		testMethod(1830, -2.827, -1.9264, -0, 1.5705, 0.0136, -1.1412);
		testMethod(1835, -2.8366, -1.9264, -0, 1.5706, 0.0089, -0.9424);
		testMethod(1840, -2.8463, -1.9264, -0, 1.5706, 0.0052, -0.7436);
		testMethod(1845, -2.8559, -1.9264, -0, 1.5707, 0.0025, -0.5448);
		testMethod(1850, -2.8655, -1.9264, -0, 1.5707, 0.0008, -0.346);
		testMethod(1855, -2.8752, -1.9264, -0, 1.5707, 0, -0.1471);
		testMethod(1860, -2.8848, -1.9264, -0, 1.5707, 0, -0.0057);
		testMethod(1865, -2.8944, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1870, -2.9041, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1875, -2.9137, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1880, -2.9233, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1885, -2.933, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1890, -2.9426, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1895, -2.9522, -1.9264, -0, 1.5707, 0, 0);
		testMethod(1900, -2.9619, -1.9259, 0.0992, 1.5707, 0, 0);
		testMethod(1905, -2.9715, -1.9249, 0.1983, 1.5707, 0, 0);
		testMethod(1910, -2.9811, -1.9234, 0.2975, 1.5707, 0, 0);
		testMethod(1915, -2.9907, -1.9215, 0.3967, 1.5707, 0, 0);
		testMethod(1920, -3.0003, -1.919, 0.4959, 1.5707, 0, 0);
		testMethod(1925, -3.0099, -1.916, 0.595, 1.5707, 0, 0);
		testMethod(1930, -3.0195, -1.9125, 0.6942, 1.5707, 0, 0);
		testMethod(1935, -3.029, -1.9086, 0.7934, 1.5707, 0, 0);
		testMethod(1940, -3.0386, -1.9041, 0.8925, 1.5707, 0, 0);
		testMethod(1945, -3.0481, -1.8991, 0.9917, 1.5707, 0, 0);
		testMethod(1950, -3.0576, -1.8937, 1.0909, 1.5707, 0, 0);
		testMethod(1955, -3.067, -1.8877, 1.1901, 1.5707, 0, 0);
		testMethod(1960, -3.0764, -1.8813, 1.2892, 1.5707, 0, 0);
		testMethod(1965, -3.0858, -1.8743, 1.3884, 1.5707, 0, 0);
		testMethod(1970, -3.0952, -1.8669, 1.4876, 1.5707, 0, 0);
		testMethod(1975, -3.1045, -1.859, 1.5868, 1.5707, 0, 0);
		testMethod(1980, -3.1138, -1.8505, 1.6859, 1.5707, 0, 0);
		testMethod(1985, -3.123, -1.8416, 1.7851, 1.5707, 0, 0);
		testMethod(1990, -3.1322, -1.8322, 1.8843, 1.5707, 0, 0);
		testMethod(1995, -3.1413, -1.8223, 1.9834, 1.5707, 0, 0);
		testMethod(2000, -3.1504, -1.8119, 2.0826, 1.5707, 0, 0);
		testMethod(2005, -3.1594, -1.801, 2.1818, 1.5707, 0, 0);
		testMethod(2010, -3.1684, -1.7896, 2.281, 1.5707, 0, 0);
		testMethod(2015, -3.1773, -1.7777, 2.3801, 1.5707, 0, 0);
		testMethod(2020, -3.1862, -1.7653, 2.4793, 1.5707, 0, 0);
		testMethod(2025, -3.195, -1.7524, 2.5785, 1.5707, 0, 0);
		testMethod(2030, -3.2037, -1.739, 2.6776, 1.5707, 0, 0);
		testMethod(2035, -3.2124, -1.7251, 2.7768, 1.5707, 0, 0);
		testMethod(2040, -3.221, -1.7107, 2.876, 1.5707, 0, 0);
		testMethod(2045, -3.2295, -1.6958, 2.9752, 1.5707, 0, 0);
		testMethod(2050, -3.2379, -1.6805, 3.0743, 1.5707, 0, 0);
		testMethod(2055, -3.2463, -1.6646, 3.1735, 1.5707, 0, 0);
		testMethod(2060, -3.2546, -1.6482, 3.2727, 1.5707, 0, 0);
		testMethod(2065, -3.2628, -1.6314, 3.3718, 1.5707, 0, 0);
		testMethod(2070, -3.2709, -1.614, 3.471, 1.5707, 0, 0);
		testMethod(2075, -3.2789, -1.5967, 3.471, 1.5707, 0, 0);
		testMethod(2080, -3.2868, -1.5793, 3.471, 1.5707, 0, 0);
		testMethod(2085, -3.2947, -1.562, 3.471, 1.5707, 0, 0);
		testMethod(2090, -3.3025, -1.5446, 3.471, 1.5707, 0, 0);
		testMethod(2095, -3.3101, -1.5272, 3.471, 1.5707, 0, 0);
		testMethod(2100, -3.3177, -1.5099, 3.471, 1.5707, 0, 0);
		testMethod(2105, -3.3252, -1.4925, 3.471, 1.5707, 0, 0);
		testMethod(2110, -3.3327, -1.4752, 3.471, 1.5707, 0, 0);
		testMethod(2115, -3.34, -1.4578, 3.471, 1.5707, 0, 0);
		testMethod(2120, -3.3472, -1.4405, 3.471, 1.5707, 0, 0);
		testMethod(2125, -3.3544, -1.4231, 3.471, 1.5707, 0, 0);
		testMethod(2130, -3.3615, -1.4058, 3.471, 1.5707, 0, 0);
		testMethod(2135, -3.3684, -1.3884, 3.471, 1.5707, 0, 0);
		testMethod(2140, -3.3753, -1.3711, 3.471, 1.5707, 0, 0);
		testMethod(2145, -3.3822, -1.3537, 3.471, 1.5707, 0, 0);
		testMethod(2150, -3.3889, -1.3363, 3.471, 1.5707, 0, 0);
		testMethod(2155, -3.3955, -1.319, 3.471, 1.5707, 0, 0);
		testMethod(2160, -3.4021, -1.3016, 3.471, 1.5707, 0, 0);
		testMethod(2165, -3.4085, -1.2843, 3.471, 1.5707, 0, 0);
		testMethod(2170, -3.4149, -1.2669, 3.471, 1.5707, 0, 0);
		testMethod(2175, -3.4212, -1.2496, 3.471, 1.5707, 0, 0);
		testMethod(2180, -3.4274, -1.2322, 3.471, 1.5707, 0, 0);
		testMethod(2185, -3.4335, -1.2149, 3.471, 1.5707, 0, 0);
		testMethod(2190, -3.4396, -1.1975, 3.471, 1.5707, 0, 0);
		testMethod(2195, -3.4455, -1.1801, 3.471, 1.5707, 0, 0);
		testMethod(2200, -3.4514, -1.1628, 3.471, 1.5707, 0, 0);
		testMethod(2205, -3.4571, -1.1454, 3.471, 1.5707, 0, 0);
		testMethod(2210, -3.4628, -1.1281, 3.471, 1.5707, 0, 0);
		testMethod(2215, -3.4684, -1.1107, 3.471, 1.5707, 0, 0);
		testMethod(2220, -3.4739, -1.0934, 3.471, 1.5707, 0, 0);
		testMethod(2225, -3.4793, -1.076, 3.471, 1.5707, 0, 0);
		testMethod(2230, -3.4847, -1.0587, 3.471, 1.5707, 0, 0);
		testMethod(2235, -3.4899, -1.0413, 3.471, 1.5707, 0, 0);
		testMethod(2240, -3.4951, -1.0239, 3.471, 1.5707, 0, 0);
		testMethod(2245, -3.5002, -1.0066, 3.471, 1.5707, 0, 0);
		testMethod(2250, -3.5052, -0.9892, 3.471, 1.5707, 0, 0);
		testMethod(2255, -3.5101, -0.9719, 3.471, 1.5707, 0, 0);
		testMethod(2260, -3.5149, -0.9545, 3.471, 1.5707, 0, 0);
		testMethod(2265, -3.5196, -0.9372, 3.471, 1.5707, 0, 0);
		testMethod(2270, -3.5243, -0.9198, 3.471, 1.5707, 0, 0);
		testMethod(2275, -3.5288, -0.9025, 3.471, 1.5707, 0, 0);
		testMethod(2280, -3.5333, -0.8851, 3.471, 1.5707, 0, 0);
		testMethod(2285, -3.5377, -0.8678, 3.471, 1.5707, 0, 0);
		testMethod(2290, -3.542, -0.8504, 3.471, 1.5707, 0, 0);
		testMethod(2295, -3.5462, -0.833, 3.471, 1.5707, 0, 0);
		testMethod(2300, -3.5503, -0.8157, 3.471, 1.5707, 0, 0);
		testMethod(2305, -3.5543, -0.7983, 3.471, 1.5707, 0, 0);
		testMethod(2310, -3.5583, -0.781, 3.471, 1.5707, 0, 0);
		testMethod(2315, -3.5621, -0.7636, 3.471, 1.5707, 0, 0);
		testMethod(2320, -3.5659, -0.7463, 3.471, 1.5707, 0, 0);
		testMethod(2325, -3.5696, -0.7289, 3.471, 1.5707, 0, 0);
		testMethod(2330, -3.5732, -0.7116, 3.471, 1.5707, 0, 0);
		testMethod(2335, -3.5767, -0.6942, 3.471, 1.5707, 0, 0);
		testMethod(2340, -3.5801, -0.6768, 3.471, 1.5707, 0, 0);
		testMethod(2345, -3.5835, -0.6595, 3.471, 1.5707, 0, 0);
		testMethod(2350, -3.5867, -0.6421, 3.471, 1.5707, 0, 0);
		testMethod(2355, -3.5899, -0.6248, 3.471, 1.5707, 0, 0);
		testMethod(2360, -3.593, -0.6074, 3.471, 1.5707, 0, 0);
		testMethod(2365, -3.596, -0.5901, 3.471, 1.5707, 0, 0);
		testMethod(2370, -3.5989, -0.5727, 3.471, 1.5707, 0, 0);
		testMethod(2375, -3.6017, -0.5554, 3.471, 1.5707, 0, 0);
		testMethod(2380, -3.6044, -0.538, 3.471, 1.5707, 0, 0);
		testMethod(2385, -3.6071, -0.5207, 3.471, 1.5707, 0, 0);
		testMethod(2390, -3.6096, -0.5033, 3.471, 1.5707, 0, 0);
		testMethod(2395, -3.6121, -0.4859, 3.471, 1.5707, 0, 0);
		testMethod(2400, -3.6145, -0.4686, 3.471, 1.5707, 0, 0);
		testMethod(2405, -3.6168, -0.4512, 3.471, 1.5707, 0, 0);
		testMethod(2410, -3.619, -0.4339, 3.471, 1.5707, 0, 0);
		testMethod(2415, -3.6211, -0.4165, 3.471, 1.5707, 0, 0);
		testMethod(2420, -3.6232, -0.3992, 3.471, 1.5707, 0, 0);
		testMethod(2425, -3.6251, -0.3818, 3.471, 1.5707, 0, 0);
		testMethod(2430, -3.627, -0.3645, 3.471, 1.5707, 0, 0);
		testMethod(2435, -3.6288, -0.3471, 3.471, 1.5707, 0, 0);
		testMethod(2440, -3.6305, -0.3297, 3.471, 1.5707, 0, 0);
		testMethod(2445, -3.6321, -0.3124, 3.471, 1.5707, 0, 0);
		testMethod(2450, -3.6336, -0.295, 3.471, 1.5707, 0, 0);
		testMethod(2455, -3.635, -0.2782, 3.3718, 1.5707, 0, 0);
		testMethod(2460, -3.6364, -0.2618, 3.2727, 1.5707, 0, 0);
		testMethod(2465, -3.6376, -0.2459, 3.1735, 1.5707, 0, 0);
		testMethod(2470, -3.6388, -0.2306, 3.0743, 1.5707, 0, 0);
		testMethod(2475, -3.6399, -0.2157, 2.9752, 1.5707, 0, 0);
		testMethod(2480, -3.641, -0.2013, 2.876, 1.5707, 0, 0);
		testMethod(2485, -3.642, -0.1874, 2.7768, 1.5707, 0, 0);
		testMethod(2490, -3.6429, -0.174, 2.6776, 1.5707, 0, 0);
		testMethod(2495, -3.6437, -0.1612, 2.5785, 1.5707, 0, 0);
		testMethod(2500, -3.6445, -0.1488, 2.4793, 1.5707, 0, 0);
		testMethod(2505, -3.6452, -0.1369, 2.3801, 1.5707, 0, 0);
		testMethod(2510, -3.6459, -0.1255, 2.281, 1.5707, 0, 0);
		testMethod(2515, -3.6465, -0.1145, 2.1818, 1.5707, 0, 0);
		testMethod(2520, -3.647, -0.1041, 2.0826, 1.5707, 0, 0);
		testMethod(2525, -3.6475, -0.0942, 1.9834, 1.5707, 0, 0);
		testMethod(2530, -3.6479, -0.0848, 1.8843, 1.5707, 0, 0);
		testMethod(2535, -3.6483, -0.0759, 1.7851, 1.5707, 0, 0);
		testMethod(2540, -3.6487, -0.0674, 1.6859, 1.5707, 0, 0);
		testMethod(2545, -3.649, -0.0595, 1.5868, 1.5707, 0, 0);
		testMethod(2550, -3.6493, -0.0521, 1.4876, 1.5707, 0, 0);
		testMethod(2555, -3.6495, -0.0451, 1.3884, 1.5707, 0, 0);
		testMethod(2560, -3.6497, -0.0387, 1.2892, 1.5707, 0, 0);
		testMethod(2565, -3.6499, -0.0327, 1.1901, 1.5707, 0, 0);
		testMethod(2570, -3.6501, -0.0273, 1.0909, 1.5707, 0, 0);
		testMethod(2575, -3.6502, -0.0223, 0.9917, 1.5707, 0, 0);
		testMethod(2580, -3.6503, -0.0179, 0.8925, 1.5707, 0, 0);
		testMethod(2585, -3.6504, -0.0139, 0.7934, 1.5707, 0, 0);
		testMethod(2590, -3.6504, -0.0104, 0.6942, 1.5707, 0, 0);
		testMethod(2595, -3.6505, -0.0074, 0.595, 1.5707, 0, 0);
		testMethod(2600, -3.6505, -0.005, 0.4959, 1.5707, 0, 0);
		testMethod(2605, -3.6505, -0.003, 0.3967, 1.5707, 0, 0);
		testMethod(2610, -3.6505, -0.0015, 0.2975, 1.5707, 0, 0);
		testMethod(2615, -3.6506, -0.0005, 0.1983, 1.5707, 0, 0);
		testMethod(2620, -3.6506, -0, 0.0992, 1.5707, 0, 0);
		testMethod(2625, -3.6506, -0, -0, 1.5707, 0, 0);
		testMethod(2625, -3.6506, -0, -0, 1.5707, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}