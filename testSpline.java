package org.usfirst.frc.team1197.robot;

public class testSpline extends TorTrajectory {

	public testSpline() {
		super(3.2597, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0999, 0, 0, 0);
		testMethod(10, -0, -0.0015, -0.1998, 0, 0, 0);
		testMethod(15, -0, -0.003, -0.2997, 0, 0, 0);
		testMethod(20, -0, -0.005, -0.3996, 0, 0, 0);
		testMethod(25, -0.0001, -0.0075, -0.4995, 0, 0, 0);
		testMethod(30, -0.0001, -0.0105, -0.5994, 0, 0, 0);
		testMethod(35, -0.0002, -0.014, -0.6993, 0, 0, 0);
		testMethod(40, -0.0003, -0.018, -0.7992, 0, 0, 0);
		testMethod(45, -0.0004, -0.0225, -0.8991, 0, 0, 0);
		testMethod(50, -0.0005, -0.0275, -0.999, 0, 0, 0);
		testMethod(55, -0.0006, -0.033, -1.0989, 0, 0, 0);
		testMethod(60, -0.0008, -0.039, -1.1988, 0, 0, 0);
		testMethod(65, -0.001, -0.0455, -1.2987, 0, 0, 0);
		testMethod(70, -0.0013, -0.0524, -1.3986, 0, 0, 0);
		testMethod(75, -0.0015, -0.0599, -1.4985, 0, 0, 0);
		testMethod(80, -0.0019, -0.0679, -1.5984, 0, 0, 0);
		testMethod(85, -0.0022, -0.0764, -1.6983, 0, 0, 0);
		testMethod(90, -0.0026, -0.0854, -1.7982, 0, 0, 0);
		testMethod(95, -0.0031, -0.0949, -1.8981, 0, 0, 0);
		testMethod(100, -0.0036, -0.1049, -1.998, 0, 0, 0);
		testMethod(105, -0.0041, -0.1154, -2.0979, 0, 0, 0);
		testMethod(110, -0.0047, -0.1264, -2.1978, 0, 0, 0);
		testMethod(115, -0.0054, -0.1379, -2.2977, 0, 0, 0);
		testMethod(120, -0.0061, -0.1499, -2.3976, 0, 0, 0);
		testMethod(125, -0.0069, -0.1623, -2.4975, 0, 0, 0);
		testMethod(130, -0.0077, -0.1753, -2.5975, 0, 0, 0);
		testMethod(135, -0.0087, -0.1888, -2.6974, 0, 0, 0);
		testMethod(140, -0.0096, -0.2028, -2.7973, 0, 0, 0);
		testMethod(145, -0.0107, -0.2173, -2.8972, 0, 0, 0);
		testMethod(150, -0.0118, -0.2323, -2.9971, 0, 0, 0);
		testMethod(155, -0.013, -0.2478, -3.097, 0, 0, 0);
		testMethod(160, -0.0143, -0.2637, -3.1969, 0, 0, 0);
		testMethod(165, -0.0156, -0.2802, -3.2968, 0, 0, 0);
		testMethod(170, -0.0171, -0.2972, -3.3967, 0, 0, 0);
		testMethod(175, -0.0186, -0.3147, -3.4966, 0, 0, 0);
		testMethod(180, -0.0202, -0.3322, -3.4966, 0, 0, 0);
		testMethod(185, -0.0219, -0.3497, -3.4966, 0, 0, 0);
		testMethod(190, -0.0237, -0.3671, -3.4966, 0, 0, 0);
		testMethod(195, -0.0256, -0.3846, -3.4966, 0, 0, 0);
		testMethod(200, -0.0276, -0.4021, -3.4966, 0, 0, 0);
		testMethod(205, -0.0296, -0.4196, -3.4966, 0, 0, 0);
		testMethod(210, -0.0318, -0.4371, -3.4966, 0, 0, 0);
		testMethod(215, -0.034, -0.4546, -3.4966, 0, 0, 0);
		testMethod(220, -0.0363, -0.472, -3.4966, 0, 0, 0);
		testMethod(225, -0.0387, -0.4895, -3.4966, 0, 0, 0);
		testMethod(230, -0.0412, -0.507, -3.4966, 0, 0, 0);
		testMethod(235, -0.0438, -0.5245, -3.4966, 0, 0, 0);
		testMethod(240, -0.0465, -0.542, -3.4966, 0, 0, 0);
		testMethod(245, -0.0492, -0.5595, -3.4966, 0, 0, 0);
		testMethod(250, -0.0521, -0.5769, -3.4966, 0, 0, 0);
		testMethod(255, -0.055, -0.5944, -3.4966, 0, 0, 0);
		testMethod(260, -0.058, -0.6119, -3.4966, 0, 0, 0);
		testMethod(265, -0.0611, -0.6294, -3.4966, 0, 0, 0);
		testMethod(270, -0.0643, -0.6469, -3.4966, 0, 0, 0);
		testMethod(275, -0.0676, -0.6643, -3.4966, 0, 0, 0);
		testMethod(280, -0.0709, -0.6818, -3.4966, 0, 0, 0);
		testMethod(285, -0.0744, -0.6993, -3.4966, 0, 0, 0);
		testMethod(290, -0.0779, -0.7168, -3.4966, 0, 0, 0);
		testMethod(295, -0.0816, -0.7343, -3.4966, 0, 0, 0);
		testMethod(300, -0.0853, -0.7518, -3.4966, 0, 0, 0);
		testMethod(305, -0.0891, -0.7692, -3.4966, 0, 0, 0);
		testMethod(310, -0.093, -0.7867, -3.4966, 0, 0, 0);
		testMethod(315, -0.0969, -0.8042, -3.4966, 0, 0, 0);
		testMethod(320, -0.101, -0.8217, -3.4966, 0, 0, 0);
		testMethod(325, -0.1052, -0.8392, -3.4966, 0, 0, 0);
		testMethod(330, -0.1094, -0.8567, -3.4966, 0, 0, 0);
		testMethod(335, -0.1137, -0.8741, -3.4966, 0, 0, 0);
		testMethod(340, -0.1181, -0.8916, -3.4966, 0, 0, 0);
		testMethod(345, -0.1226, -0.9091, -3.4966, 0, 0, 0);
		testMethod(350, -0.1272, -0.9266, -3.4966, 0, 0, 0);
		testMethod(355, -0.1319, -0.9441, -3.4966, 0, 0, 0);
		testMethod(360, -0.1367, -0.9616, -3.4966, 0, 0, 0);
		testMethod(365, -0.1415, -0.979, -3.4966, 0, 0, 0);
		testMethod(370, -0.1465, -0.9965, -3.4966, 0, 0, 0);
		testMethod(375, -0.1515, -1.014, -3.4966, 0, 0, 0);
		testMethod(380, -0.1566, -1.0315, -3.4966, 0, 0, 0);
		testMethod(385, -0.1618, -1.049, -3.4966, 0, 0, 0);
		testMethod(390, -0.1671, -1.0665, -3.4966, 0, 0, 0);
		testMethod(395, -0.1725, -1.0839, -3.4966, 0, 0, 0);
		testMethod(400, -0.1779, -1.1014, -3.4966, 0, 0, 0);
		testMethod(405, -0.1835, -1.1189, -3.4966, 0, 0, 0);
		testMethod(410, -0.1891, -1.1364, -3.4966, 0, 0, 0);
		testMethod(415, -0.1948, -1.1539, -3.4966, 0, 0, 0);
		testMethod(420, -0.2007, -1.1714, -3.4966, 0, 0, 0);
		testMethod(425, -0.2066, -1.1888, -3.4966, 0, 0, 0);
		testMethod(430, -0.2125, -1.2063, -3.4966, 0, 0, 0);
		testMethod(435, -0.2186, -1.2238, -3.4966, 0, 0, 0);
		testMethod(440, -0.2248, -1.2413, -3.4966, 0, 0, 0);
		testMethod(445, -0.231, -1.2588, -3.4966, 0, 0, 0);
		testMethod(450, -0.2374, -1.2762, -3.4966, 0, 0, 0);
		testMethod(455, -0.2438, -1.2937, -3.4966, 0, 0, 0);
		testMethod(460, -0.2503, -1.3112, -3.4966, 0, 0, 0);
		testMethod(465, -0.2569, -1.3287, -3.4966, 0, 0, 0);
		testMethod(470, -0.2636, -1.3462, -3.4966, 0, 0, 0);
		testMethod(475, -0.2704, -1.3637, -3.4966, 0, 0, 0);
		testMethod(480, -0.2772, -1.3811, -3.4966, 0, 0, 0);
		testMethod(485, -0.2842, -1.3986, -3.4966, 0, 0, 0);
		testMethod(490, -0.2912, -1.4161, -3.4966, 0, 0, 0);
		testMethod(495, -0.2983, -1.4336, -3.4966, 0, 0, 0);
		testMethod(500, -0.3056, -1.4511, -3.4966, 0, 0, 0);
		testMethod(505, -0.3129, -1.4686, -3.4966, 0, 0, 0);
		testMethod(510, -0.3202, -1.486, -3.4966, 0, 0, 0);
		testMethod(515, -0.3277, -1.5035, -3.4966, 0, 0, 0);
		testMethod(520, -0.3353, -1.521, -3.4966, 0, 0, 0);
		testMethod(525, -0.3429, -1.5385, -3.4966, 0, 0, 0);
		testMethod(530, -0.3507, -1.556, -3.4966, 0, 0, 0);
		testMethod(535, -0.3585, -1.5735, -3.4966, 0, 0, 0);
		testMethod(540, -0.3664, -1.5909, -3.4966, 0, 0, 0);
		testMethod(545, -0.3744, -1.6084, -3.4966, 0, 0, 0);
		testMethod(550, -0.3825, -1.6259, -3.4966, 0, 0, 0);
		testMethod(555, -0.3907, -1.6429, -3.3967, 0, 0, 0);
		testMethod(560, -0.3989, -1.6594, -3.2968, 0, 0, 0);
		testMethod(565, -0.4072, -1.6754, -3.1969, 0, 0, 0);
		testMethod(570, -0.4157, -1.6908, -3.097, 0, 0, 0);
		testMethod(575, -0.4242, -1.7058, -2.9971, 0, 0, 0);
		testMethod(580, -0.4327, -1.7203, -2.8972, 0, 0, 0);
		testMethod(585, -0.4414, -1.7343, -2.7973, 0, 0, 0);
		testMethod(590, -0.4501, -1.7478, -2.6974, 0, 0, 0);
		testMethod(595, -0.4588, -1.7608, -2.5975, 0, 0, 0);
		testMethod(600, -0.4677, -1.7733, -2.4975, 0, 0, 0);
		testMethod(605, -0.4766, -1.7852, -2.3976, 0, 0, 0);
		testMethod(610, -0.4855, -1.7967, -2.2977, 0, 0, 0);
		testMethod(615, -0.4945, -1.8077, -2.1978, 0, 0, 0);
		testMethod(620, -0.5036, -1.8182, -2.0979, 0, 0, 0);
		testMethod(625, -0.5127, -1.8282, -1.998, 0, 0, 0);
		testMethod(630, -0.5219, -1.8377, -1.8981, 0, 0, 0);
		testMethod(635, -0.5311, -1.8467, -1.7982, 0, 0, 0);
		testMethod(640, -0.5403, -1.8552, -1.6983, 0, 0, 0);
		testMethod(645, -0.5496, -1.8632, -1.5984, 0, 0, 0);
		testMethod(650, -0.559, -1.8707, -1.4985, 0, 0, 0);
		testMethod(655, -0.5683, -1.8777, -1.3986, 0, 0, 0);
		testMethod(660, -0.5777, -1.8842, -1.2987, 0, 0, 0);
		testMethod(665, -0.5872, -1.8901, -1.1988, 0, 0, 0);
		testMethod(670, -0.5966, -1.8956, -1.0989, 0, 0, 0);
		testMethod(675, -0.6061, -1.9006, -0.999, 0, 0, 0);
		testMethod(680, -0.6157, -1.9051, -0.8991, 0, 0, 0);
		testMethod(685, -0.6252, -1.9091, -0.7992, 0, 0, 0);
		testMethod(690, -0.6347, -1.9126, -0.6993, 0, 0, 0);
		testMethod(695, -0.6443, -1.9156, -0.5994, 0, 0, 0);
		testMethod(700, -0.6539, -1.9181, -0.4995, 0, 0, 0);
		testMethod(705, -0.6635, -1.9201, -0.3996, 0, 0, 0);
		testMethod(710, -0.6731, -1.9216, -0.2997, 0, 0, 0);
		testMethod(715, -0.6827, -1.9226, -0.1998, 0, 0, 0);
		testMethod(720, -0.6923, -1.9231, -0.0999, 0, 0, 0);
		testMethod(725, -0.7019, -1.9231, -0, 0, 0, 0);
		testMethod(730, -0.7116, -1.9231, -0, 0, 0, 0);
		testMethod(735, -0.7212, -1.9231, -0, 0, 0, 0);
		testMethod(740, -0.7308, -1.9231, -0, 0, 0, 0);
		testMethod(745, -0.7404, -1.9231, -0, 0, 0, 0);
		testMethod(750, -0.75, -1.9231, -0, 0, 0, 0);
		testMethod(755, -0.7596, -1.9231, -0, 0, 0, 0);
		testMethod(760, -0.7692, -1.9231, -0, 0, 0, 0);
		testMethod(765, -0.7789, -1.9231, -0, 0, 0, 0);
		testMethod(770, -0.7885, -1.9231, -0, 0, 0, 0);
		testMethod(775, -0.7981, -1.9231, -0, 0, 0, 0);
		testMethod(780, -0.8077, -1.9231, -0, 0, 0, 0);
		testMethod(785, -0.8173, -1.9231, -0, 0, 0, 0);
		testMethod(790, -0.8269, -1.9231, -0, 0, 0, 0);
		testMethod(795, -0.8366, -1.9231, -0, 0, 0, 0);
		testMethod(800, -0.8462, -1.9231, -0, 0, 0, 0);
		testMethod(805, -0.8558, -1.9231, -0, 0, 0, 0);
		testMethod(810, -0.8654, -1.9231, -0, 0, 0, 0);
		testMethod(815, -0.875, -1.9231, -0, 0, 0, 0);
		testMethod(820, -0.8846, -1.9231, -0, 0, 0, 0);
		testMethod(825, -0.8942, -1.9231, -0, 0, 0, 0);
		testMethod(830, -0.9039, -1.9231, -0, 0, 0, 0);
		testMethod(835, -0.9135, -1.9231, -0, 0, 0, 0);
		testMethod(840, -0.9231, -1.9231, -0, 0, 0, 0);
		testMethod(845, -0.9327, -1.9231, -0, 0, 0, 0);
		testMethod(850, -0.9423, -1.9231, -0, 0, 0, 0);
		testMethod(855, -0.9519, -1.9231, -0, 0, 0, 0);
		testMethod(860, -0.9616, -1.9231, -0, 0, 0, 0);
		testMethod(865, -0.9712, -1.9231, -0, 0, 0, 0);
		testMethod(870, -0.9808, -1.9231, -0, 0, 0, 0);
		testMethod(875, -0.9904, -1.9231, -0, 0, 0, 0);
		testMethod(880, -1, -1.9231, -0, 0, 0, 0);
		testMethod(885, -1.0096, -1.9231, -0, 0, 0, 0);
		testMethod(890, -1.0192, -1.9231, -0, 0, 0, 0);
		testMethod(895, -1.0289, -1.9231, -0, 0, 0, 0);
		testMethod(900, -1.0385, -1.9231, -0, 0, 0, 0);
		testMethod(905, -1.0481, -1.9231, -0, 0, 0, 0);
		testMethod(910, -1.0577, -1.9231, -0, 0, 0, 0);
		testMethod(915, -1.0673, -1.9231, -0, 0, 0, 0);
		testMethod(920, -1.0769, -1.9231, -0, 0, 0, 0);
		testMethod(925, -1.0866, -1.9231, -0, 0, 0, 0);
		testMethod(930, -1.0962, -1.9231, -0, 0, 0, 0);
		testMethod(935, -1.1058, -1.9231, -0, 0, 0, 0);
		testMethod(940, -1.1154, -1.9231, -0, 0, 0, 0);
		testMethod(945, -1.125, -1.9231, -0, 0, 0, 0);
		testMethod(950, -1.1346, -1.9231, -0, 0, 0, 0);
		testMethod(955, -1.1443, -1.9231, -0, 0, 0, 0);
		testMethod(960, -1.1539, -1.9231, -0, 0, 0, 0);
		testMethod(965, -1.1635, -1.9231, -0, 0, 0, 0);
		testMethod(970, -1.1731, -1.9231, -0, 0, 0, 0);
		testMethod(975, -1.1827, -1.9231, -0, 0, 0, 0);
		testMethod(980, -1.1923, -1.9231, -0, 0, 0, 0);
		testMethod(985, -1.2019, -1.9231, -0, 0, 0, 0);
		testMethod(990, -1.2116, -1.9231, -0, 0, 0, 0);
		testMethod(995, -1.2212, -1.9231, -0, 0, 0, 0);
		testMethod(1000, -1.2308, -1.9231, -0, 0, 0, 0);
		testMethod(1005, -1.2404, -1.9231, -0, 0, 0, 0);
		testMethod(1010, -1.25, -1.9231, -0, 0, 0, 0);
		testMethod(1015, -1.2596, -1.9231, -0, 0, 0, 0);
		testMethod(1020, -1.2693, -1.9231, -0, 0, 0, 0);
		testMethod(1025, -1.2789, -1.9231, -0, 0, 0, 0);
		testMethod(1030, -1.2885, -1.9231, -0, 0, 0, 0);
		testMethod(1035, -1.2981, -1.9231, -0, 0, 0, 0);
		testMethod(1040, -1.3077, -1.9231, -0, 0, 0, 0);
		testMethod(1045, -1.3173, -1.9231, -0, 0, 0, 0);
		testMethod(1050, -1.3269, -1.9231, -0, 0, 0, 0);
		testMethod(1055, -1.3366, -1.9231, -0, 0, 0, 0.003);
		testMethod(1060, -1.3462, -1.9231, -0, 0, 0.0007, 0.1334);
		testMethod(1065, -1.3558, -1.9231, -0, 0, 0.0023, 0.3311);
		testMethod(1070, -1.3654, -1.9231, -0, 0, 0.005, 0.5289);
		testMethod(1075, -1.375, -1.9231, -0, 0.0001, 0.0086, 0.7267);
		testMethod(1080, -1.3846, -1.9231, -0, 0.0001, 0.0132, 0.9245);
		testMethod(1085, -1.3943, -1.9231, -0, 0.0002, 0.0188, 1.1223);
		testMethod(1090, -1.4039, -1.9231, -0, 0.0003, 0.0254, 1.3201);
		testMethod(1095, -1.4135, -1.9231, -0, 0.0005, 0.033, 1.5179);
		testMethod(1100, -1.4231, -1.9231, -0, 0.0006, 0.0416, 1.7156);
		testMethod(1105, -1.4327, -1.9231, -0, 0.0009, 0.0512, 1.9134);
		testMethod(1110, -1.4423, -1.9231, -0, 0.0011, 0.0617, 2.1112);
		testMethod(1115, -1.4519, -1.9231, -0, 0.0015, 0.0733, 2.309);
		testMethod(1120, -1.4616, -1.9231, -0, 0.0019, 0.0858, 2.5068);
		testMethod(1125, -1.4712, -1.9231, -0, 0.0023, 0.0993, 2.7046);
		testMethod(1130, -1.4808, -1.9231, -0, 0.0029, 0.1139, 2.9024);
		testMethod(1135, -1.4904, -1.9231, -0, 0.0035, 0.1294, 3.1001);
		testMethod(1140, -1.5, -1.9231, -0, 0.0042, 0.1458, 3.2979);
		testMethod(1145, -1.5096, -1.9231, -0, 0.0049, 0.1633, 3.4957);
		testMethod(1150, -1.5193, -1.9231, -0, 0.0058, 0.1818, 3.6935);
		testMethod(1155, -1.5289, -1.9231, -0, 0.0068, 0.2012, 3.8913);
		testMethod(1160, -1.5385, -1.9231, -0, 0.0078, 0.2217, 4.0891);
		testMethod(1165, -1.5481, -1.9231, -0, 0.009, 0.2431, 4.2869);
		testMethod(1170, -1.5577, -1.9231, -0, 0.0103, 0.2655, 4.4846);
		testMethod(1175, -1.5673, -1.9231, -0, 0.0116, 0.289, 4.6824);
		testMethod(1180, -1.577, -1.9231, -0, 0.0131, 0.3134, 4.8802);
		testMethod(1185, -1.5866, -1.9231, -0, 0.0148, 0.3388, 5.078);
		testMethod(1190, -1.5962, -1.9231, -0, 0.0165, 0.3651, 5.2758);
		testMethod(1195, -1.6058, -1.9231, -0, 0.0184, 0.3925, 5.4736);
		testMethod(1200, -1.6154, -1.9231, -0, 0.0205, 0.4209, 5.6714);
		testMethod(1205, -1.625, -1.9231, -0, 0.0226, 0.4502, 5.8691);
		testMethod(1210, -1.6346, -1.9231, -0, 0.025, 0.4805, 6.0669);
		testMethod(1215, -1.6443, -1.9231, -0, 0.0274, 0.5119, 6.2647);
		testMethod(1220, -1.6539, -1.9231, -0, 0.0301, 0.5442, 6.4625);
		testMethod(1225, -1.6635, -1.9231, -0, 0.0329, 0.5775, 6.6603);
		testMethod(1230, -1.6731, -1.9231, -0, 0.0359, 0.6118, 6.8581);
		testMethod(1235, -1.6827, -1.9231, -0, 0.039, 0.647, 7.0559);
		testMethod(1240, -1.6923, -1.9231, -0, 0.0423, 0.6833, 7.2536);
		testMethod(1245, -1.702, -1.9231, -0, 0.0458, 0.7206, 7.4514);
		testMethod(1250, -1.7116, -1.9231, -0, 0.0495, 0.7588, 7.6492);
		testMethod(1255, -1.7212, -1.9231, -0, 0.0534, 0.7981, 7.847);
		testMethod(1260, -1.7308, -1.9231, -0, 0.0575, 0.8383, 8.0448);
		testMethod(1265, -1.7404, -1.9231, -0, 0.0618, 0.8795, 8.2426);
		testMethod(1270, -1.75, -1.9231, -0, 0.0663, 0.9217, 8.4404);
		testMethod(1275, -1.7596, -1.9231, -0, 0.071, 0.9643, 8.5232);
		testMethod(1280, -1.7693, -1.9231, -0, 0.076, 1.0057, 8.2749);
		testMethod(1285, -1.7789, -1.9231, -0, 0.0811, 1.0461, 8.0771);
		testMethod(1290, -1.7885, -1.9231, -0, 0.0864, 1.0855, 7.8793);
		testMethod(1295, -1.7981, -1.9231, -0, 0.0919, 1.1239, 7.6815);
		testMethod(1300, -1.8077, -1.9231, -0, 0.0977, 1.1613, 7.4837);
		testMethod(1305, -1.8173, -1.9231, -0, 0.1036, 1.1977, 7.2859);
		testMethod(1310, -1.827, -1.9231, -0, 0.1096, 1.2332, 7.0881);
		testMethod(1315, -1.8366, -1.9231, -0, 0.1159, 1.2676, 6.8903);
		testMethod(1320, -1.8462, -1.9231, -0, 0.1223, 1.3011, 6.6926);
		testMethod(1325, -1.8558, -1.9231, -0, 0.1289, 1.3335, 6.4948);
		testMethod(1330, -1.8654, -1.9231, -0, 0.1356, 1.365, 6.297);
		testMethod(1335, -1.875, -1.9231, -0, 0.1425, 1.3955, 6.0992);
		testMethod(1340, -1.8847, -1.9231, -0, 0.1496, 1.425, 5.9014);
		testMethod(1345, -1.8943, -1.9231, -0, 0.1568, 1.4536, 5.7036);
		testMethod(1350, -1.9039, -1.9231, -0, 0.1641, 1.4811, 5.5058);
		testMethod(1355, -1.9135, -1.9231, -0, 0.1716, 1.5076, 5.3081);
		testMethod(1360, -1.9231, -1.9231, -0, 0.1792, 1.5332, 5.1103);
		testMethod(1365, -1.9327, -1.9231, -0, 0.1869, 1.5577, 4.9125);
		testMethod(1370, -1.9423, -1.9231, -0, 0.1948, 1.5813, 4.7147);
		testMethod(1375, -1.952, -1.9231, -0, 0.2027, 1.6039, 4.5169);
		testMethod(1380, -1.9616, -1.9231, -0, 0.2108, 1.6255, 4.3191);
		testMethod(1385, -1.9712, -1.9231, -0, 0.219, 1.6461, 4.1213);
		testMethod(1390, -1.9808, -1.9231, -0, 0.2273, 1.6657, 3.9236);
		testMethod(1395, -1.9904, -1.9231, -0, 0.2357, 1.6843, 3.7258);
		testMethod(1400, -2, -1.9231, -0, 0.2441, 1.702, 3.528);
		testMethod(1405, -2.0097, -1.9231, -0, 0.2527, 1.7186, 3.3302);
		testMethod(1410, -2.0193, -1.9231, -0, 0.2613, 1.7343, 3.1324);
		testMethod(1415, -2.0289, -1.9231, -0, 0.27, 1.749, 2.9346);
		testMethod(1420, -2.0385, -1.9231, -0, 0.2788, 1.7627, 2.7368);
		testMethod(1425, -2.0481, -1.9231, -0, 0.2876, 1.7753, 2.5391);
		testMethod(1430, -2.0577, -1.9231, -0, 0.2965, 1.7871, 2.3413);
		testMethod(1435, -2.0673, -1.9231, -0, 0.3055, 1.7978, 2.1435);
		testMethod(1440, -2.077, -1.9231, -0, 0.3145, 1.8075, 1.9457);
		testMethod(1445, -2.0866, -1.9231, -0, 0.3236, 1.8162, 1.7479);
		testMethod(1450, -2.0962, -1.9231, -0, 0.3327, 1.824, 1.5501);
		testMethod(1455, -2.1058, -1.9231, -0, 0.3418, 1.8308, 1.3523);
		testMethod(1460, -2.1154, -1.9231, -0, 0.351, 1.8365, 1.1546);
		testMethod(1465, -2.125, -1.9231, -0, 0.3602, 1.8413, 0.9568);
		testMethod(1470, -2.1347, -1.9231, -0, 0.3694, 1.8451, 0.759);
		testMethod(1475, -2.1443, -1.9231, -0, 0.3786, 1.8479, 0.5612);
		testMethod(1480, -2.1539, -1.9231, -0, 0.3879, 1.8497, 0.3634);
		testMethod(1485, -2.1635, -1.9231, -0, 0.3971, 1.8506, 0.1656);
		testMethod(1490, -2.1731, -1.9231, -0, 0.4064, 1.8506, 0.0113);
		testMethod(1495, -2.1827, -1.9231, -0, 0.4156, 1.8506, 0);
		testMethod(1500, -2.1923, -1.9231, -0, 0.4249, 1.8506, 0);
		testMethod(1505, -2.202, -1.9231, -0, 0.4341, 1.8506, 0);
		testMethod(1510, -2.2116, -1.9231, -0, 0.4434, 1.8506, 0);
		testMethod(1515, -2.2212, -1.9231, -0, 0.4526, 1.8506, 0);
		testMethod(1520, -2.2308, -1.9231, -0, 0.4619, 1.8506, 0);
		testMethod(1525, -2.2404, -1.9231, -0, 0.4712, 1.8506, 0);
		testMethod(1530, -2.25, -1.9231, -0, 0.4804, 1.8506, 0);
		testMethod(1535, -2.2597, -1.9231, -0, 0.4897, 1.8506, 0);
		testMethod(1540, -2.2693, -1.9231, -0, 0.4989, 1.8506, 0);
		testMethod(1545, -2.2789, -1.9231, -0, 0.5082, 1.8506, 0);
		testMethod(1550, -2.2885, -1.9231, -0, 0.5174, 1.8506, 0);
		testMethod(1555, -2.2981, -1.9231, -0, 0.5267, 1.8506, 0);
		testMethod(1560, -2.3077, -1.9231, -0, 0.5359, 1.8506, 0);
		testMethod(1565, -2.3174, -1.9231, -0, 0.5452, 1.8506, 0);
		testMethod(1570, -2.327, -1.9231, -0, 0.5544, 1.8506, 0);
		testMethod(1575, -2.3366, -1.9231, -0, 0.5637, 1.8506, 0);
		testMethod(1580, -2.3462, -1.9231, -0, 0.5729, 1.8506, 0);
		testMethod(1585, -2.3558, -1.9231, -0, 0.5822, 1.8506, 0);
		testMethod(1590, -2.3654, -1.9231, -0, 0.5914, 1.8506, 0);
		testMethod(1595, -2.375, -1.9231, -0, 0.6007, 1.8506, 0);
		testMethod(1600, -2.3847, -1.9231, -0, 0.6099, 1.8506, 0);
		testMethod(1605, -2.3943, -1.9231, -0, 0.6192, 1.8506, 0);
		testMethod(1610, -2.4039, -1.9231, -0, 0.6285, 1.8506, 0);
		testMethod(1615, -2.4135, -1.9231, -0, 0.6377, 1.8506, 0);
		testMethod(1620, -2.4231, -1.9231, -0, 0.647, 1.8506, -0);
		testMethod(1625, -2.4327, -1.9231, -0, 0.6562, 1.8501, -0.1016);
		testMethod(1630, -2.4424, -1.9231, -0, 0.6655, 1.8486, -0.2994);
		testMethod(1635, -2.452, -1.9231, -0, 0.6747, 1.8461, -0.4972);
		testMethod(1640, -2.4616, -1.9231, -0, 0.6839, 1.8426, -0.695);
		testMethod(1645, -2.4712, -1.9231, -0, 0.6931, 1.8382, -0.8928);
		testMethod(1650, -2.4808, -1.9231, -0, 0.7023, 1.8327, -1.0906);
		testMethod(1655, -2.4904, -1.9231, -0, 0.7114, 1.8263, -1.2884);
		testMethod(1660, -2.5, -1.9231, -0, 0.7206, 1.8189, -1.4861);
		testMethod(1665, -2.5097, -1.9231, -0, 0.7296, 1.8104, -1.6839);
		testMethod(1670, -2.5193, -1.9231, -0, 0.7387, 1.801, -1.8817);
		testMethod(1675, -2.5289, -1.9231, -0, 0.7476, 1.7906, -2.0795);
		testMethod(1680, -2.5385, -1.9231, -0, 0.7566, 1.7792, -2.2773);
		testMethod(1685, -2.5481, -1.9231, -0, 0.7654, 1.7669, -2.4751);
		testMethod(1690, -2.5577, -1.9231, -0, 0.7742, 1.7535, -2.6729);
		testMethod(1695, -2.5674, -1.9231, -0, 0.783, 1.7392, -2.8706);
		testMethod(1700, -2.577, -1.9226, 0.0999, 0.7916, 1.7234, -3.1576);
		testMethod(1705, -2.5866, -1.9216, 0.1998, 0.8002, 1.7062, -3.441);
		testMethod(1710, -2.5962, -1.9201, 0.2997, 0.8087, 1.6876, -3.7204);
		testMethod(1715, -2.6058, -1.9181, 0.3996, 0.8171, 1.6676, -3.9953);
		testMethod(1720, -2.6154, -1.9156, 0.4995, 0.8254, 1.6463, -4.2652);
		testMethod(1725, -2.6249, -1.9126, 0.5994, 0.8335, 1.6236, -4.5296);
		testMethod(1730, -2.6345, -1.9091, 0.6993, 0.8416, 1.5997, -4.788);
		testMethod(1735, -2.644, -1.9051, 0.7992, 0.8495, 1.5745, -5.04);
		testMethod(1740, -2.6535, -1.9006, 0.8991, 0.8573, 1.548, -5.2849);
		testMethod(1745, -2.663, -1.8956, 0.999, 0.865, 1.5204, -5.5225);
		testMethod(1750, -2.6725, -1.8901, 1.0989, 0.8725, 1.4917, -5.7522);
		testMethod(1755, -2.6819, -1.8842, 1.1988, 0.8799, 1.4618, -5.9736);
		testMethod(1760, -2.6913, -1.8777, 1.2987, 0.8871, 1.4309, -6.1862);
		testMethod(1765, -2.7007, -1.8707, 1.3986, 0.8942, 1.3989, -6.3897);
		testMethod(1770, -2.71, -1.8632, 1.4985, 0.9011, 1.366, -6.5836);
		testMethod(1775, -2.7193, -1.8552, 1.5984, 0.9079, 1.3322, -6.7676);
		testMethod(1780, -2.7286, -1.8467, 1.6983, 0.9145, 1.2975, -6.9413);
		testMethod(1785, -2.7378, -1.8377, 1.7982, 0.9209, 1.2619, -7.1042);
		testMethod(1790, -2.747, -1.8282, 1.8981, 0.9271, 1.2257, -7.2562);
		testMethod(1795, -2.7561, -1.8182, 1.998, 0.9331, 1.1887, -7.3968);
		testMethod(1800, -2.7651, -1.8077, 2.0979, 0.939, 1.151, -7.5257);
		testMethod(1805, -2.7742, -1.7967, 2.1978, 0.9446, 1.1128, -7.6428);
		testMethod(1810, -2.7831, -1.7852, 2.2977, 0.9501, 1.0741, -7.7476);
		testMethod(1815, -2.792, -1.7733, 2.3976, 0.9554, 1.0349, -7.84);
		testMethod(1820, -2.8008, -1.7608, 2.4975, 0.9604, 0.9953, -7.9197);
		testMethod(1825, -2.8096, -1.7478, 2.5975, 0.9653, 0.9554, -7.9866);
		testMethod(1830, -2.8183, -1.7343, 2.6974, 0.97, 0.9152, -8.0404);
		testMethod(1835, -2.827, -1.7203, 2.7973, 0.9745, 0.8748, -8.081);
		testMethod(1840, -2.8355, -1.7058, 2.8972, 0.9787, 0.8342, -8.1083);
		testMethod(1845, -2.844, -1.6908, 2.9971, 0.9828, 0.7936, -8.1189);
		testMethod(1850, -2.8524, -1.6754, 3.097, 0.9867, 0.7545, -7.8306);
		testMethod(1855, -2.8608, -1.6594, 3.1969, 0.9903, 0.7166, -7.5679);
		testMethod(1860, -2.869, -1.6429, 3.2968, 0.9938, 0.6801, -7.3069);
		testMethod(1865, -2.8772, -1.6259, 3.3967, 0.9972, 0.6448, -7.048);
		testMethod(1870, -2.8853, -1.6084, 3.4966, 1.0003, 0.6109, -6.7916);
		testMethod(1875, -2.8933, -1.5909, 3.4966, 1.0033, 0.5784, -6.5025);
		testMethod(1880, -2.9012, -1.5735, 3.4966, 1.0061, 0.5473, -6.2227);
		testMethod(1885, -2.909, -1.556, 3.4966, 1.0087, 0.5175, -5.952);
		testMethod(1890, -2.9167, -1.5385, 3.4966, 1.0113, 0.4891, -5.6903);
		testMethod(1895, -2.9244, -1.521, 3.4966, 1.0136, 0.4619, -5.4372);
		testMethod(1900, -2.932, -1.5035, 3.4966, 1.0159, 0.4359, -5.1928);
		testMethod(1905, -2.9394, -1.486, 3.4966, 1.018, 0.4111, -4.9566);
		testMethod(1910, -2.9468, -1.4686, 3.4966, 1.02, 0.3875, -4.7286);
		testMethod(1915, -2.9541, -1.4511, 3.4966, 1.0219, 0.3649, -4.5086);
		testMethod(1920, -2.9613, -1.4336, 3.4966, 1.0236, 0.3435, -4.2963);
		testMethod(1925, -2.9685, -1.4161, 3.4966, 1.0253, 0.323, -4.0916);
		testMethod(1930, -2.9755, -1.3986, 3.4966, 1.0269, 0.3035, -3.8943);
		testMethod(1935, -2.9824, -1.3811, 3.4966, 1.0283, 0.285, -3.7042);
		testMethod(1940, -2.9893, -1.3637, 3.4966, 1.0297, 0.2674, -3.5212);
		testMethod(1945, -2.9961, -1.3462, 3.4966, 1.031, 0.2507, -3.345);
		testMethod(1950, -3.0028, -1.3287, 3.4966, 1.0322, 0.2348, -3.1756);
		testMethod(1955, -3.0094, -1.3112, 3.4966, 1.0334, 0.2197, -3.0126);
		testMethod(1960, -3.0159, -1.2937, 3.4966, 1.0344, 0.2055, -2.856);
		testMethod(1965, -3.0223, -1.2762, 3.4966, 1.0354, 0.1919, -2.7056);
		testMethod(1970, -3.0286, -1.2588, 3.4966, 1.0363, 0.1791, -2.5612);
		testMethod(1975, -3.0349, -1.2413, 3.4966, 1.0372, 0.167, -2.4227);
		testMethod(1980, -3.0411, -1.2238, 3.4966, 1.038, 0.1556, -2.2898);
		testMethod(1985, -3.0471, -1.2063, 3.4966, 1.0388, 0.1447, -2.1625);
		testMethod(1990, -3.0531, -1.1888, 3.4966, 1.0395, 0.1345, -2.0406);
		testMethod(1995, -3.059, -1.1714, 3.4966, 1.0401, 0.1249, -1.9239);
		testMethod(2000, -3.0648, -1.1539, 3.4966, 1.0407, 0.1159, -1.8123);
		testMethod(2005, -3.0706, -1.1364, 3.4966, 1.0413, 0.1073, -1.7056);
		testMethod(2010, -3.0762, -1.1189, 3.4966, 1.0418, 0.0993, -1.6037);
		testMethod(2015, -3.0817, -1.1014, 3.4966, 1.0423, 0.0918, -1.5064);
		testMethod(2020, -3.0872, -1.0839, 3.4966, 1.0427, 0.0847, -1.4136);
		testMethod(2025, -3.0926, -1.0665, 3.4966, 1.0431, 0.0781, -1.3252);
		testMethod(2030, -3.0979, -1.049, 3.4966, 1.0435, 0.0719, -1.241);
		testMethod(2035, -3.1031, -1.0315, 3.4966, 1.0438, 0.0661, -1.1608);
		testMethod(2040, -3.1082, -1.014, 3.4966, 1.0442, 0.0607, -1.0846);
		testMethod(2045, -3.1132, -0.9965, 3.4966, 1.0444, 0.0556, -1.0123);
		testMethod(2050, -3.1182, -0.979, 3.4966, 1.0447, 0.0509, -0.9436);
		testMethod(2055, -3.123, -0.9616, 3.4966, 1.045, 0.0465, -0.8784);
		testMethod(2060, -3.1278, -0.9441, 3.4966, 1.0452, 0.0424, -0.8167);
		testMethod(2065, -3.1324, -0.9266, 3.4966, 1.0454, 0.0386, -0.7583);
		testMethod(2070, -3.137, -0.9091, 3.4966, 1.0456, 0.0351, -0.7031);
		testMethod(2075, -3.1415, -0.8916, 3.4966, 1.0457, 0.0318, -0.6509);
		testMethod(2080, -3.1459, -0.8741, 3.4966, 1.0459, 0.0288, -0.6017);
		testMethod(2085, -3.1503, -0.8567, 3.4966, 1.046, 0.026, -0.5554);
		testMethod(2090, -3.1545, -0.8392, 3.4966, 1.0461, 0.0235, -0.5118);
		testMethod(2095, -3.1587, -0.8217, 3.4966, 1.0463, 0.0211, -0.4708);
		testMethod(2100, -3.1627, -0.8042, 3.4966, 1.0464, 0.019, -0.4323);
		testMethod(2105, -3.1667, -0.7867, 3.4966, 1.0464, 0.017, -0.3962);
		testMethod(2110, -3.1706, -0.7692, 3.4966, 1.0465, 0.0152, -0.3624);
		testMethod(2115, -3.1744, -0.7518, 3.4966, 1.0466, 0.0135, -0.3308);
		testMethod(2120, -3.1781, -0.7343, 3.4966, 1.0467, 0.012, -0.3014);
		testMethod(2125, -3.1817, -0.7168, 3.4966, 1.0467, 0.0107, -0.2739);
		testMethod(2130, -3.1853, -0.6993, 3.4966, 1.0468, 0.0094, -0.2484);
		testMethod(2135, -3.1887, -0.6818, 3.4966, 1.0468, 0.0083, -0.2247);
		testMethod(2140, -3.1921, -0.6643, 3.4966, 1.0469, 0.0073, -0.2027);
		testMethod(2145, -3.1954, -0.6469, 3.4966, 1.0469, 0.0064, -0.1824);
		testMethod(2150, -3.1986, -0.6294, 3.4966, 1.0469, 0.0055, -0.1636);
		testMethod(2155, -3.2017, -0.6119, 3.4966, 1.0469, 0.0048, -0.1464);
		testMethod(2160, -3.2047, -0.5944, 3.4966, 1.047, 0.0042, -0.1305);
		testMethod(2165, -3.2076, -0.5769, 3.4966, 1.047, 0.0036, -0.116);
		testMethod(2170, -3.2105, -0.5595, 3.4966, 1.047, 0.0031, -0.1027);
		testMethod(2175, -3.2132, -0.542, 3.4966, 1.047, 0.0026, -0.0905);
		testMethod(2180, -3.2159, -0.5245, 3.4966, 1.047, 0.0022, -0.0795);
		testMethod(2185, -3.2185, -0.507, 3.4966, 1.047, 0.0019, -0.0696);
		testMethod(2190, -3.221, -0.4895, 3.4966, 1.047, 0.0016, -0.0605);
		testMethod(2195, -3.2234, -0.472, 3.4966, 1.047, 0.0013, -0.0524);
		testMethod(2200, -3.2257, -0.4546, 3.4966, 1.0471, 0.0011, -0.0452);
		testMethod(2205, -3.2279, -0.4371, 3.4966, 1.0471, 0.0009, -0.0387);
		testMethod(2210, -3.23, -0.4196, 3.4966, 1.0471, 0.0007, -0.0329);
		testMethod(2215, -3.2321, -0.4021, 3.4966, 1.0471, 0.0006, -0.0278);
		testMethod(2220, -3.2341, -0.3846, 3.4966, 1.0471, 0.0005, -0.0233);
		testMethod(2225, -3.2359, -0.3671, 3.4966, 1.0471, 0.0004, -0.0194);
		testMethod(2230, -3.2377, -0.3497, 3.4966, 1.0471, 0.0003, -0.016);
		testMethod(2235, -3.2394, -0.3322, 3.4966, 1.0471, 0.0002, -0.0131);
		testMethod(2240, -3.2411, -0.3147, 3.4966, 1.0471, 0.0002, -0.0106);
		testMethod(2245, -3.2426, -0.2972, 3.4966, 1.0471, 0.0001, -0.0084);
		testMethod(2250, -3.244, -0.2802, 3.3967, 1.0471, 0.0001, -0.0066);
		testMethod(2255, -3.2454, -0.2637, 3.2968, 1.0471, 0.0001, -0.0051);
		testMethod(2260, -3.2467, -0.2478, 3.1969, 1.0471, 0, -0.0039);
		testMethod(2265, -3.2479, -0.2323, 3.097, 1.0471, 0, -0.0029);
		testMethod(2270, -3.249, -0.2173, 2.9971, 1.0471, 0, -0.0021);
		testMethod(2275, -3.25, -0.2028, 2.8972, 1.0471, 0, -0.0015);
		testMethod(2280, -3.251, -0.1888, 2.7973, 1.0471, 0, -0.0011);
		testMethod(2285, -3.2519, -0.1753, 2.6974, 1.0471, 0, -0.0007);
		testMethod(2290, -3.2528, -0.1623, 2.5975, 1.0471, 0, -0.0004);
		testMethod(2295, -3.2536, -0.1499, 2.4975, 1.0471, 0, -0.0002);
		testMethod(2300, -3.2543, -0.1379, 2.3976, 1.0471, 0, -0.0001);
		testMethod(2305, -3.2549, -0.1264, 2.2977, 1.0471, 0, -0);
		testMethod(2310, -3.2555, -0.1154, 2.1978, 1.0471, 0, 0);
		testMethod(2315, -3.2561, -0.1049, 2.0979, 1.0471, 0, 0);
		testMethod(2320, -3.2566, -0.0949, 1.998, 1.0471, 0, 0);
		testMethod(2325, -3.257, -0.0854, 1.8981, 1.0471, 0, 0);
		testMethod(2330, -3.2574, -0.0764, 1.7982, 1.0471, 0, 0);
		testMethod(2335, -3.2578, -0.0679, 1.6983, 1.0471, 0, 0);
		testMethod(2340, -3.2581, -0.0599, 1.5984, 1.0471, 0, 0);
		testMethod(2345, -3.2584, -0.0524, 1.4985, 1.0471, 0, 0);
		testMethod(2350, -3.2587, -0.0455, 1.3986, 1.0471, 0, 0);
		testMethod(2355, -3.2589, -0.039, 1.2987, 1.0471, 0, 0);
		testMethod(2360, -3.259, -0.033, 1.1988, 1.0471, 0, 0);
		testMethod(2365, -3.2592, -0.0275, 1.0989, 1.0471, 0, 0);
		testMethod(2370, -3.2593, -0.0225, 0.999, 1.0471, 0, 0);
		testMethod(2375, -3.2594, -0.018, 0.8991, 1.0471, 0, 0);
		testMethod(2380, -3.2595, -0.014, 0.7992, 1.0471, 0, 0);
		testMethod(2385, -3.2596, -0.0105, 0.6993, 1.0471, 0, 0);
		testMethod(2390, -3.2596, -0.0075, 0.5994, 1.0471, 0, 0);
		testMethod(2395, -3.2596, -0.005, 0.4995, 1.0471, 0, 0);
		testMethod(2400, -3.2597, -0.003, 0.3996, 1.0471, 0, 0);
		testMethod(2405, -3.2597, -0.0015, 0.2997, 1.0471, 0, 0);
		testMethod(2410, -3.2597, -0.0005, 0.1998, 1.0471, 0, 0);
		testMethod(2415, -3.2597, -0, 0.0999, 1.0471, 0, 0);
		testMethod(2420, -3.2597, -0, -0, 1.0471, 0, 0);
		testMethod(2420, -3.2597, -0, -0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}