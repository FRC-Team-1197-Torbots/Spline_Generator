package org.usfirst.frc.team1197.robot;

public class testSpline extends TorTrajectory {

	public testSpline() {
		super(3.1107, 0.0004);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0992, 0.1311, 0, 0);
		testMethod(10, -0, -0.0015, -0.1983, 0.1311, 0, 0);
		testMethod(15, -0, -0.003, -0.2975, 0.1311, 0, 0);
		testMethod(20, -0, -0.005, -0.3966, 0.1311, 0, 0);
		testMethod(25, -0.0001, -0.0074, -0.4958, 0.1311, 0, 0);
		testMethod(30, -0.0001, -0.0104, -0.5949, 0.1311, 0, 0);
		testMethod(35, -0.0002, -0.0139, -0.6941, 0.1311, 0, 0);
		testMethod(40, -0.0003, -0.0178, -0.7933, 0.1311, 0, 0);
		testMethod(45, -0.0004, -0.0223, -0.8924, 0.1311, 0, 0);
		testMethod(50, -0.0005, -0.0273, -0.9916, 0.1311, 0, 0);
		testMethod(55, -0.0006, -0.0327, -1.0907, 0.1311, 0, 0);
		testMethod(60, -0.0008, -0.0387, -1.1899, 0.1311, 0, 0);
		testMethod(65, -0.001, -0.0451, -1.289, 0.1311, 0, 0);
		testMethod(70, -0.0013, -0.0521, -1.3882, 0.1311, 0, 0);
		testMethod(75, -0.0015, -0.0595, -1.4874, 0.1311, 0, 0);
		testMethod(80, -0.0019, -0.0674, -1.5865, 0.1311, 0, 0);
		testMethod(85, -0.0022, -0.0759, -1.6857, 0.1311, 0, 0);
		testMethod(90, -0.0026, -0.0848, -1.7848, 0.1311, 0, 0);
		testMethod(95, -0.0031, -0.0942, -1.884, 0.1311, 0, 0);
		testMethod(100, -0.0036, -0.1041, -1.9831, 0.1311, 0, 0);
		testMethod(105, -0.0041, -0.1145, -2.0823, 0.1311, 0, 0);
		testMethod(110, -0.0047, -0.1254, -2.1815, 0.1311, 0, 0);
		testMethod(115, -0.0054, -0.1368, -2.2806, 0.1311, 0, 0);
		testMethod(120, -0.0061, -0.1487, -2.3798, 0.1311, 0, 0);
		testMethod(125, -0.0068, -0.1611, -2.4789, 0.1311, 0, 0);
		testMethod(130, -0.0077, -0.174, -2.5781, 0.1311, 0, 0);
		testMethod(135, -0.0086, -0.1874, -2.6772, 0.1311, 0, 0);
		testMethod(140, -0.0096, -0.2013, -2.7764, 0.1311, 0, 0);
		testMethod(145, -0.0106, -0.2157, -2.8756, 0.1311, 0, 0);
		testMethod(150, -0.0117, -0.2305, -2.9747, 0.1311, 0, 0);
		testMethod(155, -0.0129, -0.2459, -3.0739, 0.1311, 0, 0);
		testMethod(160, -0.0142, -0.2618, -3.173, 0.1311, 0, 0);
		testMethod(165, -0.0155, -0.2781, -3.2722, 0.1311, 0, 0);
		testMethod(170, -0.017, -0.295, -3.3713, 0.1311, 0, 0);
		testMethod(175, -0.0185, -0.3123, -3.4705, 0.1311, 0, 0);
		testMethod(180, -0.0201, -0.3297, -3.4705, 0.1311, 0, 0);
		testMethod(185, -0.0218, -0.347, -3.4705, 0.1311, 0, 0);
		testMethod(190, -0.0236, -0.3644, -3.4705, 0.1311, 0, 0);
		testMethod(195, -0.0254, -0.3818, -3.4705, 0.1311, 0, 0);
		testMethod(200, -0.0274, -0.3991, -3.4705, 0.1311, 0, 0);
		testMethod(205, -0.0294, -0.4165, -3.4705, 0.1311, 0, 0);
		testMethod(210, -0.0315, -0.4338, -3.4705, 0.1311, 0, 0);
		testMethod(215, -0.0338, -0.4512, -3.4705, 0.1311, 0, 0);
		testMethod(220, -0.036, -0.4685, -3.4705, 0.1311, 0, 0);
		testMethod(225, -0.0384, -0.4859, -3.4705, 0.1311, 0, 0);
		testMethod(230, -0.0409, -0.5032, -3.4705, 0.1311, 0, 0);
		testMethod(235, -0.0435, -0.5206, -3.4705, 0.1311, 0, 0);
		testMethod(240, -0.0461, -0.5379, -3.4705, 0.1311, 0, 0);
		testMethod(245, -0.0488, -0.5553, -3.4705, 0.1311, 0, 0);
		testMethod(250, -0.0517, -0.5726, -3.4705, 0.1311, 0, 0);
		testMethod(255, -0.0546, -0.59, -3.4705, 0.1311, 0, 0);
		testMethod(260, -0.0576, -0.6073, -3.4705, 0.1311, 0, 0);
		testMethod(265, -0.0606, -0.6247, -3.4705, 0.1311, 0, 0);
		testMethod(270, -0.0638, -0.642, -3.4705, 0.1311, 0, 0);
		testMethod(275, -0.0671, -0.6594, -3.4705, 0.1311, 0, 0);
		testMethod(280, -0.0704, -0.6767, -3.4705, 0.1311, 0, 0);
		testMethod(285, -0.0738, -0.6941, -3.4705, 0.1311, 0, 0);
		testMethod(290, -0.0773, -0.7115, -3.4705, 0.1311, 0, 0);
		testMethod(295, -0.0809, -0.7288, -3.4705, 0.1311, 0, 0);
		testMethod(300, -0.0846, -0.7462, -3.4705, 0.1311, 0, 0);
		testMethod(305, -0.0884, -0.7635, -3.4705, 0.1311, 0, 0);
		testMethod(310, -0.0923, -0.7809, -3.4705, 0.1311, 0, 0);
		testMethod(315, -0.0962, -0.7982, -3.4705, 0.1311, 0, 0);
		testMethod(320, -0.1003, -0.8156, -3.4705, 0.1311, 0, 0);
		testMethod(325, -0.1044, -0.8329, -3.4705, 0.1311, 0, 0);
		testMethod(330, -0.1086, -0.8503, -3.4705, 0.1311, 0, 0);
		testMethod(335, -0.1129, -0.8676, -3.4705, 0.1311, 0, 0);
		testMethod(340, -0.1173, -0.885, -3.4705, 0.1311, 0, 0);
		testMethod(345, -0.1217, -0.9023, -3.4705, 0.1311, 0, 0);
		testMethod(350, -0.1263, -0.9197, -3.4705, 0.1311, 0, 0);
		testMethod(355, -0.1309, -0.937, -3.4705, 0.1311, 0, 0);
		testMethod(360, -0.1357, -0.9544, -3.4705, 0.1311, 0, 0);
		testMethod(365, -0.1405, -0.9717, -3.4705, 0.1311, 0, 0);
		testMethod(370, -0.1454, -0.9891, -3.4705, 0.1311, 0, 0);
		testMethod(375, -0.1504, -1.0064, -3.4705, 0.1311, 0, 0);
		testMethod(380, -0.1554, -1.0238, -3.4705, 0.1311, 0, 0);
		testMethod(385, -0.1606, -1.0411, -3.4705, 0.1311, 0, 0);
		testMethod(390, -0.1658, -1.0585, -3.4705, 0.1311, 0, 0);
		testMethod(395, -0.1712, -1.0759, -3.4705, 0.1311, 0, 0);
		testMethod(400, -0.1766, -1.0932, -3.4705, 0.1311, 0, 0);
		testMethod(405, -0.1821, -1.1106, -3.4705, 0.1311, 0, 0);
		testMethod(410, -0.1877, -1.1279, -3.4705, 0.1311, 0, 0);
		testMethod(415, -0.1934, -1.1453, -3.4705, 0.1311, 0, 0);
		testMethod(420, -0.1992, -1.1626, -3.4705, 0.1311, 0, 0);
		testMethod(425, -0.205, -1.18, -3.4705, 0.1311, 0, 0);
		testMethod(430, -0.211, -1.1973, -3.4705, 0.1311, 0, 0);
		testMethod(435, -0.217, -1.2147, -3.4705, 0.1311, 0, 0);
		testMethod(440, -0.2231, -1.232, -3.4705, 0.1311, 0, 0);
		testMethod(445, -0.2293, -1.2494, -3.4705, 0.1311, 0, 0);
		testMethod(450, -0.2356, -1.2667, -3.4705, 0.1311, 0, 0);
		testMethod(455, -0.242, -1.2841, -3.4705, 0.1311, 0, 0);
		testMethod(460, -0.2484, -1.3014, -3.4705, 0.1311, 0, 0);
		testMethod(465, -0.255, -1.3188, -3.4705, 0.1311, 0, 0);
		testMethod(470, -0.2616, -1.3361, -3.4705, 0.1311, 0, 0);
		testMethod(475, -0.2684, -1.3535, -3.4705, 0.1311, 0, 0);
		testMethod(480, -0.2752, -1.3708, -3.4705, 0.1311, 0, 0);
		testMethod(485, -0.2821, -1.3882, -3.4705, 0.1311, 0, 0);
		testMethod(490, -0.289, -1.4056, -3.4705, 0.1311, 0, 0);
		testMethod(495, -0.2961, -1.4229, -3.4705, 0.1311, 0, 0);
		testMethod(500, -0.3033, -1.4403, -3.4705, 0.1311, 0, 0);
		testMethod(505, -0.3105, -1.4576, -3.4705, 0.1311, 0, 0);
		testMethod(510, -0.3179, -1.475, -3.4705, 0.1311, 0, 0);
		testMethod(515, -0.3253, -1.4923, -3.4705, 0.1311, 0, 0);
		testMethod(520, -0.3328, -1.5097, -3.4705, 0.1311, 0, 0);
		testMethod(525, -0.3404, -1.527, -3.4705, 0.1311, 0, 0);
		testMethod(530, -0.348, -1.5444, -3.4705, 0.1311, 0, 0);
		testMethod(535, -0.3558, -1.5617, -3.4705, 0.1311, 0, 0);
		testMethod(540, -0.3637, -1.5791, -3.4705, 0.1311, 0, 0);
		testMethod(545, -0.3716, -1.5964, -3.4705, 0.1311, 0, 0);
		testMethod(550, -0.3796, -1.6138, -3.4705, 0.1311, 0, 0);
		testMethod(555, -0.3877, -1.6311, -3.4705, 0.1311, 0, 0);
		testMethod(560, -0.3959, -1.648, -3.3713, 0.1311, -0, -0);
		testMethod(565, -0.4042, -1.6644, -3.2722, 0.1311, -0.0003, -0.0637);
		testMethod(570, -0.4126, -1.6802, -3.173, 0.1311, -0.0013, -0.1956);
		testMethod(575, -0.421, -1.6956, -3.0739, 0.1311, -0.003, -0.3347);
		testMethod(580, -0.4295, -1.7105, -2.9747, 0.131, -0.0054, -0.4808);
		testMethod(585, -0.4381, -1.7248, -2.8756, 0.131, -0.0085, -0.6337);
		testMethod(590, -0.4468, -1.7387, -2.7764, 0.131, -0.0125, -0.793);
		testMethod(595, -0.4555, -1.7521, -2.6772, 0.1309, -0.0173, -0.9585);
		testMethod(600, -0.4643, -1.765, -2.5781, 0.1308, -0.023, -1.13);
		testMethod(605, -0.4732, -1.7774, -2.4789, 0.1306, -0.0295, -1.307);
		testMethod(610, -0.4821, -1.7893, -2.3798, 0.1305, -0.0369, -1.4893);
		testMethod(615, -0.4911, -1.8007, -2.2806, 0.1303, -0.0453, -1.6765);
		testMethod(620, -0.5001, -1.8116, -2.1815, 0.13, -0.0547, -1.8682);
		testMethod(625, -0.5092, -1.822, -2.0823, 0.1297, -0.065, -2.0641);
		testMethod(630, -0.5183, -1.8319, -1.9831, 0.1294, -0.0763, -2.2637);
		testMethod(635, -0.5275, -1.8413, -1.884, 0.129, -0.0886, -2.4667);
		testMethod(640, -0.5367, -1.8503, -1.7848, 0.1285, -0.102, -2.6725);
		testMethod(645, -0.546, -1.8587, -1.6857, 0.1279, -0.1164, -2.8809);
		testMethod(650, -0.5553, -1.8666, -1.5865, 0.1273, -0.1319, -3.0913);
		testMethod(655, -0.5646, -1.8741, -1.4874, 0.1266, -0.1484, -3.3032);
		testMethod(660, -0.574, -1.881, -1.3882, 0.1258, -0.1659, -3.5163);
		testMethod(665, -0.5835, -1.8875, -1.289, 0.125, -0.1846, -3.73);
		testMethod(670, -0.5929, -1.8934, -1.1899, 0.124, -0.2043, -3.9438);
		testMethod(675, -0.6024, -1.8989, -1.0907, 0.1229, -0.2251, -4.1573);
		testMethod(680, -0.6119, -1.9038, -0.9916, 0.1217, -0.247, -4.37);
		testMethod(685, -0.6214, -1.9083, -0.8924, 0.1204, -0.2699, -4.5812);
		testMethod(690, -0.631, -1.9122, -0.7933, 0.119, -0.2938, -4.7907);
		testMethod(695, -0.6405, -1.9157, -0.6941, 0.1175, -0.3188, -4.9977);
		testMethod(700, -0.6501, -1.9187, -0.5949, 0.1158, -0.3448, -5.2019);
		testMethod(705, -0.6597, -1.9212, -0.4958, 0.1141, -0.3718, -5.4026);
		testMethod(710, -0.6693, -1.9232, -0.3966, 0.1121, -0.3998, -5.5994);
		testMethod(715, -0.679, -1.9246, -0.2975, 0.1101, -0.4288, -5.7918);
		testMethod(720, -0.6886, -1.9256, -0.1983, 0.1078, -0.4587, -5.9792);
		testMethod(725, -0.6982, -1.9261, -0.0992, 0.1055, -0.4896, -6.1873);
		testMethod(730, -0.7079, -1.9261, -0, 0.1029, -0.52, -6.0692);
		testMethod(735, -0.7175, -1.9261, -0, 0.1003, -0.5493, -5.8705);
		testMethod(740, -0.7271, -1.9261, -0, 0.0975, -0.5777, -5.6717);
		testMethod(745, -0.7367, -1.9261, -0, 0.0945, -0.605, -5.473);
		testMethod(750, -0.7464, -1.9261, -0, 0.0914, -0.6314, -5.2743);
		testMethod(755, -0.756, -1.9261, -0, 0.0882, -0.6568, -5.0756);
		testMethod(760, -0.7656, -1.9261, -0, 0.0848, -0.6812, -4.8769);
		testMethod(765, -0.7753, -1.9261, -0, 0.0814, -0.7046, -4.6782);
		testMethod(770, -0.7849, -1.9261, -0, 0.0778, -0.727, -4.4794);
		testMethod(775, -0.7945, -1.9261, -0, 0.0741, -0.7484, -4.2807);
		testMethod(780, -0.8042, -1.9261, -0, 0.0703, -0.7688, -4.082);
		testMethod(785, -0.8138, -1.9261, -0, 0.0664, -0.7882, -3.8833);
		testMethod(790, -0.8234, -1.9261, -0, 0.0624, -0.8066, -3.6846);
		testMethod(795, -0.833, -1.9261, -0, 0.0584, -0.824, -3.4859);
		testMethod(800, -0.8427, -1.9261, -0, 0.0542, -0.8405, -3.2871);
		testMethod(805, -0.8523, -1.9261, -0, 0.0499, -0.8559, -3.0884);
		testMethod(810, -0.8619, -1.9261, -0, 0.0456, -0.8704, -2.8897);
		testMethod(815, -0.8716, -1.9261, -0, 0.0412, -0.8838, -2.691);
		testMethod(820, -0.8812, -1.9261, -0, 0.0368, -0.8963, -2.4923);
		testMethod(825, -0.8908, -1.9261, -0, 0.0323, -0.9077, -2.2935);
		testMethod(830, -0.9005, -1.9261, -0, 0.0277, -0.9182, -2.0948);
		testMethod(835, -0.9101, -1.9261, -0, 0.0231, -0.9277, -1.8961);
		testMethod(840, -0.9197, -1.9261, -0, 0.0184, -0.9362, -1.6974);
		testMethod(845, -0.9294, -1.9261, -0, 0.0137, -0.9437, -1.4987);
		testMethod(850, -0.939, -1.9261, -0, 0.009, -0.9502, -1.3);
		testMethod(855, -0.9486, -1.9261, -0, 0.0042, -0.9557, -1.1012);
		testMethod(860, -0.9582, -1.9261, -0, -0.0005, -0.9602, -0.9025);
		testMethod(865, -0.9679, -1.9261, -0, -0.0054, -0.9637, -0.7038);
		testMethod(870, -0.9775, -1.9261, -0, -0.0102, -0.9662, -0.5051);
		testMethod(875, -0.9871, -1.9261, -0, -0.015, -0.9678, -0.3064);
		testMethod(880, -0.9968, -1.9261, -0, -0.0199, -0.9683, -0.1077);
		testMethod(885, -1.0064, -1.9261, -0, -0.0247, -0.9679, 0.092);
		testMethod(890, -1.016, -1.9261, -0, -0.0295, -0.9664, 0.2908);
		testMethod(895, -1.0257, -1.9261, -0, -0.0344, -0.964, 0.4895);
		testMethod(900, -1.0353, -1.9261, -0, -0.0392, -0.9605, 0.6882);
		testMethod(905, -1.0449, -1.9261, -0, -0.044, -0.9561, 0.887);
		testMethod(910, -1.0546, -1.9261, -0, -0.0487, -0.9507, 1.0857);
		testMethod(915, -1.0642, -1.9261, -0, -0.0535, -0.9442, 1.2844);
		testMethod(920, -1.0738, -1.9261, -0, -0.0582, -0.9368, 1.4831);
		testMethod(925, -1.0834, -1.9261, -0, -0.0628, -0.9284, 1.6818);
		testMethod(930, -1.0931, -1.9261, -0, -0.0675, -0.919, 1.8805);
		testMethod(935, -1.1027, -1.9261, -0, -0.072, -0.9086, 2.0793);
		testMethod(940, -1.1123, -1.9261, -0, -0.0765, -0.8972, 2.278);
		testMethod(945, -1.122, -1.9261, -0, -0.081, -0.8848, 2.4767);
		testMethod(950, -1.1316, -1.9261, -0, -0.0854, -0.8715, 2.6754);
		testMethod(955, -1.1412, -1.9261, -0, -0.0897, -0.8571, 2.8741);
		testMethod(960, -1.1509, -1.9261, -0, -0.094, -0.8417, 3.0728);
		testMethod(965, -1.1605, -1.9261, -0, -0.0981, -0.8254, 3.2716);
		testMethod(970, -1.1701, -1.9261, -0, -0.1022, -0.808, 3.4703);
		testMethod(975, -1.1798, -1.9261, -0, -0.1062, -0.7897, 3.669);
		testMethod(980, -1.1894, -1.9261, -0, -0.1101, -0.7703, 3.8677);
		testMethod(985, -1.199, -1.9261, -0, -0.1139, -0.75, 4.0664);
		testMethod(990, -1.2086, -1.9261, -0, -0.1176, -0.7287, 4.2651);
		testMethod(995, -1.2183, -1.9261, -0, -0.1212, -0.7064, 4.4639);
		testMethod(1000, -1.2279, -1.9261, -0, -0.1247, -0.683, 4.6626);
		testMethod(1005, -1.2375, -1.9261, -0, -0.128, -0.6587, 4.8613);
		testMethod(1010, -1.2472, -1.9261, -0, -0.1312, -0.6334, 5.06);
		testMethod(1015, -1.2568, -1.9261, -0, -0.1343, -0.6071, 5.2587);
		testMethod(1020, -1.2664, -1.9261, -0, -0.1373, -0.5799, 5.4574);
		testMethod(1025, -1.2761, -1.9261, -0, -0.1401, -0.5516, 5.6562);
		testMethod(1030, -1.2857, -1.9261, -0, -0.1428, -0.5223, 5.8549);
		testMethod(1035, -1.2953, -1.9261, -0, -0.1454, -0.492, 6.0536);
		testMethod(1040, -1.305, -1.9261, -0, -0.1477, -0.4612, 6.1734);
		testMethod(1045, -1.3146, -1.9261, -0, -0.15, -0.4314, 5.9551);
		testMethod(1050, -1.3242, -1.9261, -0, -0.1521, -0.4026, 5.7564);
		testMethod(1055, -1.3338, -1.9261, -0, -0.154, -0.3748, 5.5576);
		testMethod(1060, -1.3435, -1.9261, -0, -0.1558, -0.348, 5.3589);
		testMethod(1065, -1.3531, -1.9261, -0, -0.1575, -0.3222, 5.1602);
		testMethod(1070, -1.3627, -1.9261, -0, -0.159, -0.2974, 4.9615);
		testMethod(1075, -1.3724, -1.9261, -0, -0.1605, -0.2736, 4.7628);
		testMethod(1080, -1.382, -1.9261, -0, -0.1618, -0.2508, 4.5641);
		testMethod(1085, -1.3916, -1.9261, -0, -0.163, -0.229, 4.3653);
		testMethod(1090, -1.4013, -1.9261, -0, -0.1641, -0.2081, 4.1666);
		testMethod(1095, -1.4109, -1.9261, -0, -0.1651, -0.1883, 3.9679);
		testMethod(1100, -1.4205, -1.9261, -0, -0.166, -0.1694, 3.7692);
		testMethod(1105, -1.4301, -1.9261, -0, -0.1668, -0.1516, 3.5705);
		testMethod(1110, -1.4398, -1.9261, -0, -0.1675, -0.1347, 3.3718);
		testMethod(1115, -1.4494, -1.9261, -0, -0.1681, -0.1189, 3.173);
		testMethod(1120, -1.459, -1.9261, -0, -0.1687, -0.104, 2.9743);
		testMethod(1125, -1.4687, -1.9261, -0, -0.1691, -0.0901, 2.7756);
		testMethod(1130, -1.4783, -1.9261, -0, -0.1696, -0.0772, 2.5769);
		testMethod(1135, -1.4879, -1.9261, -0, -0.1699, -0.0653, 2.3782);
		testMethod(1140, -1.4976, -1.9261, -0, -0.1702, -0.0544, 2.1795);
		testMethod(1145, -1.5072, -1.9261, -0, -0.1705, -0.0445, 1.9807);
		testMethod(1150, -1.5168, -1.9261, -0, -0.1707, -0.0356, 1.782);
		testMethod(1155, -1.5265, -1.9261, -0, -0.1708, -0.0277, 1.5833);
		testMethod(1160, -1.5361, -1.9261, -0, -0.1709, -0.0208, 1.3846);
		testMethod(1165, -1.5457, -1.9261, -0, -0.171, -0.0149, 1.1859);
		testMethod(1170, -1.5553, -1.9261, -0, -0.1711, -0.0099, 0.9871);
		testMethod(1175, -1.565, -1.9261, -0, -0.1711, -0.006, 0.7884);
		testMethod(1180, -1.5746, -1.9261, -0, -0.1712, -0.003, 0.5897);
		testMethod(1185, -1.5842, -1.9261, -0, -0.1712, -0.0011, 0.391);
		testMethod(1190, -1.5939, -1.9261, -0, -0.1712, -0.0001, 0.1923);
		testMethod(1195, -1.6035, -1.9261, -0, -0.1712, 0, 0.0217);
		testMethod(1200, -1.6131, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1205, -1.6228, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1210, -1.6324, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1215, -1.642, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1220, -1.6517, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1225, -1.6613, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1230, -1.6709, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1235, -1.6805, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1240, -1.6902, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1245, -1.6998, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1250, -1.7094, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1255, -1.7191, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1260, -1.7287, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1265, -1.7383, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1270, -1.748, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1275, -1.7576, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1280, -1.7672, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1285, -1.7769, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1290, -1.7865, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1295, -1.7961, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1300, -1.8057, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1305, -1.8154, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1310, -1.825, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1315, -1.8346, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1320, -1.8443, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1325, -1.8539, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1330, -1.8635, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1335, -1.8732, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1340, -1.8828, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1345, -1.8924, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1350, -1.902, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1355, -1.9117, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1360, -1.9213, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1365, -1.9309, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1370, -1.9406, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1375, -1.9502, -1.9261, -0, -0.1712, 0, 0);
		testMethod(1380, -1.9598, -1.9261, -0, -0.1712, 0.0002, 0.0407);
		testMethod(1385, -1.9695, -1.9261, -0, -0.1712, 0.0013, 0.2265);
		testMethod(1390, -1.9791, -1.9261, -0, -0.1712, 0.0035, 0.4253);
		testMethod(1395, -1.9887, -1.9261, -0, -0.1711, 0.0066, 0.624);
		testMethod(1400, -1.9984, -1.9261, -0, -0.1711, 0.0107, 0.8227);
		testMethod(1405, -2.008, -1.9261, -0, -0.171, 0.0158, 1.0214);
		testMethod(1410, -2.0176, -1.9261, -0, -0.1709, 0.0219, 1.2201);
		testMethod(1415, -2.0272, -1.9261, -0, -0.1708, 0.029, 1.4188);
		testMethod(1420, -2.0369, -1.9261, -0, -0.1706, 0.0371, 1.6176);
		testMethod(1425, -2.0465, -1.9261, -0, -0.1704, 0.0462, 1.8163);
		testMethod(1430, -2.0561, -1.9261, -0, -0.1702, 0.0562, 2.015);
		testMethod(1435, -2.0658, -1.9261, -0, -0.1699, 0.0673, 2.2137);
		testMethod(1440, -2.0754, -1.9261, -0, -0.1695, 0.0794, 2.4124);
		testMethod(1445, -2.085, -1.9261, -0, -0.1691, 0.0924, 2.6112);
		testMethod(1450, -2.0947, -1.9261, -0, -0.1686, 0.1065, 2.8099);
		testMethod(1455, -2.1043, -1.9261, -0, -0.168, 0.1215, 3.0086);
		testMethod(1460, -2.1139, -1.9261, -0, -0.1674, 0.1376, 3.2073);
		testMethod(1465, -2.1236, -1.9261, -0, -0.1666, 0.1546, 3.406);
		testMethod(1470, -2.1332, -1.9261, -0, -0.1658, 0.1726, 3.6047);
		testMethod(1475, -2.1428, -1.9261, -0, -0.1649, 0.1916, 3.8035);
		testMethod(1480, -2.1524, -1.9261, -0, -0.1639, 0.2116, 4.0022);
		testMethod(1485, -2.1621, -1.9261, -0, -0.1628, 0.2326, 4.2009);
		testMethod(1490, -2.1717, -1.9261, -0, -0.1616, 0.2546, 4.3996);
		testMethod(1495, -2.1813, -1.9261, -0, -0.1602, 0.2776, 4.5983);
		testMethod(1500, -2.191, -1.9261, -0, -0.1588, 0.3016, 4.797);
		testMethod(1505, -2.2006, -1.9261, -0, -0.1572, 0.3266, 4.9958);
		testMethod(1510, -2.2102, -1.9261, -0, -0.1555, 0.352, 5.0808);
		testMethod(1515, -2.2199, -1.9261, -0, -0.1537, 0.3764, 4.8788);
		testMethod(1520, -2.2295, -1.9261, -0, -0.1518, 0.3998, 4.6801);
		testMethod(1525, -2.2391, -1.9261, -0, -0.1497, 0.4222, 4.4814);
		testMethod(1530, -2.2488, -1.9261, -0, -0.1475, 0.4436, 4.2826);
		testMethod(1535, -2.2584, -1.9261, -0, -0.1453, 0.464, 4.0839);
		testMethod(1540, -2.268, -1.9261, -0, -0.1429, 0.4835, 3.8852);
		testMethod(1545, -2.2776, -1.9261, -0, -0.1404, 0.5019, 3.6865);
		testMethod(1550, -2.2873, -1.9261, -0, -0.1379, 0.5193, 3.4878);
		testMethod(1555, -2.2969, -1.9261, -0, -0.1352, 0.5358, 3.2891);
		testMethod(1560, -2.3065, -1.9261, -0, -0.1325, 0.5512, 3.0903);
		testMethod(1565, -2.3162, -1.9261, -0, -0.1297, 0.5657, 2.8916);
		testMethod(1570, -2.3258, -1.9261, -0, -0.1269, 0.5792, 2.6929);
		testMethod(1575, -2.3354, -1.9261, -0, -0.1239, 0.5916, 2.4942);
		testMethod(1580, -2.3451, -1.9261, -0, -0.1209, 0.6031, 2.2955);
		testMethod(1585, -2.3547, -1.9261, -0, -0.1179, 0.6136, 2.0968);
		testMethod(1590, -2.3643, -1.9261, -0, -0.1148, 0.6231, 1.898);
		testMethod(1595, -2.374, -1.9261, -0, -0.1117, 0.6316, 1.6993);
		testMethod(1600, -2.3836, -1.9261, -0, -0.1085, 0.6391, 1.5006);
		testMethod(1605, -2.3932, -1.9261, -0, -0.1053, 0.6456, 1.3019);
		testMethod(1610, -2.4028, -1.9261, -0, -0.102, 0.6511, 1.1032);
		testMethod(1615, -2.4125, -1.9261, -0, -0.0988, 0.6556, 0.9045);
		testMethod(1620, -2.4221, -1.9256, 0.0992, -0.0955, 0.659, 0.6717);
		testMethod(1625, -2.4317, -1.9246, 0.1983, -0.0922, 0.6612, 0.4386);
		testMethod(1630, -2.4413, -1.9232, 0.2975, -0.0889, 0.6622, 0.2055);
		testMethod(1635, -2.451, -1.9212, 0.3966, -0.0856, 0.6621, -0.0269);
		testMethod(1640, -2.4606, -1.9187, 0.4958, -0.0823, 0.6608, -0.2587);
		testMethod(1645, -2.4701, -1.9157, 0.5949, -0.079, 0.6583, -0.4885);
		testMethod(1650, -2.4797, -1.9122, 0.6941, -0.0757, 0.6548, -0.7161);
		testMethod(1655, -2.4893, -1.9083, 0.7933, -0.0724, 0.65, -0.9411);
		testMethod(1660, -2.4988, -1.9038, 0.8924, -0.0692, 0.6442, -1.163);
		testMethod(1665, -2.5083, -1.8989, 0.9916, -0.066, 0.6373, -1.3813);
		testMethod(1670, -2.5178, -1.8934, 1.0907, -0.0628, 0.6293, -1.5955);
		testMethod(1675, -2.5272, -1.8875, 1.1899, -0.0597, 0.6203, -1.8053);
		testMethod(1680, -2.5367, -1.881, 1.289, -0.0566, 0.6103, -2.01);
		testMethod(1685, -2.546, -1.8741, 1.3882, -0.0536, 0.5992, -2.2093);
		testMethod(1690, -2.5554, -1.8666, 1.4874, -0.0506, 0.5872, -2.4028);
		testMethod(1695, -2.5647, -1.8587, 1.5865, -0.0477, 0.5743, -2.5899);
		testMethod(1700, -2.574, -1.8503, 1.6857, -0.0449, 0.5604, -2.7703);
		testMethod(1705, -2.5832, -1.8413, 1.7848, -0.0421, 0.5457, -2.9437);
		testMethod(1710, -2.5924, -1.8319, 1.884, -0.0394, 0.5301, -3.1095);
		testMethod(1715, -2.6015, -1.822, 1.9831, -0.0368, 0.5138, -3.2675);
		testMethod(1720, -2.6106, -1.8116, 2.0823, -0.0343, 0.4967, -3.4173);
		testMethod(1725, -2.6196, -1.8007, 2.1815, -0.0318, 0.4789, -3.5585);
		testMethod(1730, -2.6286, -1.7893, 2.2806, -0.0295, 0.4605, -3.6908);
		testMethod(1735, -2.6375, -1.7774, 2.3798, -0.0272, 0.4414, -3.814);
		testMethod(1740, -2.6464, -1.765, 2.4789, -0.0251, 0.4218, -3.9277);
		testMethod(1745, -2.6552, -1.7521, 2.5781, -0.023, 0.4016, -4.0317);
		testMethod(1750, -2.6639, -1.7387, 2.6772, -0.0211, 0.381, -4.1257);
		testMethod(1755, -2.6726, -1.7248, 2.7764, -0.0192, 0.3599, -4.2096);
		testMethod(1760, -2.6812, -1.7105, 2.8756, -0.0175, 0.3385, -4.283);
		testMethod(1765, -2.6897, -1.6956, 2.9747, -0.0158, 0.3168, -4.3459);
		testMethod(1770, -2.6981, -1.6802, 3.0739, -0.0143, 0.2948, -4.3981);
		testMethod(1775, -2.7065, -1.6644, 3.173, -0.0129, 0.2729, -4.3808);
		testMethod(1780, -2.7148, -1.648, 3.2722, -0.0116, 0.2521, -4.1596);
		testMethod(1785, -2.723, -1.6311, 3.3713, -0.0104, 0.2324, -3.9433);
		testMethod(1790, -2.7311, -1.6138, 3.4705, -0.0092, 0.2137, -3.7314);
		testMethod(1795, -2.7391, -1.5964, 3.4705, -0.0082, 0.1962, -3.5125);
		testMethod(1800, -2.747, -1.5791, 3.4705, -0.0073, 0.1796, -3.3022);
		testMethod(1805, -2.7549, -1.5617, 3.4705, -0.0064, 0.1641, -3.1002);
		testMethod(1810, -2.7626, -1.5444, 3.4705, -0.0056, 0.1496, -2.9064);
		testMethod(1815, -2.7703, -1.527, 3.4705, -0.0049, 0.136, -2.7205);
		testMethod(1820, -2.7779, -1.5097, 3.4705, -0.0043, 0.1233, -2.5423);
		testMethod(1825, -2.7854, -1.4923, 3.4705, -0.0037, 0.1114, -2.3717);
		testMethod(1830, -2.7928, -1.475, 3.4705, -0.0032, 0.1004, -2.2085);
		testMethod(1835, -2.8002, -1.4576, 3.4705, -0.0027, 0.0901, -2.0524);
		testMethod(1840, -2.8074, -1.4403, 3.4705, -0.0023, 0.0806, -1.9033);
		testMethod(1845, -2.8146, -1.4229, 3.4705, -0.0019, 0.0718, -1.7611);
		testMethod(1850, -2.8216, -1.4056, 3.4705, -0.0015, 0.0637, -1.6254);
		testMethod(1855, -2.8286, -1.3882, 3.4705, -0.0012, 0.0562, -1.4963);
		testMethod(1860, -2.8355, -1.3708, 3.4705, -0.001, 0.0493, -1.3734);
		testMethod(1865, -2.8423, -1.3535, 3.4705, -0.0007, 0.0431, -1.2565);
		testMethod(1870, -2.8491, -1.3361, 3.4705, -0.0005, 0.0373, -1.1457);
		testMethod(1875, -2.8557, -1.3188, 3.4705, -0.0004, 0.0321, -1.0405);
		testMethod(1880, -2.8622, -1.3014, 3.4705, -0.0002, 0.0274, -0.941);
		testMethod(1885, -2.8687, -1.2841, 3.4705, -0.0001, 0.0232, -0.8469);
		testMethod(1890, -2.8751, -1.2667, 3.4705, 0, 0.0194, -0.7581);
		testMethod(1895, -2.8814, -1.2494, 3.4705, 0.0001, 0.016, -0.6743);
		testMethod(1900, -2.8876, -1.232, 3.4705, 0.0002, 0.013, -0.5955);
		testMethod(1905, -2.8937, -1.2147, 3.4705, 0.0002, 0.0104, -0.5215);
		testMethod(1910, -2.8997, -1.1973, 3.4705, 0.0003, 0.0082, -0.4521);
		testMethod(1915, -2.9057, -1.18, 3.4705, 0.0003, 0.0062, -0.3871);
		testMethod(1920, -2.9115, -1.1626, 3.4705, 0.0003, 0.0046, -0.3265);
		testMethod(1925, -2.9173, -1.1453, 3.4705, 0.0004, 0.0033, -0.2701);
		testMethod(1930, -2.923, -1.1279, 3.4705, 0.0004, 0.0022, -0.2177);
		testMethod(1935, -2.9286, -1.1106, 3.4705, 0.0004, 0.0013, -0.1692);
		testMethod(1940, -2.9341, -1.0932, 3.4705, 0.0004, 0.0007, -0.1244);
		testMethod(1945, -2.9395, -1.0759, 3.4705, 0.0004, 0.0003, -0.0833);
		testMethod(1950, -2.9448, -1.0585, 3.4705, 0.0004, 0.0001, -0.0456);
		testMethod(1955, -2.9501, -1.0411, 3.4705, 0.0004, 0, -0.0116);
		testMethod(1960, -2.9553, -1.0238, 3.4705, 0.0004, 0, 0);
		testMethod(1965, -2.9603, -1.0064, 3.4705, 0.0004, 0, 0);
		testMethod(1970, -2.9653, -0.9891, 3.4705, 0.0004, 0, 0);
		testMethod(1975, -2.9702, -0.9717, 3.4705, 0.0004, 0, 0);
		testMethod(1980, -2.975, -0.9544, 3.4705, 0.0004, 0, 0);
		testMethod(1985, -2.9798, -0.937, 3.4705, 0.0004, 0, 0);
		testMethod(1990, -2.9844, -0.9197, 3.4705, 0.0004, 0, 0);
		testMethod(1995, -2.989, -0.9023, 3.4705, 0.0004, 0, 0);
		testMethod(2000, -2.9934, -0.885, 3.4705, 0.0004, 0, 0);
		testMethod(2005, -2.9978, -0.8676, 3.4705, 0.0004, 0, 0);
		testMethod(2010, -3.0021, -0.8503, 3.4705, 0.0004, 0, 0);
		testMethod(2015, -3.0063, -0.8329, 3.4705, 0.0004, 0, 0);
		testMethod(2020, -3.0104, -0.8156, 3.4705, 0.0004, 0, 0);
		testMethod(2025, -3.0145, -0.7982, 3.4705, 0.0004, 0, 0);
		testMethod(2030, -3.0184, -0.7809, 3.4705, 0.0004, 0, 0);
		testMethod(2035, -3.0223, -0.7635, 3.4705, 0.0004, 0, 0);
		testMethod(2040, -3.0261, -0.7462, 3.4705, 0.0004, 0, 0);
		testMethod(2045, -3.0297, -0.7288, 3.4705, 0.0004, 0, 0);
		testMethod(2050, -3.0333, -0.7115, 3.4705, 0.0004, 0, 0);
		testMethod(2055, -3.0369, -0.6941, 3.4705, 0.0004, 0, 0);
		testMethod(2060, -3.0403, -0.6767, 3.4705, 0.0004, 0, 0);
		testMethod(2065, -3.0436, -0.6594, 3.4705, 0.0004, 0, 0);
		testMethod(2070, -3.0469, -0.642, 3.4705, 0.0004, 0, 0);
		testMethod(2075, -3.05, -0.6247, 3.4705, 0.0004, 0, 0);
		testMethod(2080, -3.0531, -0.6073, 3.4705, 0.0004, 0, 0);
		testMethod(2085, -3.0561, -0.59, 3.4705, 0.0004, 0, 0);
		testMethod(2090, -3.059, -0.5726, 3.4705, 0.0004, 0, 0);
		testMethod(2095, -3.0618, -0.5553, 3.4705, 0.0004, 0, 0);
		testMethod(2100, -3.0646, -0.5379, 3.4705, 0.0004, 0, 0);
		testMethod(2105, -3.0672, -0.5206, 3.4705, 0.0004, 0, 0);
		testMethod(2110, -3.0698, -0.5032, 3.4705, 0.0004, 0, 0);
		testMethod(2115, -3.0723, -0.4859, 3.4705, 0.0004, 0, 0);
		testMethod(2120, -3.0746, -0.4685, 3.4705, 0.0004, 0, 0);
		testMethod(2125, -3.0769, -0.4512, 3.4705, 0.0004, 0, 0);
		testMethod(2130, -3.0792, -0.4338, 3.4705, 0.0004, 0, 0);
		testMethod(2135, -3.0813, -0.4165, 3.4705, 0.0004, 0, 0);
		testMethod(2140, -3.0833, -0.3991, 3.4705, 0.0004, 0, 0);
		testMethod(2145, -3.0853, -0.3818, 3.4705, 0.0004, 0, 0);
		testMethod(2150, -3.0871, -0.3644, 3.4705, 0.0004, 0, 0);
		testMethod(2155, -3.0889, -0.347, 3.4705, 0.0004, 0, 0);
		testMethod(2160, -3.0906, -0.3297, 3.4705, 0.0004, 0, 0);
		testMethod(2165, -3.0922, -0.3123, 3.4705, 0.0004, 0, 0);
		testMethod(2170, -3.0937, -0.295, 3.4705, 0.0004, 0, 0);
		testMethod(2175, -3.0952, -0.2781, 3.3713, 0.0004, 0, 0);
		testMethod(2180, -3.0965, -0.2618, 3.2722, 0.0004, 0, 0);
		testMethod(2185, -3.0978, -0.2459, 3.173, 0.0004, 0, 0);
		testMethod(2190, -3.099, -0.2305, 3.0739, 0.0004, 0, 0);
		testMethod(2195, -3.1001, -0.2157, 2.9747, 0.0004, 0, 0);
		testMethod(2200, -3.1011, -0.2013, 2.8756, 0.0004, 0, 0);
		testMethod(2205, -3.1021, -0.1874, 2.7764, 0.0004, 0, 0);
		testMethod(2210, -3.103, -0.174, 2.6772, 0.0004, 0, 0);
		testMethod(2215, -3.1038, -0.1611, 2.5781, 0.0004, 0, 0);
		testMethod(2220, -3.1046, -0.1487, 2.4789, 0.0004, 0, 0);
		testMethod(2225, -3.1053, -0.1368, 2.3798, 0.0004, 0, 0);
		testMethod(2230, -3.106, -0.1254, 2.2806, 0.0004, 0, 0);
		testMethod(2235, -3.1066, -0.1145, 2.1815, 0.0004, 0, 0);
		testMethod(2240, -3.1071, -0.1041, 2.0823, 0.0004, 0, 0);
		testMethod(2245, -3.1076, -0.0942, 1.9831, 0.0004, 0, 0);
		testMethod(2250, -3.1081, -0.0848, 1.884, 0.0004, 0, 0);
		testMethod(2255, -3.1085, -0.0759, 1.7848, 0.0004, 0, 0);
		testMethod(2260, -3.1088, -0.0674, 1.6857, 0.0004, 0, 0);
		testMethod(2265, -3.1092, -0.0595, 1.5865, 0.0004, 0, 0);
		testMethod(2270, -3.1094, -0.0521, 1.4874, 0.0004, 0, 0);
		testMethod(2275, -3.1097, -0.0451, 1.3882, 0.0004, 0, 0);
		testMethod(2280, -3.1099, -0.0387, 1.289, 0.0004, 0, 0);
		testMethod(2285, -3.1101, -0.0327, 1.1899, 0.0004, 0, 0);
		testMethod(2290, -3.1102, -0.0273, 1.0907, 0.0004, 0, 0);
		testMethod(2295, -3.1103, -0.0223, 0.9916, 0.0004, 0, 0);
		testMethod(2300, -3.1104, -0.0178, 0.8924, 0.0004, 0, 0);
		testMethod(2305, -3.1105, -0.0139, 0.7933, 0.0004, 0, 0);
		testMethod(2310, -3.1106, -0.0104, 0.6941, 0.0004, 0, 0);
		testMethod(2315, -3.1106, -0.0074, 0.5949, 0.0004, 0, 0);
		testMethod(2320, -3.1107, -0.005, 0.4958, 0.0004, 0, 0);
		testMethod(2325, -3.1107, -0.003, 0.3966, 0.0004, 0, 0);
		testMethod(2330, -3.1107, -0.0015, 0.2975, 0.0004, 0, 0);
		testMethod(2335, -3.1107, -0.0005, 0.1983, 0.0004, 0, 0);
		testMethod(2340, -3.1107, -0, 0.0992, 0.0004, 0, 0);
		testMethod(2345, -3.1107, -0, -0, 0.0004, 0, 0);
		testMethod(2345, -3.1107, -0, -0, 0.0004, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}